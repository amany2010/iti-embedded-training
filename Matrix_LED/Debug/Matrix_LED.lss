
Matrix_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000030f2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000030f2  00003166  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001c8c  00000000  00000000  00003170  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000089a  00000000  00000000  00004dfc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00005696  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  000057d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005946  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000758f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000847a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  00009228  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  00009388  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009615  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009de3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ef       	ldi	r30, 0xF2	; 242
      68:	f0 e3       	ldi	r31, 0x30	; 48
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 36       	cpi	r26, 0x68	; 104
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 25 18 	call	0x304a	; 0x304a <main>
      7a:	0c 94 77 18 	jmp	0x30ee	; 0x30ee <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 40 18 	jmp	0x3080	; 0x3080 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 5c 18 	jmp	0x30b8	; 0x30b8 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 4c 18 	jmp	0x3098	; 0x3098 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 68 18 	jmp	0x30d0	; 0x30d0 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 4c 18 	jmp	0x3098	; 0x3098 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 68 18 	jmp	0x30d0	; 0x30d0 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 40 18 	jmp	0x3080	; 0x3080 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 5c 18 	jmp	0x30b8	; 0x30b8 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 4c 18 	jmp	0x3098	; 0x3098 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 68 18 	jmp	0x30d0	; 0x30d0 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 4c 18 	jmp	0x3098	; 0x3098 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 68 18 	jmp	0x30d0	; 0x30d0 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 4c 18 	jmp	0x3098	; 0x3098 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 68 18 	jmp	0x30d0	; 0x30d0 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 50 18 	jmp	0x30a0	; 0x30a0 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 6c 18 	jmp	0x30d8	; 0x30d8 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <UP>:
#include "util/delay.h"
#define FCPU 800000000ul			/* define CPU				      */
#include"Bit_Math.h"				/* include BIT MAth Library       */
#include"STD_TYPES.h"				/* include Standard Types Library */
void UP()
{
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	c0 57       	subi	r28, 0x70	; 112
     b44:	d0 40       	sbci	r29, 0x00	; 0
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61

	PORTA=0xFF;
     b50:	eb e3       	ldi	r30, 0x3B	; 59
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	8f ef       	ldi	r24, 0xFF	; 255
     b56:	80 83       	st	Z, r24
	PORTB=0xFE;
     b58:	e8 e3       	ldi	r30, 0x38	; 56
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	8e ef       	ldi	r24, 0xFE	; 254
     b5e:	80 83       	st	Z, r24
     b60:	fe 01       	movw	r30, r28
     b62:	e3 59       	subi	r30, 0x93	; 147
     b64:	ff 4f       	sbci	r31, 0xFF	; 255
     b66:	80 e0       	ldi	r24, 0x00	; 0
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	a0 ea       	ldi	r26, 0xA0	; 160
     b6c:	b1 e4       	ldi	r27, 0x41	; 65
     b6e:	80 83       	st	Z, r24
     b70:	91 83       	std	Z+1, r25	; 0x01
     b72:	a2 83       	std	Z+2, r26	; 0x02
     b74:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b76:	8e 01       	movw	r16, r28
     b78:	07 59       	subi	r16, 0x97	; 151
     b7a:	1f 4f       	sbci	r17, 0xFF	; 255
     b7c:	fe 01       	movw	r30, r28
     b7e:	e3 59       	subi	r30, 0x93	; 147
     b80:	ff 4f       	sbci	r31, 0xFF	; 255
     b82:	60 81       	ld	r22, Z
     b84:	71 81       	ldd	r23, Z+1	; 0x01
     b86:	82 81       	ldd	r24, Z+2	; 0x02
     b88:	93 81       	ldd	r25, Z+3	; 0x03
     b8a:	20 e0       	ldi	r18, 0x00	; 0
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	4a ef       	ldi	r20, 0xFA	; 250
     b90:	54 e4       	ldi	r21, 0x44	; 68
     b92:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     b96:	dc 01       	movw	r26, r24
     b98:	cb 01       	movw	r24, r22
     b9a:	f8 01       	movw	r30, r16
     b9c:	80 83       	st	Z, r24
     b9e:	91 83       	std	Z+1, r25	; 0x01
     ba0:	a2 83       	std	Z+2, r26	; 0x02
     ba2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     ba4:	fe 01       	movw	r30, r28
     ba6:	e7 59       	subi	r30, 0x97	; 151
     ba8:	ff 4f       	sbci	r31, 0xFF	; 255
     baa:	60 81       	ld	r22, Z
     bac:	71 81       	ldd	r23, Z+1	; 0x01
     bae:	82 81       	ldd	r24, Z+2	; 0x02
     bb0:	93 81       	ldd	r25, Z+3	; 0x03
     bb2:	20 e0       	ldi	r18, 0x00	; 0
     bb4:	30 e0       	ldi	r19, 0x00	; 0
     bb6:	40 e8       	ldi	r20, 0x80	; 128
     bb8:	5f e3       	ldi	r21, 0x3F	; 63
     bba:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     bbe:	88 23       	and	r24, r24
     bc0:	44 f4       	brge	.+16     	; 0xbd2 <UP+0x9c>
		__ticks = 1;
     bc2:	fe 01       	movw	r30, r28
     bc4:	e9 59       	subi	r30, 0x99	; 153
     bc6:	ff 4f       	sbci	r31, 0xFF	; 255
     bc8:	81 e0       	ldi	r24, 0x01	; 1
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	91 83       	std	Z+1, r25	; 0x01
     bce:	80 83       	st	Z, r24
     bd0:	64 c0       	rjmp	.+200    	; 0xc9a <UP+0x164>
	else if (__tmp > 65535)
     bd2:	fe 01       	movw	r30, r28
     bd4:	e7 59       	subi	r30, 0x97	; 151
     bd6:	ff 4f       	sbci	r31, 0xFF	; 255
     bd8:	60 81       	ld	r22, Z
     bda:	71 81       	ldd	r23, Z+1	; 0x01
     bdc:	82 81       	ldd	r24, Z+2	; 0x02
     bde:	93 81       	ldd	r25, Z+3	; 0x03
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	3f ef       	ldi	r19, 0xFF	; 255
     be4:	4f e7       	ldi	r20, 0x7F	; 127
     be6:	57 e4       	ldi	r21, 0x47	; 71
     be8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     bec:	18 16       	cp	r1, r24
     bee:	0c f0       	brlt	.+2      	; 0xbf2 <UP+0xbc>
     bf0:	43 c0       	rjmp	.+134    	; 0xc78 <UP+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bf2:	fe 01       	movw	r30, r28
     bf4:	e3 59       	subi	r30, 0x93	; 147
     bf6:	ff 4f       	sbci	r31, 0xFF	; 255
     bf8:	60 81       	ld	r22, Z
     bfa:	71 81       	ldd	r23, Z+1	; 0x01
     bfc:	82 81       	ldd	r24, Z+2	; 0x02
     bfe:	93 81       	ldd	r25, Z+3	; 0x03
     c00:	20 e0       	ldi	r18, 0x00	; 0
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	40 e2       	ldi	r20, 0x20	; 32
     c06:	51 e4       	ldi	r21, 0x41	; 65
     c08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     c0c:	dc 01       	movw	r26, r24
     c0e:	cb 01       	movw	r24, r22
     c10:	8e 01       	movw	r16, r28
     c12:	09 59       	subi	r16, 0x99	; 153
     c14:	1f 4f       	sbci	r17, 0xFF	; 255
     c16:	bc 01       	movw	r22, r24
     c18:	cd 01       	movw	r24, r26
     c1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c1e:	dc 01       	movw	r26, r24
     c20:	cb 01       	movw	r24, r22
     c22:	f8 01       	movw	r30, r16
     c24:	91 83       	std	Z+1, r25	; 0x01
     c26:	80 83       	st	Z, r24
     c28:	1f c0       	rjmp	.+62     	; 0xc68 <UP+0x132>
     c2a:	fe 01       	movw	r30, r28
     c2c:	eb 59       	subi	r30, 0x9B	; 155
     c2e:	ff 4f       	sbci	r31, 0xFF	; 255
     c30:	88 ec       	ldi	r24, 0xC8	; 200
     c32:	90 e0       	ldi	r25, 0x00	; 0
     c34:	91 83       	std	Z+1, r25	; 0x01
     c36:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c38:	fe 01       	movw	r30, r28
     c3a:	eb 59       	subi	r30, 0x9B	; 155
     c3c:	ff 4f       	sbci	r31, 0xFF	; 255
     c3e:	80 81       	ld	r24, Z
     c40:	91 81       	ldd	r25, Z+1	; 0x01
     c42:	01 97       	sbiw	r24, 0x01	; 1
     c44:	f1 f7       	brne	.-4      	; 0xc42 <UP+0x10c>
     c46:	fe 01       	movw	r30, r28
     c48:	eb 59       	subi	r30, 0x9B	; 155
     c4a:	ff 4f       	sbci	r31, 0xFF	; 255
     c4c:	91 83       	std	Z+1, r25	; 0x01
     c4e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c50:	de 01       	movw	r26, r28
     c52:	a9 59       	subi	r26, 0x99	; 153
     c54:	bf 4f       	sbci	r27, 0xFF	; 255
     c56:	fe 01       	movw	r30, r28
     c58:	e9 59       	subi	r30, 0x99	; 153
     c5a:	ff 4f       	sbci	r31, 0xFF	; 255
     c5c:	80 81       	ld	r24, Z
     c5e:	91 81       	ldd	r25, Z+1	; 0x01
     c60:	01 97       	sbiw	r24, 0x01	; 1
     c62:	11 96       	adiw	r26, 0x01	; 1
     c64:	9c 93       	st	X, r25
     c66:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c68:	fe 01       	movw	r30, r28
     c6a:	e9 59       	subi	r30, 0x99	; 153
     c6c:	ff 4f       	sbci	r31, 0xFF	; 255
     c6e:	80 81       	ld	r24, Z
     c70:	91 81       	ldd	r25, Z+1	; 0x01
     c72:	00 97       	sbiw	r24, 0x00	; 0
     c74:	d1 f6       	brne	.-76     	; 0xc2a <UP+0xf4>
     c76:	27 c0       	rjmp	.+78     	; 0xcc6 <UP+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c78:	8e 01       	movw	r16, r28
     c7a:	09 59       	subi	r16, 0x99	; 153
     c7c:	1f 4f       	sbci	r17, 0xFF	; 255
     c7e:	fe 01       	movw	r30, r28
     c80:	e7 59       	subi	r30, 0x97	; 151
     c82:	ff 4f       	sbci	r31, 0xFF	; 255
     c84:	60 81       	ld	r22, Z
     c86:	71 81       	ldd	r23, Z+1	; 0x01
     c88:	82 81       	ldd	r24, Z+2	; 0x02
     c8a:	93 81       	ldd	r25, Z+3	; 0x03
     c8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     c90:	dc 01       	movw	r26, r24
     c92:	cb 01       	movw	r24, r22
     c94:	f8 01       	movw	r30, r16
     c96:	91 83       	std	Z+1, r25	; 0x01
     c98:	80 83       	st	Z, r24
     c9a:	de 01       	movw	r26, r28
     c9c:	ad 59       	subi	r26, 0x9D	; 157
     c9e:	bf 4f       	sbci	r27, 0xFF	; 255
     ca0:	fe 01       	movw	r30, r28
     ca2:	e9 59       	subi	r30, 0x99	; 153
     ca4:	ff 4f       	sbci	r31, 0xFF	; 255
     ca6:	80 81       	ld	r24, Z
     ca8:	91 81       	ldd	r25, Z+1	; 0x01
     caa:	8d 93       	st	X+, r24
     cac:	9c 93       	st	X, r25
     cae:	fe 01       	movw	r30, r28
     cb0:	ed 59       	subi	r30, 0x9D	; 157
     cb2:	ff 4f       	sbci	r31, 0xFF	; 255
     cb4:	80 81       	ld	r24, Z
     cb6:	91 81       	ldd	r25, Z+1	; 0x01
     cb8:	01 97       	sbiw	r24, 0x01	; 1
     cba:	f1 f7       	brne	.-4      	; 0xcb8 <UP+0x182>
     cbc:	fe 01       	movw	r30, r28
     cbe:	ed 59       	subi	r30, 0x9D	; 157
     cc0:	ff 4f       	sbci	r31, 0xFF	; 255
     cc2:	91 83       	std	Z+1, r25	; 0x01
     cc4:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTB=0xFD;
     cc6:	e8 e3       	ldi	r30, 0x38	; 56
     cc8:	f0 e0       	ldi	r31, 0x00	; 0
     cca:	8d ef       	ldi	r24, 0xFD	; 253
     ccc:	80 83       	st	Z, r24
     cce:	fe 01       	movw	r30, r28
     cd0:	e1 5a       	subi	r30, 0xA1	; 161
     cd2:	ff 4f       	sbci	r31, 0xFF	; 255
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	a0 ea       	ldi	r26, 0xA0	; 160
     cda:	b1 e4       	ldi	r27, 0x41	; 65
     cdc:	80 83       	st	Z, r24
     cde:	91 83       	std	Z+1, r25	; 0x01
     ce0:	a2 83       	std	Z+2, r26	; 0x02
     ce2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ce4:	8e 01       	movw	r16, r28
     ce6:	05 5a       	subi	r16, 0xA5	; 165
     ce8:	1f 4f       	sbci	r17, 0xFF	; 255
     cea:	fe 01       	movw	r30, r28
     cec:	e1 5a       	subi	r30, 0xA1	; 161
     cee:	ff 4f       	sbci	r31, 0xFF	; 255
     cf0:	60 81       	ld	r22, Z
     cf2:	71 81       	ldd	r23, Z+1	; 0x01
     cf4:	82 81       	ldd	r24, Z+2	; 0x02
     cf6:	93 81       	ldd	r25, Z+3	; 0x03
     cf8:	20 e0       	ldi	r18, 0x00	; 0
     cfa:	30 e0       	ldi	r19, 0x00	; 0
     cfc:	4a ef       	ldi	r20, 0xFA	; 250
     cfe:	54 e4       	ldi	r21, 0x44	; 68
     d00:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d04:	dc 01       	movw	r26, r24
     d06:	cb 01       	movw	r24, r22
     d08:	f8 01       	movw	r30, r16
     d0a:	80 83       	st	Z, r24
     d0c:	91 83       	std	Z+1, r25	; 0x01
     d0e:	a2 83       	std	Z+2, r26	; 0x02
     d10:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d12:	fe 01       	movw	r30, r28
     d14:	e5 5a       	subi	r30, 0xA5	; 165
     d16:	ff 4f       	sbci	r31, 0xFF	; 255
     d18:	60 81       	ld	r22, Z
     d1a:	71 81       	ldd	r23, Z+1	; 0x01
     d1c:	82 81       	ldd	r24, Z+2	; 0x02
     d1e:	93 81       	ldd	r25, Z+3	; 0x03
     d20:	20 e0       	ldi	r18, 0x00	; 0
     d22:	30 e0       	ldi	r19, 0x00	; 0
     d24:	40 e8       	ldi	r20, 0x80	; 128
     d26:	5f e3       	ldi	r21, 0x3F	; 63
     d28:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d2c:	88 23       	and	r24, r24
     d2e:	44 f4       	brge	.+16     	; 0xd40 <UP+0x20a>
		__ticks = 1;
     d30:	fe 01       	movw	r30, r28
     d32:	e7 5a       	subi	r30, 0xA7	; 167
     d34:	ff 4f       	sbci	r31, 0xFF	; 255
     d36:	81 e0       	ldi	r24, 0x01	; 1
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	91 83       	std	Z+1, r25	; 0x01
     d3c:	80 83       	st	Z, r24
     d3e:	64 c0       	rjmp	.+200    	; 0xe08 <UP+0x2d2>
	else if (__tmp > 65535)
     d40:	fe 01       	movw	r30, r28
     d42:	e5 5a       	subi	r30, 0xA5	; 165
     d44:	ff 4f       	sbci	r31, 0xFF	; 255
     d46:	60 81       	ld	r22, Z
     d48:	71 81       	ldd	r23, Z+1	; 0x01
     d4a:	82 81       	ldd	r24, Z+2	; 0x02
     d4c:	93 81       	ldd	r25, Z+3	; 0x03
     d4e:	20 e0       	ldi	r18, 0x00	; 0
     d50:	3f ef       	ldi	r19, 0xFF	; 255
     d52:	4f e7       	ldi	r20, 0x7F	; 127
     d54:	57 e4       	ldi	r21, 0x47	; 71
     d56:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d5a:	18 16       	cp	r1, r24
     d5c:	0c f0       	brlt	.+2      	; 0xd60 <UP+0x22a>
     d5e:	43 c0       	rjmp	.+134    	; 0xde6 <UP+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d60:	fe 01       	movw	r30, r28
     d62:	e1 5a       	subi	r30, 0xA1	; 161
     d64:	ff 4f       	sbci	r31, 0xFF	; 255
     d66:	60 81       	ld	r22, Z
     d68:	71 81       	ldd	r23, Z+1	; 0x01
     d6a:	82 81       	ldd	r24, Z+2	; 0x02
     d6c:	93 81       	ldd	r25, Z+3	; 0x03
     d6e:	20 e0       	ldi	r18, 0x00	; 0
     d70:	30 e0       	ldi	r19, 0x00	; 0
     d72:	40 e2       	ldi	r20, 0x20	; 32
     d74:	51 e4       	ldi	r21, 0x41	; 65
     d76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d7a:	dc 01       	movw	r26, r24
     d7c:	cb 01       	movw	r24, r22
     d7e:	8e 01       	movw	r16, r28
     d80:	07 5a       	subi	r16, 0xA7	; 167
     d82:	1f 4f       	sbci	r17, 0xFF	; 255
     d84:	bc 01       	movw	r22, r24
     d86:	cd 01       	movw	r24, r26
     d88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d8c:	dc 01       	movw	r26, r24
     d8e:	cb 01       	movw	r24, r22
     d90:	f8 01       	movw	r30, r16
     d92:	91 83       	std	Z+1, r25	; 0x01
     d94:	80 83       	st	Z, r24
     d96:	1f c0       	rjmp	.+62     	; 0xdd6 <UP+0x2a0>
     d98:	fe 01       	movw	r30, r28
     d9a:	e9 5a       	subi	r30, 0xA9	; 169
     d9c:	ff 4f       	sbci	r31, 0xFF	; 255
     d9e:	88 ec       	ldi	r24, 0xC8	; 200
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	91 83       	std	Z+1, r25	; 0x01
     da4:	80 83       	st	Z, r24
     da6:	fe 01       	movw	r30, r28
     da8:	e9 5a       	subi	r30, 0xA9	; 169
     daa:	ff 4f       	sbci	r31, 0xFF	; 255
     dac:	80 81       	ld	r24, Z
     dae:	91 81       	ldd	r25, Z+1	; 0x01
     db0:	01 97       	sbiw	r24, 0x01	; 1
     db2:	f1 f7       	brne	.-4      	; 0xdb0 <UP+0x27a>
     db4:	fe 01       	movw	r30, r28
     db6:	e9 5a       	subi	r30, 0xA9	; 169
     db8:	ff 4f       	sbci	r31, 0xFF	; 255
     dba:	91 83       	std	Z+1, r25	; 0x01
     dbc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dbe:	de 01       	movw	r26, r28
     dc0:	a7 5a       	subi	r26, 0xA7	; 167
     dc2:	bf 4f       	sbci	r27, 0xFF	; 255
     dc4:	fe 01       	movw	r30, r28
     dc6:	e7 5a       	subi	r30, 0xA7	; 167
     dc8:	ff 4f       	sbci	r31, 0xFF	; 255
     dca:	80 81       	ld	r24, Z
     dcc:	91 81       	ldd	r25, Z+1	; 0x01
     dce:	01 97       	sbiw	r24, 0x01	; 1
     dd0:	11 96       	adiw	r26, 0x01	; 1
     dd2:	9c 93       	st	X, r25
     dd4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dd6:	fe 01       	movw	r30, r28
     dd8:	e7 5a       	subi	r30, 0xA7	; 167
     dda:	ff 4f       	sbci	r31, 0xFF	; 255
     ddc:	80 81       	ld	r24, Z
     dde:	91 81       	ldd	r25, Z+1	; 0x01
     de0:	00 97       	sbiw	r24, 0x00	; 0
     de2:	d1 f6       	brne	.-76     	; 0xd98 <UP+0x262>
     de4:	27 c0       	rjmp	.+78     	; 0xe34 <UP+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     de6:	8e 01       	movw	r16, r28
     de8:	07 5a       	subi	r16, 0xA7	; 167
     dea:	1f 4f       	sbci	r17, 0xFF	; 255
     dec:	fe 01       	movw	r30, r28
     dee:	e5 5a       	subi	r30, 0xA5	; 165
     df0:	ff 4f       	sbci	r31, 0xFF	; 255
     df2:	60 81       	ld	r22, Z
     df4:	71 81       	ldd	r23, Z+1	; 0x01
     df6:	82 81       	ldd	r24, Z+2	; 0x02
     df8:	93 81       	ldd	r25, Z+3	; 0x03
     dfa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dfe:	dc 01       	movw	r26, r24
     e00:	cb 01       	movw	r24, r22
     e02:	f8 01       	movw	r30, r16
     e04:	91 83       	std	Z+1, r25	; 0x01
     e06:	80 83       	st	Z, r24
     e08:	de 01       	movw	r26, r28
     e0a:	ab 5a       	subi	r26, 0xAB	; 171
     e0c:	bf 4f       	sbci	r27, 0xFF	; 255
     e0e:	fe 01       	movw	r30, r28
     e10:	e7 5a       	subi	r30, 0xA7	; 167
     e12:	ff 4f       	sbci	r31, 0xFF	; 255
     e14:	80 81       	ld	r24, Z
     e16:	91 81       	ldd	r25, Z+1	; 0x01
     e18:	8d 93       	st	X+, r24
     e1a:	9c 93       	st	X, r25
     e1c:	fe 01       	movw	r30, r28
     e1e:	eb 5a       	subi	r30, 0xAB	; 171
     e20:	ff 4f       	sbci	r31, 0xFF	; 255
     e22:	80 81       	ld	r24, Z
     e24:	91 81       	ldd	r25, Z+1	; 0x01
     e26:	01 97       	sbiw	r24, 0x01	; 1
     e28:	f1 f7       	brne	.-4      	; 0xe26 <UP+0x2f0>
     e2a:	fe 01       	movw	r30, r28
     e2c:	eb 5a       	subi	r30, 0xAB	; 171
     e2e:	ff 4f       	sbci	r31, 0xFF	; 255
     e30:	91 83       	std	Z+1, r25	; 0x01
     e32:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTB=0xFB;
     e34:	e8 e3       	ldi	r30, 0x38	; 56
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	8b ef       	ldi	r24, 0xFB	; 251
     e3a:	80 83       	st	Z, r24
     e3c:	fe 01       	movw	r30, r28
     e3e:	ef 5a       	subi	r30, 0xAF	; 175
     e40:	ff 4f       	sbci	r31, 0xFF	; 255
     e42:	80 e0       	ldi	r24, 0x00	; 0
     e44:	90 e0       	ldi	r25, 0x00	; 0
     e46:	a0 ea       	ldi	r26, 0xA0	; 160
     e48:	b1 e4       	ldi	r27, 0x41	; 65
     e4a:	80 83       	st	Z, r24
     e4c:	91 83       	std	Z+1, r25	; 0x01
     e4e:	a2 83       	std	Z+2, r26	; 0x02
     e50:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e52:	8e 01       	movw	r16, r28
     e54:	03 5b       	subi	r16, 0xB3	; 179
     e56:	1f 4f       	sbci	r17, 0xFF	; 255
     e58:	fe 01       	movw	r30, r28
     e5a:	ef 5a       	subi	r30, 0xAF	; 175
     e5c:	ff 4f       	sbci	r31, 0xFF	; 255
     e5e:	60 81       	ld	r22, Z
     e60:	71 81       	ldd	r23, Z+1	; 0x01
     e62:	82 81       	ldd	r24, Z+2	; 0x02
     e64:	93 81       	ldd	r25, Z+3	; 0x03
     e66:	20 e0       	ldi	r18, 0x00	; 0
     e68:	30 e0       	ldi	r19, 0x00	; 0
     e6a:	4a ef       	ldi	r20, 0xFA	; 250
     e6c:	54 e4       	ldi	r21, 0x44	; 68
     e6e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e72:	dc 01       	movw	r26, r24
     e74:	cb 01       	movw	r24, r22
     e76:	f8 01       	movw	r30, r16
     e78:	80 83       	st	Z, r24
     e7a:	91 83       	std	Z+1, r25	; 0x01
     e7c:	a2 83       	std	Z+2, r26	; 0x02
     e7e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e80:	fe 01       	movw	r30, r28
     e82:	e3 5b       	subi	r30, 0xB3	; 179
     e84:	ff 4f       	sbci	r31, 0xFF	; 255
     e86:	60 81       	ld	r22, Z
     e88:	71 81       	ldd	r23, Z+1	; 0x01
     e8a:	82 81       	ldd	r24, Z+2	; 0x02
     e8c:	93 81       	ldd	r25, Z+3	; 0x03
     e8e:	20 e0       	ldi	r18, 0x00	; 0
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	40 e8       	ldi	r20, 0x80	; 128
     e94:	5f e3       	ldi	r21, 0x3F	; 63
     e96:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     e9a:	88 23       	and	r24, r24
     e9c:	44 f4       	brge	.+16     	; 0xeae <UP+0x378>
		__ticks = 1;
     e9e:	fe 01       	movw	r30, r28
     ea0:	e5 5b       	subi	r30, 0xB5	; 181
     ea2:	ff 4f       	sbci	r31, 0xFF	; 255
     ea4:	81 e0       	ldi	r24, 0x01	; 1
     ea6:	90 e0       	ldi	r25, 0x00	; 0
     ea8:	91 83       	std	Z+1, r25	; 0x01
     eaa:	80 83       	st	Z, r24
     eac:	64 c0       	rjmp	.+200    	; 0xf76 <UP+0x440>
	else if (__tmp > 65535)
     eae:	fe 01       	movw	r30, r28
     eb0:	e3 5b       	subi	r30, 0xB3	; 179
     eb2:	ff 4f       	sbci	r31, 0xFF	; 255
     eb4:	60 81       	ld	r22, Z
     eb6:	71 81       	ldd	r23, Z+1	; 0x01
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	20 e0       	ldi	r18, 0x00	; 0
     ebe:	3f ef       	ldi	r19, 0xFF	; 255
     ec0:	4f e7       	ldi	r20, 0x7F	; 127
     ec2:	57 e4       	ldi	r21, 0x47	; 71
     ec4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     ec8:	18 16       	cp	r1, r24
     eca:	0c f0       	brlt	.+2      	; 0xece <UP+0x398>
     ecc:	43 c0       	rjmp	.+134    	; 0xf54 <UP+0x41e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ece:	fe 01       	movw	r30, r28
     ed0:	ef 5a       	subi	r30, 0xAF	; 175
     ed2:	ff 4f       	sbci	r31, 0xFF	; 255
     ed4:	60 81       	ld	r22, Z
     ed6:	71 81       	ldd	r23, Z+1	; 0x01
     ed8:	82 81       	ldd	r24, Z+2	; 0x02
     eda:	93 81       	ldd	r25, Z+3	; 0x03
     edc:	20 e0       	ldi	r18, 0x00	; 0
     ede:	30 e0       	ldi	r19, 0x00	; 0
     ee0:	40 e2       	ldi	r20, 0x20	; 32
     ee2:	51 e4       	ldi	r21, 0x41	; 65
     ee4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     ee8:	dc 01       	movw	r26, r24
     eea:	cb 01       	movw	r24, r22
     eec:	8e 01       	movw	r16, r28
     eee:	05 5b       	subi	r16, 0xB5	; 181
     ef0:	1f 4f       	sbci	r17, 0xFF	; 255
     ef2:	bc 01       	movw	r22, r24
     ef4:	cd 01       	movw	r24, r26
     ef6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     efa:	dc 01       	movw	r26, r24
     efc:	cb 01       	movw	r24, r22
     efe:	f8 01       	movw	r30, r16
     f00:	91 83       	std	Z+1, r25	; 0x01
     f02:	80 83       	st	Z, r24
     f04:	1f c0       	rjmp	.+62     	; 0xf44 <UP+0x40e>
     f06:	fe 01       	movw	r30, r28
     f08:	e7 5b       	subi	r30, 0xB7	; 183
     f0a:	ff 4f       	sbci	r31, 0xFF	; 255
     f0c:	88 ec       	ldi	r24, 0xC8	; 200
     f0e:	90 e0       	ldi	r25, 0x00	; 0
     f10:	91 83       	std	Z+1, r25	; 0x01
     f12:	80 83       	st	Z, r24
     f14:	fe 01       	movw	r30, r28
     f16:	e7 5b       	subi	r30, 0xB7	; 183
     f18:	ff 4f       	sbci	r31, 0xFF	; 255
     f1a:	80 81       	ld	r24, Z
     f1c:	91 81       	ldd	r25, Z+1	; 0x01
     f1e:	01 97       	sbiw	r24, 0x01	; 1
     f20:	f1 f7       	brne	.-4      	; 0xf1e <UP+0x3e8>
     f22:	fe 01       	movw	r30, r28
     f24:	e7 5b       	subi	r30, 0xB7	; 183
     f26:	ff 4f       	sbci	r31, 0xFF	; 255
     f28:	91 83       	std	Z+1, r25	; 0x01
     f2a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f2c:	de 01       	movw	r26, r28
     f2e:	a5 5b       	subi	r26, 0xB5	; 181
     f30:	bf 4f       	sbci	r27, 0xFF	; 255
     f32:	fe 01       	movw	r30, r28
     f34:	e5 5b       	subi	r30, 0xB5	; 181
     f36:	ff 4f       	sbci	r31, 0xFF	; 255
     f38:	80 81       	ld	r24, Z
     f3a:	91 81       	ldd	r25, Z+1	; 0x01
     f3c:	01 97       	sbiw	r24, 0x01	; 1
     f3e:	11 96       	adiw	r26, 0x01	; 1
     f40:	9c 93       	st	X, r25
     f42:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f44:	fe 01       	movw	r30, r28
     f46:	e5 5b       	subi	r30, 0xB5	; 181
     f48:	ff 4f       	sbci	r31, 0xFF	; 255
     f4a:	80 81       	ld	r24, Z
     f4c:	91 81       	ldd	r25, Z+1	; 0x01
     f4e:	00 97       	sbiw	r24, 0x00	; 0
     f50:	d1 f6       	brne	.-76     	; 0xf06 <UP+0x3d0>
     f52:	27 c0       	rjmp	.+78     	; 0xfa2 <UP+0x46c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f54:	8e 01       	movw	r16, r28
     f56:	05 5b       	subi	r16, 0xB5	; 181
     f58:	1f 4f       	sbci	r17, 0xFF	; 255
     f5a:	fe 01       	movw	r30, r28
     f5c:	e3 5b       	subi	r30, 0xB3	; 179
     f5e:	ff 4f       	sbci	r31, 0xFF	; 255
     f60:	60 81       	ld	r22, Z
     f62:	71 81       	ldd	r23, Z+1	; 0x01
     f64:	82 81       	ldd	r24, Z+2	; 0x02
     f66:	93 81       	ldd	r25, Z+3	; 0x03
     f68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f6c:	dc 01       	movw	r26, r24
     f6e:	cb 01       	movw	r24, r22
     f70:	f8 01       	movw	r30, r16
     f72:	91 83       	std	Z+1, r25	; 0x01
     f74:	80 83       	st	Z, r24
     f76:	de 01       	movw	r26, r28
     f78:	a9 5b       	subi	r26, 0xB9	; 185
     f7a:	bf 4f       	sbci	r27, 0xFF	; 255
     f7c:	fe 01       	movw	r30, r28
     f7e:	e5 5b       	subi	r30, 0xB5	; 181
     f80:	ff 4f       	sbci	r31, 0xFF	; 255
     f82:	80 81       	ld	r24, Z
     f84:	91 81       	ldd	r25, Z+1	; 0x01
     f86:	8d 93       	st	X+, r24
     f88:	9c 93       	st	X, r25
     f8a:	fe 01       	movw	r30, r28
     f8c:	e9 5b       	subi	r30, 0xB9	; 185
     f8e:	ff 4f       	sbci	r31, 0xFF	; 255
     f90:	80 81       	ld	r24, Z
     f92:	91 81       	ldd	r25, Z+1	; 0x01
     f94:	01 97       	sbiw	r24, 0x01	; 1
     f96:	f1 f7       	brne	.-4      	; 0xf94 <UP+0x45e>
     f98:	fe 01       	movw	r30, r28
     f9a:	e9 5b       	subi	r30, 0xB9	; 185
     f9c:	ff 4f       	sbci	r31, 0xFF	; 255
     f9e:	91 83       	std	Z+1, r25	; 0x01
     fa0:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTB=0xF7;
     fa2:	e8 e3       	ldi	r30, 0x38	; 56
     fa4:	f0 e0       	ldi	r31, 0x00	; 0
     fa6:	87 ef       	ldi	r24, 0xF7	; 247
     fa8:	80 83       	st	Z, r24
     faa:	fe 01       	movw	r30, r28
     fac:	ed 5b       	subi	r30, 0xBD	; 189
     fae:	ff 4f       	sbci	r31, 0xFF	; 255
     fb0:	80 e0       	ldi	r24, 0x00	; 0
     fb2:	90 e0       	ldi	r25, 0x00	; 0
     fb4:	a0 ea       	ldi	r26, 0xA0	; 160
     fb6:	b1 e4       	ldi	r27, 0x41	; 65
     fb8:	80 83       	st	Z, r24
     fba:	91 83       	std	Z+1, r25	; 0x01
     fbc:	a2 83       	std	Z+2, r26	; 0x02
     fbe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     fc0:	8e 01       	movw	r16, r28
     fc2:	01 5c       	subi	r16, 0xC1	; 193
     fc4:	1f 4f       	sbci	r17, 0xFF	; 255
     fc6:	fe 01       	movw	r30, r28
     fc8:	ed 5b       	subi	r30, 0xBD	; 189
     fca:	ff 4f       	sbci	r31, 0xFF	; 255
     fcc:	60 81       	ld	r22, Z
     fce:	71 81       	ldd	r23, Z+1	; 0x01
     fd0:	82 81       	ldd	r24, Z+2	; 0x02
     fd2:	93 81       	ldd	r25, Z+3	; 0x03
     fd4:	20 e0       	ldi	r18, 0x00	; 0
     fd6:	30 e0       	ldi	r19, 0x00	; 0
     fd8:	4a ef       	ldi	r20, 0xFA	; 250
     fda:	54 e4       	ldi	r21, 0x44	; 68
     fdc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     fe0:	dc 01       	movw	r26, r24
     fe2:	cb 01       	movw	r24, r22
     fe4:	f8 01       	movw	r30, r16
     fe6:	80 83       	st	Z, r24
     fe8:	91 83       	std	Z+1, r25	; 0x01
     fea:	a2 83       	std	Z+2, r26	; 0x02
     fec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     fee:	fe 01       	movw	r30, r28
     ff0:	ff 96       	adiw	r30, 0x3f	; 63
     ff2:	60 81       	ld	r22, Z
     ff4:	71 81       	ldd	r23, Z+1	; 0x01
     ff6:	82 81       	ldd	r24, Z+2	; 0x02
     ff8:	93 81       	ldd	r25, Z+3	; 0x03
     ffa:	20 e0       	ldi	r18, 0x00	; 0
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	40 e8       	ldi	r20, 0x80	; 128
    1000:	5f e3       	ldi	r21, 0x3F	; 63
    1002:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1006:	88 23       	and	r24, r24
    1008:	2c f4       	brge	.+10     	; 0x1014 <UP+0x4de>
		__ticks = 1;
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	90 e0       	ldi	r25, 0x00	; 0
    100e:	9e af       	std	Y+62, r25	; 0x3e
    1010:	8d af       	std	Y+61, r24	; 0x3d
    1012:	46 c0       	rjmp	.+140    	; 0x10a0 <UP+0x56a>
	else if (__tmp > 65535)
    1014:	fe 01       	movw	r30, r28
    1016:	ff 96       	adiw	r30, 0x3f	; 63
    1018:	60 81       	ld	r22, Z
    101a:	71 81       	ldd	r23, Z+1	; 0x01
    101c:	82 81       	ldd	r24, Z+2	; 0x02
    101e:	93 81       	ldd	r25, Z+3	; 0x03
    1020:	20 e0       	ldi	r18, 0x00	; 0
    1022:	3f ef       	ldi	r19, 0xFF	; 255
    1024:	4f e7       	ldi	r20, 0x7F	; 127
    1026:	57 e4       	ldi	r21, 0x47	; 71
    1028:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    102c:	18 16       	cp	r1, r24
    102e:	64 f5       	brge	.+88     	; 0x1088 <UP+0x552>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1030:	fe 01       	movw	r30, r28
    1032:	ed 5b       	subi	r30, 0xBD	; 189
    1034:	ff 4f       	sbci	r31, 0xFF	; 255
    1036:	60 81       	ld	r22, Z
    1038:	71 81       	ldd	r23, Z+1	; 0x01
    103a:	82 81       	ldd	r24, Z+2	; 0x02
    103c:	93 81       	ldd	r25, Z+3	; 0x03
    103e:	20 e0       	ldi	r18, 0x00	; 0
    1040:	30 e0       	ldi	r19, 0x00	; 0
    1042:	40 e2       	ldi	r20, 0x20	; 32
    1044:	51 e4       	ldi	r21, 0x41	; 65
    1046:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    104a:	dc 01       	movw	r26, r24
    104c:	cb 01       	movw	r24, r22
    104e:	bc 01       	movw	r22, r24
    1050:	cd 01       	movw	r24, r26
    1052:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1056:	dc 01       	movw	r26, r24
    1058:	cb 01       	movw	r24, r22
    105a:	9e af       	std	Y+62, r25	; 0x3e
    105c:	8d af       	std	Y+61, r24	; 0x3d
    105e:	0f c0       	rjmp	.+30     	; 0x107e <UP+0x548>
    1060:	88 ec       	ldi	r24, 0xC8	; 200
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	9c af       	std	Y+60, r25	; 0x3c
    1066:	8b af       	std	Y+59, r24	; 0x3b
    1068:	8b ad       	ldd	r24, Y+59	; 0x3b
    106a:	9c ad       	ldd	r25, Y+60	; 0x3c
    106c:	01 97       	sbiw	r24, 0x01	; 1
    106e:	f1 f7       	brne	.-4      	; 0x106c <UP+0x536>
    1070:	9c af       	std	Y+60, r25	; 0x3c
    1072:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1074:	8d ad       	ldd	r24, Y+61	; 0x3d
    1076:	9e ad       	ldd	r25, Y+62	; 0x3e
    1078:	01 97       	sbiw	r24, 0x01	; 1
    107a:	9e af       	std	Y+62, r25	; 0x3e
    107c:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    107e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1080:	9e ad       	ldd	r25, Y+62	; 0x3e
    1082:	00 97       	sbiw	r24, 0x00	; 0
    1084:	69 f7       	brne	.-38     	; 0x1060 <UP+0x52a>
    1086:	16 c0       	rjmp	.+44     	; 0x10b4 <UP+0x57e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1088:	fe 01       	movw	r30, r28
    108a:	ff 96       	adiw	r30, 0x3f	; 63
    108c:	60 81       	ld	r22, Z
    108e:	71 81       	ldd	r23, Z+1	; 0x01
    1090:	82 81       	ldd	r24, Z+2	; 0x02
    1092:	93 81       	ldd	r25, Z+3	; 0x03
    1094:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1098:	dc 01       	movw	r26, r24
    109a:	cb 01       	movw	r24, r22
    109c:	9e af       	std	Y+62, r25	; 0x3e
    109e:	8d af       	std	Y+61, r24	; 0x3d
    10a0:	8d ad       	ldd	r24, Y+61	; 0x3d
    10a2:	9e ad       	ldd	r25, Y+62	; 0x3e
    10a4:	9a af       	std	Y+58, r25	; 0x3a
    10a6:	89 af       	std	Y+57, r24	; 0x39
    10a8:	89 ad       	ldd	r24, Y+57	; 0x39
    10aa:	9a ad       	ldd	r25, Y+58	; 0x3a
    10ac:	01 97       	sbiw	r24, 0x01	; 1
    10ae:	f1 f7       	brne	.-4      	; 0x10ac <UP+0x576>
    10b0:	9a af       	std	Y+58, r25	; 0x3a
    10b2:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(20);
	PORTB=0xEF;
    10b4:	e8 e3       	ldi	r30, 0x38	; 56
    10b6:	f0 e0       	ldi	r31, 0x00	; 0
    10b8:	8f ee       	ldi	r24, 0xEF	; 239
    10ba:	80 83       	st	Z, r24
    10bc:	80 e0       	ldi	r24, 0x00	; 0
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	a0 ea       	ldi	r26, 0xA0	; 160
    10c2:	b1 e4       	ldi	r27, 0x41	; 65
    10c4:	8d ab       	std	Y+53, r24	; 0x35
    10c6:	9e ab       	std	Y+54, r25	; 0x36
    10c8:	af ab       	std	Y+55, r26	; 0x37
    10ca:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    10cc:	6d a9       	ldd	r22, Y+53	; 0x35
    10ce:	7e a9       	ldd	r23, Y+54	; 0x36
    10d0:	8f a9       	ldd	r24, Y+55	; 0x37
    10d2:	98 ad       	ldd	r25, Y+56	; 0x38
    10d4:	20 e0       	ldi	r18, 0x00	; 0
    10d6:	30 e0       	ldi	r19, 0x00	; 0
    10d8:	4a ef       	ldi	r20, 0xFA	; 250
    10da:	54 e4       	ldi	r21, 0x44	; 68
    10dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    10e0:	dc 01       	movw	r26, r24
    10e2:	cb 01       	movw	r24, r22
    10e4:	89 ab       	std	Y+49, r24	; 0x31
    10e6:	9a ab       	std	Y+50, r25	; 0x32
    10e8:	ab ab       	std	Y+51, r26	; 0x33
    10ea:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    10ec:	69 a9       	ldd	r22, Y+49	; 0x31
    10ee:	7a a9       	ldd	r23, Y+50	; 0x32
    10f0:	8b a9       	ldd	r24, Y+51	; 0x33
    10f2:	9c a9       	ldd	r25, Y+52	; 0x34
    10f4:	20 e0       	ldi	r18, 0x00	; 0
    10f6:	30 e0       	ldi	r19, 0x00	; 0
    10f8:	40 e8       	ldi	r20, 0x80	; 128
    10fa:	5f e3       	ldi	r21, 0x3F	; 63
    10fc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1100:	88 23       	and	r24, r24
    1102:	2c f4       	brge	.+10     	; 0x110e <UP+0x5d8>
		__ticks = 1;
    1104:	81 e0       	ldi	r24, 0x01	; 1
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	98 ab       	std	Y+48, r25	; 0x30
    110a:	8f a7       	std	Y+47, r24	; 0x2f
    110c:	3f c0       	rjmp	.+126    	; 0x118c <UP+0x656>
	else if (__tmp > 65535)
    110e:	69 a9       	ldd	r22, Y+49	; 0x31
    1110:	7a a9       	ldd	r23, Y+50	; 0x32
    1112:	8b a9       	ldd	r24, Y+51	; 0x33
    1114:	9c a9       	ldd	r25, Y+52	; 0x34
    1116:	20 e0       	ldi	r18, 0x00	; 0
    1118:	3f ef       	ldi	r19, 0xFF	; 255
    111a:	4f e7       	ldi	r20, 0x7F	; 127
    111c:	57 e4       	ldi	r21, 0x47	; 71
    111e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1122:	18 16       	cp	r1, r24
    1124:	4c f5       	brge	.+82     	; 0x1178 <UP+0x642>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1126:	6d a9       	ldd	r22, Y+53	; 0x35
    1128:	7e a9       	ldd	r23, Y+54	; 0x36
    112a:	8f a9       	ldd	r24, Y+55	; 0x37
    112c:	98 ad       	ldd	r25, Y+56	; 0x38
    112e:	20 e0       	ldi	r18, 0x00	; 0
    1130:	30 e0       	ldi	r19, 0x00	; 0
    1132:	40 e2       	ldi	r20, 0x20	; 32
    1134:	51 e4       	ldi	r21, 0x41	; 65
    1136:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    113a:	dc 01       	movw	r26, r24
    113c:	cb 01       	movw	r24, r22
    113e:	bc 01       	movw	r22, r24
    1140:	cd 01       	movw	r24, r26
    1142:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1146:	dc 01       	movw	r26, r24
    1148:	cb 01       	movw	r24, r22
    114a:	98 ab       	std	Y+48, r25	; 0x30
    114c:	8f a7       	std	Y+47, r24	; 0x2f
    114e:	0f c0       	rjmp	.+30     	; 0x116e <UP+0x638>
    1150:	88 ec       	ldi	r24, 0xC8	; 200
    1152:	90 e0       	ldi	r25, 0x00	; 0
    1154:	9e a7       	std	Y+46, r25	; 0x2e
    1156:	8d a7       	std	Y+45, r24	; 0x2d
    1158:	8d a5       	ldd	r24, Y+45	; 0x2d
    115a:	9e a5       	ldd	r25, Y+46	; 0x2e
    115c:	01 97       	sbiw	r24, 0x01	; 1
    115e:	f1 f7       	brne	.-4      	; 0x115c <UP+0x626>
    1160:	9e a7       	std	Y+46, r25	; 0x2e
    1162:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1164:	8f a5       	ldd	r24, Y+47	; 0x2f
    1166:	98 a9       	ldd	r25, Y+48	; 0x30
    1168:	01 97       	sbiw	r24, 0x01	; 1
    116a:	98 ab       	std	Y+48, r25	; 0x30
    116c:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    116e:	8f a5       	ldd	r24, Y+47	; 0x2f
    1170:	98 a9       	ldd	r25, Y+48	; 0x30
    1172:	00 97       	sbiw	r24, 0x00	; 0
    1174:	69 f7       	brne	.-38     	; 0x1150 <UP+0x61a>
    1176:	14 c0       	rjmp	.+40     	; 0x11a0 <UP+0x66a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1178:	69 a9       	ldd	r22, Y+49	; 0x31
    117a:	7a a9       	ldd	r23, Y+50	; 0x32
    117c:	8b a9       	ldd	r24, Y+51	; 0x33
    117e:	9c a9       	ldd	r25, Y+52	; 0x34
    1180:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1184:	dc 01       	movw	r26, r24
    1186:	cb 01       	movw	r24, r22
    1188:	98 ab       	std	Y+48, r25	; 0x30
    118a:	8f a7       	std	Y+47, r24	; 0x2f
    118c:	8f a5       	ldd	r24, Y+47	; 0x2f
    118e:	98 a9       	ldd	r25, Y+48	; 0x30
    1190:	9c a7       	std	Y+44, r25	; 0x2c
    1192:	8b a7       	std	Y+43, r24	; 0x2b
    1194:	8b a5       	ldd	r24, Y+43	; 0x2b
    1196:	9c a5       	ldd	r25, Y+44	; 0x2c
    1198:	01 97       	sbiw	r24, 0x01	; 1
    119a:	f1 f7       	brne	.-4      	; 0x1198 <UP+0x662>
    119c:	9c a7       	std	Y+44, r25	; 0x2c
    119e:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(20);
	PORTB=0xDF;
    11a0:	e8 e3       	ldi	r30, 0x38	; 56
    11a2:	f0 e0       	ldi	r31, 0x00	; 0
    11a4:	8f ed       	ldi	r24, 0xDF	; 223
    11a6:	80 83       	st	Z, r24
    11a8:	80 e0       	ldi	r24, 0x00	; 0
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	a0 ea       	ldi	r26, 0xA0	; 160
    11ae:	b1 e4       	ldi	r27, 0x41	; 65
    11b0:	8f a3       	std	Y+39, r24	; 0x27
    11b2:	98 a7       	std	Y+40, r25	; 0x28
    11b4:	a9 a7       	std	Y+41, r26	; 0x29
    11b6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    11b8:	6f a1       	ldd	r22, Y+39	; 0x27
    11ba:	78 a5       	ldd	r23, Y+40	; 0x28
    11bc:	89 a5       	ldd	r24, Y+41	; 0x29
    11be:	9a a5       	ldd	r25, Y+42	; 0x2a
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	4a ef       	ldi	r20, 0xFA	; 250
    11c6:	54 e4       	ldi	r21, 0x44	; 68
    11c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11cc:	dc 01       	movw	r26, r24
    11ce:	cb 01       	movw	r24, r22
    11d0:	8b a3       	std	Y+35, r24	; 0x23
    11d2:	9c a3       	std	Y+36, r25	; 0x24
    11d4:	ad a3       	std	Y+37, r26	; 0x25
    11d6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    11d8:	6b a1       	ldd	r22, Y+35	; 0x23
    11da:	7c a1       	ldd	r23, Y+36	; 0x24
    11dc:	8d a1       	ldd	r24, Y+37	; 0x25
    11de:	9e a1       	ldd	r25, Y+38	; 0x26
    11e0:	20 e0       	ldi	r18, 0x00	; 0
    11e2:	30 e0       	ldi	r19, 0x00	; 0
    11e4:	40 e8       	ldi	r20, 0x80	; 128
    11e6:	5f e3       	ldi	r21, 0x3F	; 63
    11e8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11ec:	88 23       	and	r24, r24
    11ee:	2c f4       	brge	.+10     	; 0x11fa <UP+0x6c4>
		__ticks = 1;
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	90 e0       	ldi	r25, 0x00	; 0
    11f4:	9a a3       	std	Y+34, r25	; 0x22
    11f6:	89 a3       	std	Y+33, r24	; 0x21
    11f8:	3f c0       	rjmp	.+126    	; 0x1278 <UP+0x742>
	else if (__tmp > 65535)
    11fa:	6b a1       	ldd	r22, Y+35	; 0x23
    11fc:	7c a1       	ldd	r23, Y+36	; 0x24
    11fe:	8d a1       	ldd	r24, Y+37	; 0x25
    1200:	9e a1       	ldd	r25, Y+38	; 0x26
    1202:	20 e0       	ldi	r18, 0x00	; 0
    1204:	3f ef       	ldi	r19, 0xFF	; 255
    1206:	4f e7       	ldi	r20, 0x7F	; 127
    1208:	57 e4       	ldi	r21, 0x47	; 71
    120a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    120e:	18 16       	cp	r1, r24
    1210:	4c f5       	brge	.+82     	; 0x1264 <UP+0x72e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1212:	6f a1       	ldd	r22, Y+39	; 0x27
    1214:	78 a5       	ldd	r23, Y+40	; 0x28
    1216:	89 a5       	ldd	r24, Y+41	; 0x29
    1218:	9a a5       	ldd	r25, Y+42	; 0x2a
    121a:	20 e0       	ldi	r18, 0x00	; 0
    121c:	30 e0       	ldi	r19, 0x00	; 0
    121e:	40 e2       	ldi	r20, 0x20	; 32
    1220:	51 e4       	ldi	r21, 0x41	; 65
    1222:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1226:	dc 01       	movw	r26, r24
    1228:	cb 01       	movw	r24, r22
    122a:	bc 01       	movw	r22, r24
    122c:	cd 01       	movw	r24, r26
    122e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1232:	dc 01       	movw	r26, r24
    1234:	cb 01       	movw	r24, r22
    1236:	9a a3       	std	Y+34, r25	; 0x22
    1238:	89 a3       	std	Y+33, r24	; 0x21
    123a:	0f c0       	rjmp	.+30     	; 0x125a <UP+0x724>
    123c:	88 ec       	ldi	r24, 0xC8	; 200
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	98 a3       	std	Y+32, r25	; 0x20
    1242:	8f 8f       	std	Y+31, r24	; 0x1f
    1244:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1246:	98 a1       	ldd	r25, Y+32	; 0x20
    1248:	01 97       	sbiw	r24, 0x01	; 1
    124a:	f1 f7       	brne	.-4      	; 0x1248 <UP+0x712>
    124c:	98 a3       	std	Y+32, r25	; 0x20
    124e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1250:	89 a1       	ldd	r24, Y+33	; 0x21
    1252:	9a a1       	ldd	r25, Y+34	; 0x22
    1254:	01 97       	sbiw	r24, 0x01	; 1
    1256:	9a a3       	std	Y+34, r25	; 0x22
    1258:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    125a:	89 a1       	ldd	r24, Y+33	; 0x21
    125c:	9a a1       	ldd	r25, Y+34	; 0x22
    125e:	00 97       	sbiw	r24, 0x00	; 0
    1260:	69 f7       	brne	.-38     	; 0x123c <UP+0x706>
    1262:	14 c0       	rjmp	.+40     	; 0x128c <UP+0x756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1264:	6b a1       	ldd	r22, Y+35	; 0x23
    1266:	7c a1       	ldd	r23, Y+36	; 0x24
    1268:	8d a1       	ldd	r24, Y+37	; 0x25
    126a:	9e a1       	ldd	r25, Y+38	; 0x26
    126c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1270:	dc 01       	movw	r26, r24
    1272:	cb 01       	movw	r24, r22
    1274:	9a a3       	std	Y+34, r25	; 0x22
    1276:	89 a3       	std	Y+33, r24	; 0x21
    1278:	89 a1       	ldd	r24, Y+33	; 0x21
    127a:	9a a1       	ldd	r25, Y+34	; 0x22
    127c:	9e 8f       	std	Y+30, r25	; 0x1e
    127e:	8d 8f       	std	Y+29, r24	; 0x1d
    1280:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1282:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1284:	01 97       	sbiw	r24, 0x01	; 1
    1286:	f1 f7       	brne	.-4      	; 0x1284 <UP+0x74e>
    1288:	9e 8f       	std	Y+30, r25	; 0x1e
    128a:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(20);
	PORTB=0xBF;
    128c:	e8 e3       	ldi	r30, 0x38	; 56
    128e:	f0 e0       	ldi	r31, 0x00	; 0
    1290:	8f eb       	ldi	r24, 0xBF	; 191
    1292:	80 83       	st	Z, r24
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	a0 ea       	ldi	r26, 0xA0	; 160
    129a:	b1 e4       	ldi	r27, 0x41	; 65
    129c:	89 8f       	std	Y+25, r24	; 0x19
    129e:	9a 8f       	std	Y+26, r25	; 0x1a
    12a0:	ab 8f       	std	Y+27, r26	; 0x1b
    12a2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    12a4:	69 8d       	ldd	r22, Y+25	; 0x19
    12a6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    12a8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    12aa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    12ac:	20 e0       	ldi	r18, 0x00	; 0
    12ae:	30 e0       	ldi	r19, 0x00	; 0
    12b0:	4a ef       	ldi	r20, 0xFA	; 250
    12b2:	54 e4       	ldi	r21, 0x44	; 68
    12b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    12b8:	dc 01       	movw	r26, r24
    12ba:	cb 01       	movw	r24, r22
    12bc:	8d 8b       	std	Y+21, r24	; 0x15
    12be:	9e 8b       	std	Y+22, r25	; 0x16
    12c0:	af 8b       	std	Y+23, r26	; 0x17
    12c2:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    12c4:	6d 89       	ldd	r22, Y+21	; 0x15
    12c6:	7e 89       	ldd	r23, Y+22	; 0x16
    12c8:	8f 89       	ldd	r24, Y+23	; 0x17
    12ca:	98 8d       	ldd	r25, Y+24	; 0x18
    12cc:	20 e0       	ldi	r18, 0x00	; 0
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	40 e8       	ldi	r20, 0x80	; 128
    12d2:	5f e3       	ldi	r21, 0x3F	; 63
    12d4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    12d8:	88 23       	and	r24, r24
    12da:	2c f4       	brge	.+10     	; 0x12e6 <UP+0x7b0>
		__ticks = 1;
    12dc:	81 e0       	ldi	r24, 0x01	; 1
    12de:	90 e0       	ldi	r25, 0x00	; 0
    12e0:	9c 8b       	std	Y+20, r25	; 0x14
    12e2:	8b 8b       	std	Y+19, r24	; 0x13
    12e4:	3f c0       	rjmp	.+126    	; 0x1364 <UP+0x82e>
	else if (__tmp > 65535)
    12e6:	6d 89       	ldd	r22, Y+21	; 0x15
    12e8:	7e 89       	ldd	r23, Y+22	; 0x16
    12ea:	8f 89       	ldd	r24, Y+23	; 0x17
    12ec:	98 8d       	ldd	r25, Y+24	; 0x18
    12ee:	20 e0       	ldi	r18, 0x00	; 0
    12f0:	3f ef       	ldi	r19, 0xFF	; 255
    12f2:	4f e7       	ldi	r20, 0x7F	; 127
    12f4:	57 e4       	ldi	r21, 0x47	; 71
    12f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    12fa:	18 16       	cp	r1, r24
    12fc:	4c f5       	brge	.+82     	; 0x1350 <UP+0x81a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    12fe:	69 8d       	ldd	r22, Y+25	; 0x19
    1300:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1302:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1304:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1306:	20 e0       	ldi	r18, 0x00	; 0
    1308:	30 e0       	ldi	r19, 0x00	; 0
    130a:	40 e2       	ldi	r20, 0x20	; 32
    130c:	51 e4       	ldi	r21, 0x41	; 65
    130e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1312:	dc 01       	movw	r26, r24
    1314:	cb 01       	movw	r24, r22
    1316:	bc 01       	movw	r22, r24
    1318:	cd 01       	movw	r24, r26
    131a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    131e:	dc 01       	movw	r26, r24
    1320:	cb 01       	movw	r24, r22
    1322:	9c 8b       	std	Y+20, r25	; 0x14
    1324:	8b 8b       	std	Y+19, r24	; 0x13
    1326:	0f c0       	rjmp	.+30     	; 0x1346 <UP+0x810>
    1328:	88 ec       	ldi	r24, 0xC8	; 200
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	9a 8b       	std	Y+18, r25	; 0x12
    132e:	89 8b       	std	Y+17, r24	; 0x11
    1330:	89 89       	ldd	r24, Y+17	; 0x11
    1332:	9a 89       	ldd	r25, Y+18	; 0x12
    1334:	01 97       	sbiw	r24, 0x01	; 1
    1336:	f1 f7       	brne	.-4      	; 0x1334 <UP+0x7fe>
    1338:	9a 8b       	std	Y+18, r25	; 0x12
    133a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    133c:	8b 89       	ldd	r24, Y+19	; 0x13
    133e:	9c 89       	ldd	r25, Y+20	; 0x14
    1340:	01 97       	sbiw	r24, 0x01	; 1
    1342:	9c 8b       	std	Y+20, r25	; 0x14
    1344:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1346:	8b 89       	ldd	r24, Y+19	; 0x13
    1348:	9c 89       	ldd	r25, Y+20	; 0x14
    134a:	00 97       	sbiw	r24, 0x00	; 0
    134c:	69 f7       	brne	.-38     	; 0x1328 <UP+0x7f2>
    134e:	14 c0       	rjmp	.+40     	; 0x1378 <UP+0x842>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1350:	6d 89       	ldd	r22, Y+21	; 0x15
    1352:	7e 89       	ldd	r23, Y+22	; 0x16
    1354:	8f 89       	ldd	r24, Y+23	; 0x17
    1356:	98 8d       	ldd	r25, Y+24	; 0x18
    1358:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    135c:	dc 01       	movw	r26, r24
    135e:	cb 01       	movw	r24, r22
    1360:	9c 8b       	std	Y+20, r25	; 0x14
    1362:	8b 8b       	std	Y+19, r24	; 0x13
    1364:	8b 89       	ldd	r24, Y+19	; 0x13
    1366:	9c 89       	ldd	r25, Y+20	; 0x14
    1368:	98 8b       	std	Y+16, r25	; 0x10
    136a:	8f 87       	std	Y+15, r24	; 0x0f
    136c:	8f 85       	ldd	r24, Y+15	; 0x0f
    136e:	98 89       	ldd	r25, Y+16	; 0x10
    1370:	01 97       	sbiw	r24, 0x01	; 1
    1372:	f1 f7       	brne	.-4      	; 0x1370 <UP+0x83a>
    1374:	98 8b       	std	Y+16, r25	; 0x10
    1376:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(20);
	PORTB=0x7F;
    1378:	e8 e3       	ldi	r30, 0x38	; 56
    137a:	f0 e0       	ldi	r31, 0x00	; 0
    137c:	8f e7       	ldi	r24, 0x7F	; 127
    137e:	80 83       	st	Z, r24
    1380:	80 e0       	ldi	r24, 0x00	; 0
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	a0 ea       	ldi	r26, 0xA0	; 160
    1386:	b1 e4       	ldi	r27, 0x41	; 65
    1388:	8b 87       	std	Y+11, r24	; 0x0b
    138a:	9c 87       	std	Y+12, r25	; 0x0c
    138c:	ad 87       	std	Y+13, r26	; 0x0d
    138e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1390:	6b 85       	ldd	r22, Y+11	; 0x0b
    1392:	7c 85       	ldd	r23, Y+12	; 0x0c
    1394:	8d 85       	ldd	r24, Y+13	; 0x0d
    1396:	9e 85       	ldd	r25, Y+14	; 0x0e
    1398:	20 e0       	ldi	r18, 0x00	; 0
    139a:	30 e0       	ldi	r19, 0x00	; 0
    139c:	4a ef       	ldi	r20, 0xFA	; 250
    139e:	54 e4       	ldi	r21, 0x44	; 68
    13a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13a4:	dc 01       	movw	r26, r24
    13a6:	cb 01       	movw	r24, r22
    13a8:	8f 83       	std	Y+7, r24	; 0x07
    13aa:	98 87       	std	Y+8, r25	; 0x08
    13ac:	a9 87       	std	Y+9, r26	; 0x09
    13ae:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    13b0:	6f 81       	ldd	r22, Y+7	; 0x07
    13b2:	78 85       	ldd	r23, Y+8	; 0x08
    13b4:	89 85       	ldd	r24, Y+9	; 0x09
    13b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    13b8:	20 e0       	ldi	r18, 0x00	; 0
    13ba:	30 e0       	ldi	r19, 0x00	; 0
    13bc:	40 e8       	ldi	r20, 0x80	; 128
    13be:	5f e3       	ldi	r21, 0x3F	; 63
    13c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13c4:	88 23       	and	r24, r24
    13c6:	2c f4       	brge	.+10     	; 0x13d2 <UP+0x89c>
		__ticks = 1;
    13c8:	81 e0       	ldi	r24, 0x01	; 1
    13ca:	90 e0       	ldi	r25, 0x00	; 0
    13cc:	9e 83       	std	Y+6, r25	; 0x06
    13ce:	8d 83       	std	Y+5, r24	; 0x05
    13d0:	3f c0       	rjmp	.+126    	; 0x1450 <UP+0x91a>
	else if (__tmp > 65535)
    13d2:	6f 81       	ldd	r22, Y+7	; 0x07
    13d4:	78 85       	ldd	r23, Y+8	; 0x08
    13d6:	89 85       	ldd	r24, Y+9	; 0x09
    13d8:	9a 85       	ldd	r25, Y+10	; 0x0a
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	3f ef       	ldi	r19, 0xFF	; 255
    13de:	4f e7       	ldi	r20, 0x7F	; 127
    13e0:	57 e4       	ldi	r21, 0x47	; 71
    13e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13e6:	18 16       	cp	r1, r24
    13e8:	4c f5       	brge	.+82     	; 0x143c <UP+0x906>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ea:	6b 85       	ldd	r22, Y+11	; 0x0b
    13ec:	7c 85       	ldd	r23, Y+12	; 0x0c
    13ee:	8d 85       	ldd	r24, Y+13	; 0x0d
    13f0:	9e 85       	ldd	r25, Y+14	; 0x0e
    13f2:	20 e0       	ldi	r18, 0x00	; 0
    13f4:	30 e0       	ldi	r19, 0x00	; 0
    13f6:	40 e2       	ldi	r20, 0x20	; 32
    13f8:	51 e4       	ldi	r21, 0x41	; 65
    13fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13fe:	dc 01       	movw	r26, r24
    1400:	cb 01       	movw	r24, r22
    1402:	bc 01       	movw	r22, r24
    1404:	cd 01       	movw	r24, r26
    1406:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    140a:	dc 01       	movw	r26, r24
    140c:	cb 01       	movw	r24, r22
    140e:	9e 83       	std	Y+6, r25	; 0x06
    1410:	8d 83       	std	Y+5, r24	; 0x05
    1412:	0f c0       	rjmp	.+30     	; 0x1432 <UP+0x8fc>
    1414:	88 ec       	ldi	r24, 0xC8	; 200
    1416:	90 e0       	ldi	r25, 0x00	; 0
    1418:	9c 83       	std	Y+4, r25	; 0x04
    141a:	8b 83       	std	Y+3, r24	; 0x03
    141c:	8b 81       	ldd	r24, Y+3	; 0x03
    141e:	9c 81       	ldd	r25, Y+4	; 0x04
    1420:	01 97       	sbiw	r24, 0x01	; 1
    1422:	f1 f7       	brne	.-4      	; 0x1420 <UP+0x8ea>
    1424:	9c 83       	std	Y+4, r25	; 0x04
    1426:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1428:	8d 81       	ldd	r24, Y+5	; 0x05
    142a:	9e 81       	ldd	r25, Y+6	; 0x06
    142c:	01 97       	sbiw	r24, 0x01	; 1
    142e:	9e 83       	std	Y+6, r25	; 0x06
    1430:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1432:	8d 81       	ldd	r24, Y+5	; 0x05
    1434:	9e 81       	ldd	r25, Y+6	; 0x06
    1436:	00 97       	sbiw	r24, 0x00	; 0
    1438:	69 f7       	brne	.-38     	; 0x1414 <UP+0x8de>
    143a:	14 c0       	rjmp	.+40     	; 0x1464 <UP+0x92e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    143c:	6f 81       	ldd	r22, Y+7	; 0x07
    143e:	78 85       	ldd	r23, Y+8	; 0x08
    1440:	89 85       	ldd	r24, Y+9	; 0x09
    1442:	9a 85       	ldd	r25, Y+10	; 0x0a
    1444:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1448:	dc 01       	movw	r26, r24
    144a:	cb 01       	movw	r24, r22
    144c:	9e 83       	std	Y+6, r25	; 0x06
    144e:	8d 83       	std	Y+5, r24	; 0x05
    1450:	8d 81       	ldd	r24, Y+5	; 0x05
    1452:	9e 81       	ldd	r25, Y+6	; 0x06
    1454:	9a 83       	std	Y+2, r25	; 0x02
    1456:	89 83       	std	Y+1, r24	; 0x01
    1458:	89 81       	ldd	r24, Y+1	; 0x01
    145a:	9a 81       	ldd	r25, Y+2	; 0x02
    145c:	01 97       	sbiw	r24, 0x01	; 1
    145e:	f1 f7       	brne	.-4      	; 0x145c <UP+0x926>
    1460:	9a 83       	std	Y+2, r25	; 0x02
    1462:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(20);
}
    1464:	c0 59       	subi	r28, 0x90	; 144
    1466:	df 4f       	sbci	r29, 0xFF	; 255
    1468:	0f b6       	in	r0, 0x3f	; 63
    146a:	f8 94       	cli
    146c:	de bf       	out	0x3e, r29	; 62
    146e:	0f be       	out	0x3f, r0	; 63
    1470:	cd bf       	out	0x3d, r28	; 61
    1472:	cf 91       	pop	r28
    1474:	df 91       	pop	r29
    1476:	1f 91       	pop	r17
    1478:	0f 91       	pop	r16
    147a:	08 95       	ret

0000147c <DOWN>:
void DOWN()
{
    147c:	0f 93       	push	r16
    147e:	1f 93       	push	r17
    1480:	df 93       	push	r29
    1482:	cf 93       	push	r28
    1484:	cd b7       	in	r28, 0x3d	; 61
    1486:	de b7       	in	r29, 0x3e	; 62
    1488:	c0 57       	subi	r28, 0x70	; 112
    148a:	d0 40       	sbci	r29, 0x00	; 0
    148c:	0f b6       	in	r0, 0x3f	; 63
    148e:	f8 94       	cli
    1490:	de bf       	out	0x3e, r29	; 62
    1492:	0f be       	out	0x3f, r0	; 63
    1494:	cd bf       	out	0x3d, r28	; 61
			PORTA=0xFF;
    1496:	eb e3       	ldi	r30, 0x3B	; 59
    1498:	f0 e0       	ldi	r31, 0x00	; 0
    149a:	8f ef       	ldi	r24, 0xFF	; 255
    149c:	80 83       	st	Z, r24
			PORTB=0x7F;
    149e:	e8 e3       	ldi	r30, 0x38	; 56
    14a0:	f0 e0       	ldi	r31, 0x00	; 0
    14a2:	8f e7       	ldi	r24, 0x7F	; 127
    14a4:	80 83       	st	Z, r24
    14a6:	fe 01       	movw	r30, r28
    14a8:	e3 59       	subi	r30, 0x93	; 147
    14aa:	ff 4f       	sbci	r31, 0xFF	; 255
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	a0 ea       	ldi	r26, 0xA0	; 160
    14b2:	b1 e4       	ldi	r27, 0x41	; 65
    14b4:	80 83       	st	Z, r24
    14b6:	91 83       	std	Z+1, r25	; 0x01
    14b8:	a2 83       	std	Z+2, r26	; 0x02
    14ba:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14bc:	8e 01       	movw	r16, r28
    14be:	07 59       	subi	r16, 0x97	; 151
    14c0:	1f 4f       	sbci	r17, 0xFF	; 255
    14c2:	fe 01       	movw	r30, r28
    14c4:	e3 59       	subi	r30, 0x93	; 147
    14c6:	ff 4f       	sbci	r31, 0xFF	; 255
    14c8:	60 81       	ld	r22, Z
    14ca:	71 81       	ldd	r23, Z+1	; 0x01
    14cc:	82 81       	ldd	r24, Z+2	; 0x02
    14ce:	93 81       	ldd	r25, Z+3	; 0x03
    14d0:	20 e0       	ldi	r18, 0x00	; 0
    14d2:	30 e0       	ldi	r19, 0x00	; 0
    14d4:	4a ef       	ldi	r20, 0xFA	; 250
    14d6:	54 e4       	ldi	r21, 0x44	; 68
    14d8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14dc:	dc 01       	movw	r26, r24
    14de:	cb 01       	movw	r24, r22
    14e0:	f8 01       	movw	r30, r16
    14e2:	80 83       	st	Z, r24
    14e4:	91 83       	std	Z+1, r25	; 0x01
    14e6:	a2 83       	std	Z+2, r26	; 0x02
    14e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14ea:	fe 01       	movw	r30, r28
    14ec:	e7 59       	subi	r30, 0x97	; 151
    14ee:	ff 4f       	sbci	r31, 0xFF	; 255
    14f0:	60 81       	ld	r22, Z
    14f2:	71 81       	ldd	r23, Z+1	; 0x01
    14f4:	82 81       	ldd	r24, Z+2	; 0x02
    14f6:	93 81       	ldd	r25, Z+3	; 0x03
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	40 e8       	ldi	r20, 0x80	; 128
    14fe:	5f e3       	ldi	r21, 0x3F	; 63
    1500:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1504:	88 23       	and	r24, r24
    1506:	44 f4       	brge	.+16     	; 0x1518 <DOWN+0x9c>
		__ticks = 1;
    1508:	fe 01       	movw	r30, r28
    150a:	e9 59       	subi	r30, 0x99	; 153
    150c:	ff 4f       	sbci	r31, 0xFF	; 255
    150e:	81 e0       	ldi	r24, 0x01	; 1
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	91 83       	std	Z+1, r25	; 0x01
    1514:	80 83       	st	Z, r24
    1516:	64 c0       	rjmp	.+200    	; 0x15e0 <DOWN+0x164>
	else if (__tmp > 65535)
    1518:	fe 01       	movw	r30, r28
    151a:	e7 59       	subi	r30, 0x97	; 151
    151c:	ff 4f       	sbci	r31, 0xFF	; 255
    151e:	60 81       	ld	r22, Z
    1520:	71 81       	ldd	r23, Z+1	; 0x01
    1522:	82 81       	ldd	r24, Z+2	; 0x02
    1524:	93 81       	ldd	r25, Z+3	; 0x03
    1526:	20 e0       	ldi	r18, 0x00	; 0
    1528:	3f ef       	ldi	r19, 0xFF	; 255
    152a:	4f e7       	ldi	r20, 0x7F	; 127
    152c:	57 e4       	ldi	r21, 0x47	; 71
    152e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1532:	18 16       	cp	r1, r24
    1534:	0c f0       	brlt	.+2      	; 0x1538 <DOWN+0xbc>
    1536:	43 c0       	rjmp	.+134    	; 0x15be <DOWN+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1538:	fe 01       	movw	r30, r28
    153a:	e3 59       	subi	r30, 0x93	; 147
    153c:	ff 4f       	sbci	r31, 0xFF	; 255
    153e:	60 81       	ld	r22, Z
    1540:	71 81       	ldd	r23, Z+1	; 0x01
    1542:	82 81       	ldd	r24, Z+2	; 0x02
    1544:	93 81       	ldd	r25, Z+3	; 0x03
    1546:	20 e0       	ldi	r18, 0x00	; 0
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	40 e2       	ldi	r20, 0x20	; 32
    154c:	51 e4       	ldi	r21, 0x41	; 65
    154e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1552:	dc 01       	movw	r26, r24
    1554:	cb 01       	movw	r24, r22
    1556:	8e 01       	movw	r16, r28
    1558:	09 59       	subi	r16, 0x99	; 153
    155a:	1f 4f       	sbci	r17, 0xFF	; 255
    155c:	bc 01       	movw	r22, r24
    155e:	cd 01       	movw	r24, r26
    1560:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1564:	dc 01       	movw	r26, r24
    1566:	cb 01       	movw	r24, r22
    1568:	f8 01       	movw	r30, r16
    156a:	91 83       	std	Z+1, r25	; 0x01
    156c:	80 83       	st	Z, r24
    156e:	1f c0       	rjmp	.+62     	; 0x15ae <DOWN+0x132>
    1570:	fe 01       	movw	r30, r28
    1572:	eb 59       	subi	r30, 0x9B	; 155
    1574:	ff 4f       	sbci	r31, 0xFF	; 255
    1576:	88 ec       	ldi	r24, 0xC8	; 200
    1578:	90 e0       	ldi	r25, 0x00	; 0
    157a:	91 83       	std	Z+1, r25	; 0x01
    157c:	80 83       	st	Z, r24
    157e:	fe 01       	movw	r30, r28
    1580:	eb 59       	subi	r30, 0x9B	; 155
    1582:	ff 4f       	sbci	r31, 0xFF	; 255
    1584:	80 81       	ld	r24, Z
    1586:	91 81       	ldd	r25, Z+1	; 0x01
    1588:	01 97       	sbiw	r24, 0x01	; 1
    158a:	f1 f7       	brne	.-4      	; 0x1588 <DOWN+0x10c>
    158c:	fe 01       	movw	r30, r28
    158e:	eb 59       	subi	r30, 0x9B	; 155
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	91 83       	std	Z+1, r25	; 0x01
    1594:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1596:	de 01       	movw	r26, r28
    1598:	a9 59       	subi	r26, 0x99	; 153
    159a:	bf 4f       	sbci	r27, 0xFF	; 255
    159c:	fe 01       	movw	r30, r28
    159e:	e9 59       	subi	r30, 0x99	; 153
    15a0:	ff 4f       	sbci	r31, 0xFF	; 255
    15a2:	80 81       	ld	r24, Z
    15a4:	91 81       	ldd	r25, Z+1	; 0x01
    15a6:	01 97       	sbiw	r24, 0x01	; 1
    15a8:	11 96       	adiw	r26, 0x01	; 1
    15aa:	9c 93       	st	X, r25
    15ac:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15ae:	fe 01       	movw	r30, r28
    15b0:	e9 59       	subi	r30, 0x99	; 153
    15b2:	ff 4f       	sbci	r31, 0xFF	; 255
    15b4:	80 81       	ld	r24, Z
    15b6:	91 81       	ldd	r25, Z+1	; 0x01
    15b8:	00 97       	sbiw	r24, 0x00	; 0
    15ba:	d1 f6       	brne	.-76     	; 0x1570 <DOWN+0xf4>
    15bc:	27 c0       	rjmp	.+78     	; 0x160c <DOWN+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15be:	8e 01       	movw	r16, r28
    15c0:	09 59       	subi	r16, 0x99	; 153
    15c2:	1f 4f       	sbci	r17, 0xFF	; 255
    15c4:	fe 01       	movw	r30, r28
    15c6:	e7 59       	subi	r30, 0x97	; 151
    15c8:	ff 4f       	sbci	r31, 0xFF	; 255
    15ca:	60 81       	ld	r22, Z
    15cc:	71 81       	ldd	r23, Z+1	; 0x01
    15ce:	82 81       	ldd	r24, Z+2	; 0x02
    15d0:	93 81       	ldd	r25, Z+3	; 0x03
    15d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15d6:	dc 01       	movw	r26, r24
    15d8:	cb 01       	movw	r24, r22
    15da:	f8 01       	movw	r30, r16
    15dc:	91 83       	std	Z+1, r25	; 0x01
    15de:	80 83       	st	Z, r24
    15e0:	de 01       	movw	r26, r28
    15e2:	ad 59       	subi	r26, 0x9D	; 157
    15e4:	bf 4f       	sbci	r27, 0xFF	; 255
    15e6:	fe 01       	movw	r30, r28
    15e8:	e9 59       	subi	r30, 0x99	; 153
    15ea:	ff 4f       	sbci	r31, 0xFF	; 255
    15ec:	80 81       	ld	r24, Z
    15ee:	91 81       	ldd	r25, Z+1	; 0x01
    15f0:	8d 93       	st	X+, r24
    15f2:	9c 93       	st	X, r25
    15f4:	fe 01       	movw	r30, r28
    15f6:	ed 59       	subi	r30, 0x9D	; 157
    15f8:	ff 4f       	sbci	r31, 0xFF	; 255
    15fa:	80 81       	ld	r24, Z
    15fc:	91 81       	ldd	r25, Z+1	; 0x01
    15fe:	01 97       	sbiw	r24, 0x01	; 1
    1600:	f1 f7       	brne	.-4      	; 0x15fe <DOWN+0x182>
    1602:	fe 01       	movw	r30, r28
    1604:	ed 59       	subi	r30, 0x9D	; 157
    1606:	ff 4f       	sbci	r31, 0xFF	; 255
    1608:	91 83       	std	Z+1, r25	; 0x01
    160a:	80 83       	st	Z, r24
			_delay_ms(20);
			PORTB=0xBF;
    160c:	e8 e3       	ldi	r30, 0x38	; 56
    160e:	f0 e0       	ldi	r31, 0x00	; 0
    1610:	8f eb       	ldi	r24, 0xBF	; 191
    1612:	80 83       	st	Z, r24
    1614:	fe 01       	movw	r30, r28
    1616:	e1 5a       	subi	r30, 0xA1	; 161
    1618:	ff 4f       	sbci	r31, 0xFF	; 255
    161a:	80 e0       	ldi	r24, 0x00	; 0
    161c:	90 e0       	ldi	r25, 0x00	; 0
    161e:	a0 ea       	ldi	r26, 0xA0	; 160
    1620:	b1 e4       	ldi	r27, 0x41	; 65
    1622:	80 83       	st	Z, r24
    1624:	91 83       	std	Z+1, r25	; 0x01
    1626:	a2 83       	std	Z+2, r26	; 0x02
    1628:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    162a:	8e 01       	movw	r16, r28
    162c:	05 5a       	subi	r16, 0xA5	; 165
    162e:	1f 4f       	sbci	r17, 0xFF	; 255
    1630:	fe 01       	movw	r30, r28
    1632:	e1 5a       	subi	r30, 0xA1	; 161
    1634:	ff 4f       	sbci	r31, 0xFF	; 255
    1636:	60 81       	ld	r22, Z
    1638:	71 81       	ldd	r23, Z+1	; 0x01
    163a:	82 81       	ldd	r24, Z+2	; 0x02
    163c:	93 81       	ldd	r25, Z+3	; 0x03
    163e:	20 e0       	ldi	r18, 0x00	; 0
    1640:	30 e0       	ldi	r19, 0x00	; 0
    1642:	4a ef       	ldi	r20, 0xFA	; 250
    1644:	54 e4       	ldi	r21, 0x44	; 68
    1646:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    164a:	dc 01       	movw	r26, r24
    164c:	cb 01       	movw	r24, r22
    164e:	f8 01       	movw	r30, r16
    1650:	80 83       	st	Z, r24
    1652:	91 83       	std	Z+1, r25	; 0x01
    1654:	a2 83       	std	Z+2, r26	; 0x02
    1656:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1658:	fe 01       	movw	r30, r28
    165a:	e5 5a       	subi	r30, 0xA5	; 165
    165c:	ff 4f       	sbci	r31, 0xFF	; 255
    165e:	60 81       	ld	r22, Z
    1660:	71 81       	ldd	r23, Z+1	; 0x01
    1662:	82 81       	ldd	r24, Z+2	; 0x02
    1664:	93 81       	ldd	r25, Z+3	; 0x03
    1666:	20 e0       	ldi	r18, 0x00	; 0
    1668:	30 e0       	ldi	r19, 0x00	; 0
    166a:	40 e8       	ldi	r20, 0x80	; 128
    166c:	5f e3       	ldi	r21, 0x3F	; 63
    166e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1672:	88 23       	and	r24, r24
    1674:	44 f4       	brge	.+16     	; 0x1686 <DOWN+0x20a>
		__ticks = 1;
    1676:	fe 01       	movw	r30, r28
    1678:	e7 5a       	subi	r30, 0xA7	; 167
    167a:	ff 4f       	sbci	r31, 0xFF	; 255
    167c:	81 e0       	ldi	r24, 0x01	; 1
    167e:	90 e0       	ldi	r25, 0x00	; 0
    1680:	91 83       	std	Z+1, r25	; 0x01
    1682:	80 83       	st	Z, r24
    1684:	64 c0       	rjmp	.+200    	; 0x174e <DOWN+0x2d2>
	else if (__tmp > 65535)
    1686:	fe 01       	movw	r30, r28
    1688:	e5 5a       	subi	r30, 0xA5	; 165
    168a:	ff 4f       	sbci	r31, 0xFF	; 255
    168c:	60 81       	ld	r22, Z
    168e:	71 81       	ldd	r23, Z+1	; 0x01
    1690:	82 81       	ldd	r24, Z+2	; 0x02
    1692:	93 81       	ldd	r25, Z+3	; 0x03
    1694:	20 e0       	ldi	r18, 0x00	; 0
    1696:	3f ef       	ldi	r19, 0xFF	; 255
    1698:	4f e7       	ldi	r20, 0x7F	; 127
    169a:	57 e4       	ldi	r21, 0x47	; 71
    169c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16a0:	18 16       	cp	r1, r24
    16a2:	0c f0       	brlt	.+2      	; 0x16a6 <DOWN+0x22a>
    16a4:	43 c0       	rjmp	.+134    	; 0x172c <DOWN+0x2b0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16a6:	fe 01       	movw	r30, r28
    16a8:	e1 5a       	subi	r30, 0xA1	; 161
    16aa:	ff 4f       	sbci	r31, 0xFF	; 255
    16ac:	60 81       	ld	r22, Z
    16ae:	71 81       	ldd	r23, Z+1	; 0x01
    16b0:	82 81       	ldd	r24, Z+2	; 0x02
    16b2:	93 81       	ldd	r25, Z+3	; 0x03
    16b4:	20 e0       	ldi	r18, 0x00	; 0
    16b6:	30 e0       	ldi	r19, 0x00	; 0
    16b8:	40 e2       	ldi	r20, 0x20	; 32
    16ba:	51 e4       	ldi	r21, 0x41	; 65
    16bc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16c0:	dc 01       	movw	r26, r24
    16c2:	cb 01       	movw	r24, r22
    16c4:	8e 01       	movw	r16, r28
    16c6:	07 5a       	subi	r16, 0xA7	; 167
    16c8:	1f 4f       	sbci	r17, 0xFF	; 255
    16ca:	bc 01       	movw	r22, r24
    16cc:	cd 01       	movw	r24, r26
    16ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    16d2:	dc 01       	movw	r26, r24
    16d4:	cb 01       	movw	r24, r22
    16d6:	f8 01       	movw	r30, r16
    16d8:	91 83       	std	Z+1, r25	; 0x01
    16da:	80 83       	st	Z, r24
    16dc:	1f c0       	rjmp	.+62     	; 0x171c <DOWN+0x2a0>
    16de:	fe 01       	movw	r30, r28
    16e0:	e9 5a       	subi	r30, 0xA9	; 169
    16e2:	ff 4f       	sbci	r31, 0xFF	; 255
    16e4:	88 ec       	ldi	r24, 0xC8	; 200
    16e6:	90 e0       	ldi	r25, 0x00	; 0
    16e8:	91 83       	std	Z+1, r25	; 0x01
    16ea:	80 83       	st	Z, r24
    16ec:	fe 01       	movw	r30, r28
    16ee:	e9 5a       	subi	r30, 0xA9	; 169
    16f0:	ff 4f       	sbci	r31, 0xFF	; 255
    16f2:	80 81       	ld	r24, Z
    16f4:	91 81       	ldd	r25, Z+1	; 0x01
    16f6:	01 97       	sbiw	r24, 0x01	; 1
    16f8:	f1 f7       	brne	.-4      	; 0x16f6 <DOWN+0x27a>
    16fa:	fe 01       	movw	r30, r28
    16fc:	e9 5a       	subi	r30, 0xA9	; 169
    16fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1700:	91 83       	std	Z+1, r25	; 0x01
    1702:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1704:	de 01       	movw	r26, r28
    1706:	a7 5a       	subi	r26, 0xA7	; 167
    1708:	bf 4f       	sbci	r27, 0xFF	; 255
    170a:	fe 01       	movw	r30, r28
    170c:	e7 5a       	subi	r30, 0xA7	; 167
    170e:	ff 4f       	sbci	r31, 0xFF	; 255
    1710:	80 81       	ld	r24, Z
    1712:	91 81       	ldd	r25, Z+1	; 0x01
    1714:	01 97       	sbiw	r24, 0x01	; 1
    1716:	11 96       	adiw	r26, 0x01	; 1
    1718:	9c 93       	st	X, r25
    171a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    171c:	fe 01       	movw	r30, r28
    171e:	e7 5a       	subi	r30, 0xA7	; 167
    1720:	ff 4f       	sbci	r31, 0xFF	; 255
    1722:	80 81       	ld	r24, Z
    1724:	91 81       	ldd	r25, Z+1	; 0x01
    1726:	00 97       	sbiw	r24, 0x00	; 0
    1728:	d1 f6       	brne	.-76     	; 0x16de <DOWN+0x262>
    172a:	27 c0       	rjmp	.+78     	; 0x177a <DOWN+0x2fe>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    172c:	8e 01       	movw	r16, r28
    172e:	07 5a       	subi	r16, 0xA7	; 167
    1730:	1f 4f       	sbci	r17, 0xFF	; 255
    1732:	fe 01       	movw	r30, r28
    1734:	e5 5a       	subi	r30, 0xA5	; 165
    1736:	ff 4f       	sbci	r31, 0xFF	; 255
    1738:	60 81       	ld	r22, Z
    173a:	71 81       	ldd	r23, Z+1	; 0x01
    173c:	82 81       	ldd	r24, Z+2	; 0x02
    173e:	93 81       	ldd	r25, Z+3	; 0x03
    1740:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1744:	dc 01       	movw	r26, r24
    1746:	cb 01       	movw	r24, r22
    1748:	f8 01       	movw	r30, r16
    174a:	91 83       	std	Z+1, r25	; 0x01
    174c:	80 83       	st	Z, r24
    174e:	de 01       	movw	r26, r28
    1750:	ab 5a       	subi	r26, 0xAB	; 171
    1752:	bf 4f       	sbci	r27, 0xFF	; 255
    1754:	fe 01       	movw	r30, r28
    1756:	e7 5a       	subi	r30, 0xA7	; 167
    1758:	ff 4f       	sbci	r31, 0xFF	; 255
    175a:	80 81       	ld	r24, Z
    175c:	91 81       	ldd	r25, Z+1	; 0x01
    175e:	8d 93       	st	X+, r24
    1760:	9c 93       	st	X, r25
    1762:	fe 01       	movw	r30, r28
    1764:	eb 5a       	subi	r30, 0xAB	; 171
    1766:	ff 4f       	sbci	r31, 0xFF	; 255
    1768:	80 81       	ld	r24, Z
    176a:	91 81       	ldd	r25, Z+1	; 0x01
    176c:	01 97       	sbiw	r24, 0x01	; 1
    176e:	f1 f7       	brne	.-4      	; 0x176c <DOWN+0x2f0>
    1770:	fe 01       	movw	r30, r28
    1772:	eb 5a       	subi	r30, 0xAB	; 171
    1774:	ff 4f       	sbci	r31, 0xFF	; 255
    1776:	91 83       	std	Z+1, r25	; 0x01
    1778:	80 83       	st	Z, r24
			_delay_ms(20);
			PORTB=0xDF;
    177a:	e8 e3       	ldi	r30, 0x38	; 56
    177c:	f0 e0       	ldi	r31, 0x00	; 0
    177e:	8f ed       	ldi	r24, 0xDF	; 223
    1780:	80 83       	st	Z, r24
    1782:	fe 01       	movw	r30, r28
    1784:	ef 5a       	subi	r30, 0xAF	; 175
    1786:	ff 4f       	sbci	r31, 0xFF	; 255
    1788:	80 e0       	ldi	r24, 0x00	; 0
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	a0 ea       	ldi	r26, 0xA0	; 160
    178e:	b1 e4       	ldi	r27, 0x41	; 65
    1790:	80 83       	st	Z, r24
    1792:	91 83       	std	Z+1, r25	; 0x01
    1794:	a2 83       	std	Z+2, r26	; 0x02
    1796:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1798:	8e 01       	movw	r16, r28
    179a:	03 5b       	subi	r16, 0xB3	; 179
    179c:	1f 4f       	sbci	r17, 0xFF	; 255
    179e:	fe 01       	movw	r30, r28
    17a0:	ef 5a       	subi	r30, 0xAF	; 175
    17a2:	ff 4f       	sbci	r31, 0xFF	; 255
    17a4:	60 81       	ld	r22, Z
    17a6:	71 81       	ldd	r23, Z+1	; 0x01
    17a8:	82 81       	ldd	r24, Z+2	; 0x02
    17aa:	93 81       	ldd	r25, Z+3	; 0x03
    17ac:	20 e0       	ldi	r18, 0x00	; 0
    17ae:	30 e0       	ldi	r19, 0x00	; 0
    17b0:	4a ef       	ldi	r20, 0xFA	; 250
    17b2:	54 e4       	ldi	r21, 0x44	; 68
    17b4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17b8:	dc 01       	movw	r26, r24
    17ba:	cb 01       	movw	r24, r22
    17bc:	f8 01       	movw	r30, r16
    17be:	80 83       	st	Z, r24
    17c0:	91 83       	std	Z+1, r25	; 0x01
    17c2:	a2 83       	std	Z+2, r26	; 0x02
    17c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17c6:	fe 01       	movw	r30, r28
    17c8:	e3 5b       	subi	r30, 0xB3	; 179
    17ca:	ff 4f       	sbci	r31, 0xFF	; 255
    17cc:	60 81       	ld	r22, Z
    17ce:	71 81       	ldd	r23, Z+1	; 0x01
    17d0:	82 81       	ldd	r24, Z+2	; 0x02
    17d2:	93 81       	ldd	r25, Z+3	; 0x03
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	40 e8       	ldi	r20, 0x80	; 128
    17da:	5f e3       	ldi	r21, 0x3F	; 63
    17dc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    17e0:	88 23       	and	r24, r24
    17e2:	44 f4       	brge	.+16     	; 0x17f4 <DOWN+0x378>
		__ticks = 1;
    17e4:	fe 01       	movw	r30, r28
    17e6:	e5 5b       	subi	r30, 0xB5	; 181
    17e8:	ff 4f       	sbci	r31, 0xFF	; 255
    17ea:	81 e0       	ldi	r24, 0x01	; 1
    17ec:	90 e0       	ldi	r25, 0x00	; 0
    17ee:	91 83       	std	Z+1, r25	; 0x01
    17f0:	80 83       	st	Z, r24
    17f2:	64 c0       	rjmp	.+200    	; 0x18bc <DOWN+0x440>
	else if (__tmp > 65535)
    17f4:	fe 01       	movw	r30, r28
    17f6:	e3 5b       	subi	r30, 0xB3	; 179
    17f8:	ff 4f       	sbci	r31, 0xFF	; 255
    17fa:	60 81       	ld	r22, Z
    17fc:	71 81       	ldd	r23, Z+1	; 0x01
    17fe:	82 81       	ldd	r24, Z+2	; 0x02
    1800:	93 81       	ldd	r25, Z+3	; 0x03
    1802:	20 e0       	ldi	r18, 0x00	; 0
    1804:	3f ef       	ldi	r19, 0xFF	; 255
    1806:	4f e7       	ldi	r20, 0x7F	; 127
    1808:	57 e4       	ldi	r21, 0x47	; 71
    180a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    180e:	18 16       	cp	r1, r24
    1810:	0c f0       	brlt	.+2      	; 0x1814 <DOWN+0x398>
    1812:	43 c0       	rjmp	.+134    	; 0x189a <DOWN+0x41e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1814:	fe 01       	movw	r30, r28
    1816:	ef 5a       	subi	r30, 0xAF	; 175
    1818:	ff 4f       	sbci	r31, 0xFF	; 255
    181a:	60 81       	ld	r22, Z
    181c:	71 81       	ldd	r23, Z+1	; 0x01
    181e:	82 81       	ldd	r24, Z+2	; 0x02
    1820:	93 81       	ldd	r25, Z+3	; 0x03
    1822:	20 e0       	ldi	r18, 0x00	; 0
    1824:	30 e0       	ldi	r19, 0x00	; 0
    1826:	40 e2       	ldi	r20, 0x20	; 32
    1828:	51 e4       	ldi	r21, 0x41	; 65
    182a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    182e:	dc 01       	movw	r26, r24
    1830:	cb 01       	movw	r24, r22
    1832:	8e 01       	movw	r16, r28
    1834:	05 5b       	subi	r16, 0xB5	; 181
    1836:	1f 4f       	sbci	r17, 0xFF	; 255
    1838:	bc 01       	movw	r22, r24
    183a:	cd 01       	movw	r24, r26
    183c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1840:	dc 01       	movw	r26, r24
    1842:	cb 01       	movw	r24, r22
    1844:	f8 01       	movw	r30, r16
    1846:	91 83       	std	Z+1, r25	; 0x01
    1848:	80 83       	st	Z, r24
    184a:	1f c0       	rjmp	.+62     	; 0x188a <DOWN+0x40e>
    184c:	fe 01       	movw	r30, r28
    184e:	e7 5b       	subi	r30, 0xB7	; 183
    1850:	ff 4f       	sbci	r31, 0xFF	; 255
    1852:	88 ec       	ldi	r24, 0xC8	; 200
    1854:	90 e0       	ldi	r25, 0x00	; 0
    1856:	91 83       	std	Z+1, r25	; 0x01
    1858:	80 83       	st	Z, r24
    185a:	fe 01       	movw	r30, r28
    185c:	e7 5b       	subi	r30, 0xB7	; 183
    185e:	ff 4f       	sbci	r31, 0xFF	; 255
    1860:	80 81       	ld	r24, Z
    1862:	91 81       	ldd	r25, Z+1	; 0x01
    1864:	01 97       	sbiw	r24, 0x01	; 1
    1866:	f1 f7       	brne	.-4      	; 0x1864 <DOWN+0x3e8>
    1868:	fe 01       	movw	r30, r28
    186a:	e7 5b       	subi	r30, 0xB7	; 183
    186c:	ff 4f       	sbci	r31, 0xFF	; 255
    186e:	91 83       	std	Z+1, r25	; 0x01
    1870:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1872:	de 01       	movw	r26, r28
    1874:	a5 5b       	subi	r26, 0xB5	; 181
    1876:	bf 4f       	sbci	r27, 0xFF	; 255
    1878:	fe 01       	movw	r30, r28
    187a:	e5 5b       	subi	r30, 0xB5	; 181
    187c:	ff 4f       	sbci	r31, 0xFF	; 255
    187e:	80 81       	ld	r24, Z
    1880:	91 81       	ldd	r25, Z+1	; 0x01
    1882:	01 97       	sbiw	r24, 0x01	; 1
    1884:	11 96       	adiw	r26, 0x01	; 1
    1886:	9c 93       	st	X, r25
    1888:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    188a:	fe 01       	movw	r30, r28
    188c:	e5 5b       	subi	r30, 0xB5	; 181
    188e:	ff 4f       	sbci	r31, 0xFF	; 255
    1890:	80 81       	ld	r24, Z
    1892:	91 81       	ldd	r25, Z+1	; 0x01
    1894:	00 97       	sbiw	r24, 0x00	; 0
    1896:	d1 f6       	brne	.-76     	; 0x184c <DOWN+0x3d0>
    1898:	27 c0       	rjmp	.+78     	; 0x18e8 <DOWN+0x46c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    189a:	8e 01       	movw	r16, r28
    189c:	05 5b       	subi	r16, 0xB5	; 181
    189e:	1f 4f       	sbci	r17, 0xFF	; 255
    18a0:	fe 01       	movw	r30, r28
    18a2:	e3 5b       	subi	r30, 0xB3	; 179
    18a4:	ff 4f       	sbci	r31, 0xFF	; 255
    18a6:	60 81       	ld	r22, Z
    18a8:	71 81       	ldd	r23, Z+1	; 0x01
    18aa:	82 81       	ldd	r24, Z+2	; 0x02
    18ac:	93 81       	ldd	r25, Z+3	; 0x03
    18ae:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18b2:	dc 01       	movw	r26, r24
    18b4:	cb 01       	movw	r24, r22
    18b6:	f8 01       	movw	r30, r16
    18b8:	91 83       	std	Z+1, r25	; 0x01
    18ba:	80 83       	st	Z, r24
    18bc:	de 01       	movw	r26, r28
    18be:	a9 5b       	subi	r26, 0xB9	; 185
    18c0:	bf 4f       	sbci	r27, 0xFF	; 255
    18c2:	fe 01       	movw	r30, r28
    18c4:	e5 5b       	subi	r30, 0xB5	; 181
    18c6:	ff 4f       	sbci	r31, 0xFF	; 255
    18c8:	80 81       	ld	r24, Z
    18ca:	91 81       	ldd	r25, Z+1	; 0x01
    18cc:	8d 93       	st	X+, r24
    18ce:	9c 93       	st	X, r25
    18d0:	fe 01       	movw	r30, r28
    18d2:	e9 5b       	subi	r30, 0xB9	; 185
    18d4:	ff 4f       	sbci	r31, 0xFF	; 255
    18d6:	80 81       	ld	r24, Z
    18d8:	91 81       	ldd	r25, Z+1	; 0x01
    18da:	01 97       	sbiw	r24, 0x01	; 1
    18dc:	f1 f7       	brne	.-4      	; 0x18da <DOWN+0x45e>
    18de:	fe 01       	movw	r30, r28
    18e0:	e9 5b       	subi	r30, 0xB9	; 185
    18e2:	ff 4f       	sbci	r31, 0xFF	; 255
    18e4:	91 83       	std	Z+1, r25	; 0x01
    18e6:	80 83       	st	Z, r24
			_delay_ms(20);
			PORTB=0xEF;
    18e8:	e8 e3       	ldi	r30, 0x38	; 56
    18ea:	f0 e0       	ldi	r31, 0x00	; 0
    18ec:	8f ee       	ldi	r24, 0xEF	; 239
    18ee:	80 83       	st	Z, r24
    18f0:	fe 01       	movw	r30, r28
    18f2:	ed 5b       	subi	r30, 0xBD	; 189
    18f4:	ff 4f       	sbci	r31, 0xFF	; 255
    18f6:	80 e0       	ldi	r24, 0x00	; 0
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	a0 ea       	ldi	r26, 0xA0	; 160
    18fc:	b1 e4       	ldi	r27, 0x41	; 65
    18fe:	80 83       	st	Z, r24
    1900:	91 83       	std	Z+1, r25	; 0x01
    1902:	a2 83       	std	Z+2, r26	; 0x02
    1904:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1906:	8e 01       	movw	r16, r28
    1908:	01 5c       	subi	r16, 0xC1	; 193
    190a:	1f 4f       	sbci	r17, 0xFF	; 255
    190c:	fe 01       	movw	r30, r28
    190e:	ed 5b       	subi	r30, 0xBD	; 189
    1910:	ff 4f       	sbci	r31, 0xFF	; 255
    1912:	60 81       	ld	r22, Z
    1914:	71 81       	ldd	r23, Z+1	; 0x01
    1916:	82 81       	ldd	r24, Z+2	; 0x02
    1918:	93 81       	ldd	r25, Z+3	; 0x03
    191a:	20 e0       	ldi	r18, 0x00	; 0
    191c:	30 e0       	ldi	r19, 0x00	; 0
    191e:	4a ef       	ldi	r20, 0xFA	; 250
    1920:	54 e4       	ldi	r21, 0x44	; 68
    1922:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1926:	dc 01       	movw	r26, r24
    1928:	cb 01       	movw	r24, r22
    192a:	f8 01       	movw	r30, r16
    192c:	80 83       	st	Z, r24
    192e:	91 83       	std	Z+1, r25	; 0x01
    1930:	a2 83       	std	Z+2, r26	; 0x02
    1932:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1934:	fe 01       	movw	r30, r28
    1936:	ff 96       	adiw	r30, 0x3f	; 63
    1938:	60 81       	ld	r22, Z
    193a:	71 81       	ldd	r23, Z+1	; 0x01
    193c:	82 81       	ldd	r24, Z+2	; 0x02
    193e:	93 81       	ldd	r25, Z+3	; 0x03
    1940:	20 e0       	ldi	r18, 0x00	; 0
    1942:	30 e0       	ldi	r19, 0x00	; 0
    1944:	40 e8       	ldi	r20, 0x80	; 128
    1946:	5f e3       	ldi	r21, 0x3F	; 63
    1948:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    194c:	88 23       	and	r24, r24
    194e:	2c f4       	brge	.+10     	; 0x195a <DOWN+0x4de>
		__ticks = 1;
    1950:	81 e0       	ldi	r24, 0x01	; 1
    1952:	90 e0       	ldi	r25, 0x00	; 0
    1954:	9e af       	std	Y+62, r25	; 0x3e
    1956:	8d af       	std	Y+61, r24	; 0x3d
    1958:	46 c0       	rjmp	.+140    	; 0x19e6 <DOWN+0x56a>
	else if (__tmp > 65535)
    195a:	fe 01       	movw	r30, r28
    195c:	ff 96       	adiw	r30, 0x3f	; 63
    195e:	60 81       	ld	r22, Z
    1960:	71 81       	ldd	r23, Z+1	; 0x01
    1962:	82 81       	ldd	r24, Z+2	; 0x02
    1964:	93 81       	ldd	r25, Z+3	; 0x03
    1966:	20 e0       	ldi	r18, 0x00	; 0
    1968:	3f ef       	ldi	r19, 0xFF	; 255
    196a:	4f e7       	ldi	r20, 0x7F	; 127
    196c:	57 e4       	ldi	r21, 0x47	; 71
    196e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1972:	18 16       	cp	r1, r24
    1974:	64 f5       	brge	.+88     	; 0x19ce <DOWN+0x552>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1976:	fe 01       	movw	r30, r28
    1978:	ed 5b       	subi	r30, 0xBD	; 189
    197a:	ff 4f       	sbci	r31, 0xFF	; 255
    197c:	60 81       	ld	r22, Z
    197e:	71 81       	ldd	r23, Z+1	; 0x01
    1980:	82 81       	ldd	r24, Z+2	; 0x02
    1982:	93 81       	ldd	r25, Z+3	; 0x03
    1984:	20 e0       	ldi	r18, 0x00	; 0
    1986:	30 e0       	ldi	r19, 0x00	; 0
    1988:	40 e2       	ldi	r20, 0x20	; 32
    198a:	51 e4       	ldi	r21, 0x41	; 65
    198c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1990:	dc 01       	movw	r26, r24
    1992:	cb 01       	movw	r24, r22
    1994:	bc 01       	movw	r22, r24
    1996:	cd 01       	movw	r24, r26
    1998:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    199c:	dc 01       	movw	r26, r24
    199e:	cb 01       	movw	r24, r22
    19a0:	9e af       	std	Y+62, r25	; 0x3e
    19a2:	8d af       	std	Y+61, r24	; 0x3d
    19a4:	0f c0       	rjmp	.+30     	; 0x19c4 <DOWN+0x548>
    19a6:	88 ec       	ldi	r24, 0xC8	; 200
    19a8:	90 e0       	ldi	r25, 0x00	; 0
    19aa:	9c af       	std	Y+60, r25	; 0x3c
    19ac:	8b af       	std	Y+59, r24	; 0x3b
    19ae:	8b ad       	ldd	r24, Y+59	; 0x3b
    19b0:	9c ad       	ldd	r25, Y+60	; 0x3c
    19b2:	01 97       	sbiw	r24, 0x01	; 1
    19b4:	f1 f7       	brne	.-4      	; 0x19b2 <DOWN+0x536>
    19b6:	9c af       	std	Y+60, r25	; 0x3c
    19b8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    19ba:	8d ad       	ldd	r24, Y+61	; 0x3d
    19bc:	9e ad       	ldd	r25, Y+62	; 0x3e
    19be:	01 97       	sbiw	r24, 0x01	; 1
    19c0:	9e af       	std	Y+62, r25	; 0x3e
    19c2:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    19c4:	8d ad       	ldd	r24, Y+61	; 0x3d
    19c6:	9e ad       	ldd	r25, Y+62	; 0x3e
    19c8:	00 97       	sbiw	r24, 0x00	; 0
    19ca:	69 f7       	brne	.-38     	; 0x19a6 <DOWN+0x52a>
    19cc:	16 c0       	rjmp	.+44     	; 0x19fa <DOWN+0x57e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    19ce:	fe 01       	movw	r30, r28
    19d0:	ff 96       	adiw	r30, 0x3f	; 63
    19d2:	60 81       	ld	r22, Z
    19d4:	71 81       	ldd	r23, Z+1	; 0x01
    19d6:	82 81       	ldd	r24, Z+2	; 0x02
    19d8:	93 81       	ldd	r25, Z+3	; 0x03
    19da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19de:	dc 01       	movw	r26, r24
    19e0:	cb 01       	movw	r24, r22
    19e2:	9e af       	std	Y+62, r25	; 0x3e
    19e4:	8d af       	std	Y+61, r24	; 0x3d
    19e6:	8d ad       	ldd	r24, Y+61	; 0x3d
    19e8:	9e ad       	ldd	r25, Y+62	; 0x3e
    19ea:	9a af       	std	Y+58, r25	; 0x3a
    19ec:	89 af       	std	Y+57, r24	; 0x39
    19ee:	89 ad       	ldd	r24, Y+57	; 0x39
    19f0:	9a ad       	ldd	r25, Y+58	; 0x3a
    19f2:	01 97       	sbiw	r24, 0x01	; 1
    19f4:	f1 f7       	brne	.-4      	; 0x19f2 <DOWN+0x576>
    19f6:	9a af       	std	Y+58, r25	; 0x3a
    19f8:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(20);
			PORTB=0xF7;
    19fa:	e8 e3       	ldi	r30, 0x38	; 56
    19fc:	f0 e0       	ldi	r31, 0x00	; 0
    19fe:	87 ef       	ldi	r24, 0xF7	; 247
    1a00:	80 83       	st	Z, r24
    1a02:	80 e0       	ldi	r24, 0x00	; 0
    1a04:	90 e0       	ldi	r25, 0x00	; 0
    1a06:	a0 ea       	ldi	r26, 0xA0	; 160
    1a08:	b1 e4       	ldi	r27, 0x41	; 65
    1a0a:	8d ab       	std	Y+53, r24	; 0x35
    1a0c:	9e ab       	std	Y+54, r25	; 0x36
    1a0e:	af ab       	std	Y+55, r26	; 0x37
    1a10:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a12:	6d a9       	ldd	r22, Y+53	; 0x35
    1a14:	7e a9       	ldd	r23, Y+54	; 0x36
    1a16:	8f a9       	ldd	r24, Y+55	; 0x37
    1a18:	98 ad       	ldd	r25, Y+56	; 0x38
    1a1a:	20 e0       	ldi	r18, 0x00	; 0
    1a1c:	30 e0       	ldi	r19, 0x00	; 0
    1a1e:	4a ef       	ldi	r20, 0xFA	; 250
    1a20:	54 e4       	ldi	r21, 0x44	; 68
    1a22:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a26:	dc 01       	movw	r26, r24
    1a28:	cb 01       	movw	r24, r22
    1a2a:	89 ab       	std	Y+49, r24	; 0x31
    1a2c:	9a ab       	std	Y+50, r25	; 0x32
    1a2e:	ab ab       	std	Y+51, r26	; 0x33
    1a30:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    1a32:	69 a9       	ldd	r22, Y+49	; 0x31
    1a34:	7a a9       	ldd	r23, Y+50	; 0x32
    1a36:	8b a9       	ldd	r24, Y+51	; 0x33
    1a38:	9c a9       	ldd	r25, Y+52	; 0x34
    1a3a:	20 e0       	ldi	r18, 0x00	; 0
    1a3c:	30 e0       	ldi	r19, 0x00	; 0
    1a3e:	40 e8       	ldi	r20, 0x80	; 128
    1a40:	5f e3       	ldi	r21, 0x3F	; 63
    1a42:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1a46:	88 23       	and	r24, r24
    1a48:	2c f4       	brge	.+10     	; 0x1a54 <DOWN+0x5d8>
		__ticks = 1;
    1a4a:	81 e0       	ldi	r24, 0x01	; 1
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	98 ab       	std	Y+48, r25	; 0x30
    1a50:	8f a7       	std	Y+47, r24	; 0x2f
    1a52:	3f c0       	rjmp	.+126    	; 0x1ad2 <DOWN+0x656>
	else if (__tmp > 65535)
    1a54:	69 a9       	ldd	r22, Y+49	; 0x31
    1a56:	7a a9       	ldd	r23, Y+50	; 0x32
    1a58:	8b a9       	ldd	r24, Y+51	; 0x33
    1a5a:	9c a9       	ldd	r25, Y+52	; 0x34
    1a5c:	20 e0       	ldi	r18, 0x00	; 0
    1a5e:	3f ef       	ldi	r19, 0xFF	; 255
    1a60:	4f e7       	ldi	r20, 0x7F	; 127
    1a62:	57 e4       	ldi	r21, 0x47	; 71
    1a64:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1a68:	18 16       	cp	r1, r24
    1a6a:	4c f5       	brge	.+82     	; 0x1abe <DOWN+0x642>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1a6c:	6d a9       	ldd	r22, Y+53	; 0x35
    1a6e:	7e a9       	ldd	r23, Y+54	; 0x36
    1a70:	8f a9       	ldd	r24, Y+55	; 0x37
    1a72:	98 ad       	ldd	r25, Y+56	; 0x38
    1a74:	20 e0       	ldi	r18, 0x00	; 0
    1a76:	30 e0       	ldi	r19, 0x00	; 0
    1a78:	40 e2       	ldi	r20, 0x20	; 32
    1a7a:	51 e4       	ldi	r21, 0x41	; 65
    1a7c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a80:	dc 01       	movw	r26, r24
    1a82:	cb 01       	movw	r24, r22
    1a84:	bc 01       	movw	r22, r24
    1a86:	cd 01       	movw	r24, r26
    1a88:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a8c:	dc 01       	movw	r26, r24
    1a8e:	cb 01       	movw	r24, r22
    1a90:	98 ab       	std	Y+48, r25	; 0x30
    1a92:	8f a7       	std	Y+47, r24	; 0x2f
    1a94:	0f c0       	rjmp	.+30     	; 0x1ab4 <DOWN+0x638>
    1a96:	88 ec       	ldi	r24, 0xC8	; 200
    1a98:	90 e0       	ldi	r25, 0x00	; 0
    1a9a:	9e a7       	std	Y+46, r25	; 0x2e
    1a9c:	8d a7       	std	Y+45, r24	; 0x2d
    1a9e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1aa0:	9e a5       	ldd	r25, Y+46	; 0x2e
    1aa2:	01 97       	sbiw	r24, 0x01	; 1
    1aa4:	f1 f7       	brne	.-4      	; 0x1aa2 <DOWN+0x626>
    1aa6:	9e a7       	std	Y+46, r25	; 0x2e
    1aa8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1aaa:	8f a5       	ldd	r24, Y+47	; 0x2f
    1aac:	98 a9       	ldd	r25, Y+48	; 0x30
    1aae:	01 97       	sbiw	r24, 0x01	; 1
    1ab0:	98 ab       	std	Y+48, r25	; 0x30
    1ab2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ab4:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ab6:	98 a9       	ldd	r25, Y+48	; 0x30
    1ab8:	00 97       	sbiw	r24, 0x00	; 0
    1aba:	69 f7       	brne	.-38     	; 0x1a96 <DOWN+0x61a>
    1abc:	14 c0       	rjmp	.+40     	; 0x1ae6 <DOWN+0x66a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1abe:	69 a9       	ldd	r22, Y+49	; 0x31
    1ac0:	7a a9       	ldd	r23, Y+50	; 0x32
    1ac2:	8b a9       	ldd	r24, Y+51	; 0x33
    1ac4:	9c a9       	ldd	r25, Y+52	; 0x34
    1ac6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1aca:	dc 01       	movw	r26, r24
    1acc:	cb 01       	movw	r24, r22
    1ace:	98 ab       	std	Y+48, r25	; 0x30
    1ad0:	8f a7       	std	Y+47, r24	; 0x2f
    1ad2:	8f a5       	ldd	r24, Y+47	; 0x2f
    1ad4:	98 a9       	ldd	r25, Y+48	; 0x30
    1ad6:	9c a7       	std	Y+44, r25	; 0x2c
    1ad8:	8b a7       	std	Y+43, r24	; 0x2b
    1ada:	8b a5       	ldd	r24, Y+43	; 0x2b
    1adc:	9c a5       	ldd	r25, Y+44	; 0x2c
    1ade:	01 97       	sbiw	r24, 0x01	; 1
    1ae0:	f1 f7       	brne	.-4      	; 0x1ade <DOWN+0x662>
    1ae2:	9c a7       	std	Y+44, r25	; 0x2c
    1ae4:	8b a7       	std	Y+43, r24	; 0x2b
			_delay_ms(20);
			PORTB=0xFB;
    1ae6:	e8 e3       	ldi	r30, 0x38	; 56
    1ae8:	f0 e0       	ldi	r31, 0x00	; 0
    1aea:	8b ef       	ldi	r24, 0xFB	; 251
    1aec:	80 83       	st	Z, r24
    1aee:	80 e0       	ldi	r24, 0x00	; 0
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	a0 ea       	ldi	r26, 0xA0	; 160
    1af4:	b1 e4       	ldi	r27, 0x41	; 65
    1af6:	8f a3       	std	Y+39, r24	; 0x27
    1af8:	98 a7       	std	Y+40, r25	; 0x28
    1afa:	a9 a7       	std	Y+41, r26	; 0x29
    1afc:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1afe:	6f a1       	ldd	r22, Y+39	; 0x27
    1b00:	78 a5       	ldd	r23, Y+40	; 0x28
    1b02:	89 a5       	ldd	r24, Y+41	; 0x29
    1b04:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b06:	20 e0       	ldi	r18, 0x00	; 0
    1b08:	30 e0       	ldi	r19, 0x00	; 0
    1b0a:	4a ef       	ldi	r20, 0xFA	; 250
    1b0c:	54 e4       	ldi	r21, 0x44	; 68
    1b0e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b12:	dc 01       	movw	r26, r24
    1b14:	cb 01       	movw	r24, r22
    1b16:	8b a3       	std	Y+35, r24	; 0x23
    1b18:	9c a3       	std	Y+36, r25	; 0x24
    1b1a:	ad a3       	std	Y+37, r26	; 0x25
    1b1c:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    1b1e:	6b a1       	ldd	r22, Y+35	; 0x23
    1b20:	7c a1       	ldd	r23, Y+36	; 0x24
    1b22:	8d a1       	ldd	r24, Y+37	; 0x25
    1b24:	9e a1       	ldd	r25, Y+38	; 0x26
    1b26:	20 e0       	ldi	r18, 0x00	; 0
    1b28:	30 e0       	ldi	r19, 0x00	; 0
    1b2a:	40 e8       	ldi	r20, 0x80	; 128
    1b2c:	5f e3       	ldi	r21, 0x3F	; 63
    1b2e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1b32:	88 23       	and	r24, r24
    1b34:	2c f4       	brge	.+10     	; 0x1b40 <DOWN+0x6c4>
		__ticks = 1;
    1b36:	81 e0       	ldi	r24, 0x01	; 1
    1b38:	90 e0       	ldi	r25, 0x00	; 0
    1b3a:	9a a3       	std	Y+34, r25	; 0x22
    1b3c:	89 a3       	std	Y+33, r24	; 0x21
    1b3e:	3f c0       	rjmp	.+126    	; 0x1bbe <DOWN+0x742>
	else if (__tmp > 65535)
    1b40:	6b a1       	ldd	r22, Y+35	; 0x23
    1b42:	7c a1       	ldd	r23, Y+36	; 0x24
    1b44:	8d a1       	ldd	r24, Y+37	; 0x25
    1b46:	9e a1       	ldd	r25, Y+38	; 0x26
    1b48:	20 e0       	ldi	r18, 0x00	; 0
    1b4a:	3f ef       	ldi	r19, 0xFF	; 255
    1b4c:	4f e7       	ldi	r20, 0x7F	; 127
    1b4e:	57 e4       	ldi	r21, 0x47	; 71
    1b50:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b54:	18 16       	cp	r1, r24
    1b56:	4c f5       	brge	.+82     	; 0x1baa <DOWN+0x72e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b58:	6f a1       	ldd	r22, Y+39	; 0x27
    1b5a:	78 a5       	ldd	r23, Y+40	; 0x28
    1b5c:	89 a5       	ldd	r24, Y+41	; 0x29
    1b5e:	9a a5       	ldd	r25, Y+42	; 0x2a
    1b60:	20 e0       	ldi	r18, 0x00	; 0
    1b62:	30 e0       	ldi	r19, 0x00	; 0
    1b64:	40 e2       	ldi	r20, 0x20	; 32
    1b66:	51 e4       	ldi	r21, 0x41	; 65
    1b68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b6c:	dc 01       	movw	r26, r24
    1b6e:	cb 01       	movw	r24, r22
    1b70:	bc 01       	movw	r22, r24
    1b72:	cd 01       	movw	r24, r26
    1b74:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b78:	dc 01       	movw	r26, r24
    1b7a:	cb 01       	movw	r24, r22
    1b7c:	9a a3       	std	Y+34, r25	; 0x22
    1b7e:	89 a3       	std	Y+33, r24	; 0x21
    1b80:	0f c0       	rjmp	.+30     	; 0x1ba0 <DOWN+0x724>
    1b82:	88 ec       	ldi	r24, 0xC8	; 200
    1b84:	90 e0       	ldi	r25, 0x00	; 0
    1b86:	98 a3       	std	Y+32, r25	; 0x20
    1b88:	8f 8f       	std	Y+31, r24	; 0x1f
    1b8a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b8c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b8e:	01 97       	sbiw	r24, 0x01	; 1
    1b90:	f1 f7       	brne	.-4      	; 0x1b8e <DOWN+0x712>
    1b92:	98 a3       	std	Y+32, r25	; 0x20
    1b94:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b96:	89 a1       	ldd	r24, Y+33	; 0x21
    1b98:	9a a1       	ldd	r25, Y+34	; 0x22
    1b9a:	01 97       	sbiw	r24, 0x01	; 1
    1b9c:	9a a3       	std	Y+34, r25	; 0x22
    1b9e:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ba0:	89 a1       	ldd	r24, Y+33	; 0x21
    1ba2:	9a a1       	ldd	r25, Y+34	; 0x22
    1ba4:	00 97       	sbiw	r24, 0x00	; 0
    1ba6:	69 f7       	brne	.-38     	; 0x1b82 <DOWN+0x706>
    1ba8:	14 c0       	rjmp	.+40     	; 0x1bd2 <DOWN+0x756>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1baa:	6b a1       	ldd	r22, Y+35	; 0x23
    1bac:	7c a1       	ldd	r23, Y+36	; 0x24
    1bae:	8d a1       	ldd	r24, Y+37	; 0x25
    1bb0:	9e a1       	ldd	r25, Y+38	; 0x26
    1bb2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bb6:	dc 01       	movw	r26, r24
    1bb8:	cb 01       	movw	r24, r22
    1bba:	9a a3       	std	Y+34, r25	; 0x22
    1bbc:	89 a3       	std	Y+33, r24	; 0x21
    1bbe:	89 a1       	ldd	r24, Y+33	; 0x21
    1bc0:	9a a1       	ldd	r25, Y+34	; 0x22
    1bc2:	9e 8f       	std	Y+30, r25	; 0x1e
    1bc4:	8d 8f       	std	Y+29, r24	; 0x1d
    1bc6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    1bc8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    1bca:	01 97       	sbiw	r24, 0x01	; 1
    1bcc:	f1 f7       	brne	.-4      	; 0x1bca <DOWN+0x74e>
    1bce:	9e 8f       	std	Y+30, r25	; 0x1e
    1bd0:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(20);
			PORTB=0xFD;
    1bd2:	e8 e3       	ldi	r30, 0x38	; 56
    1bd4:	f0 e0       	ldi	r31, 0x00	; 0
    1bd6:	8d ef       	ldi	r24, 0xFD	; 253
    1bd8:	80 83       	st	Z, r24
    1bda:	80 e0       	ldi	r24, 0x00	; 0
    1bdc:	90 e0       	ldi	r25, 0x00	; 0
    1bde:	a0 ea       	ldi	r26, 0xA0	; 160
    1be0:	b1 e4       	ldi	r27, 0x41	; 65
    1be2:	89 8f       	std	Y+25, r24	; 0x19
    1be4:	9a 8f       	std	Y+26, r25	; 0x1a
    1be6:	ab 8f       	std	Y+27, r26	; 0x1b
    1be8:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1bea:	69 8d       	ldd	r22, Y+25	; 0x19
    1bec:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1bee:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1bf0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1bf2:	20 e0       	ldi	r18, 0x00	; 0
    1bf4:	30 e0       	ldi	r19, 0x00	; 0
    1bf6:	4a ef       	ldi	r20, 0xFA	; 250
    1bf8:	54 e4       	ldi	r21, 0x44	; 68
    1bfa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1bfe:	dc 01       	movw	r26, r24
    1c00:	cb 01       	movw	r24, r22
    1c02:	8d 8b       	std	Y+21, r24	; 0x15
    1c04:	9e 8b       	std	Y+22, r25	; 0x16
    1c06:	af 8b       	std	Y+23, r26	; 0x17
    1c08:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    1c0a:	6d 89       	ldd	r22, Y+21	; 0x15
    1c0c:	7e 89       	ldd	r23, Y+22	; 0x16
    1c0e:	8f 89       	ldd	r24, Y+23	; 0x17
    1c10:	98 8d       	ldd	r25, Y+24	; 0x18
    1c12:	20 e0       	ldi	r18, 0x00	; 0
    1c14:	30 e0       	ldi	r19, 0x00	; 0
    1c16:	40 e8       	ldi	r20, 0x80	; 128
    1c18:	5f e3       	ldi	r21, 0x3F	; 63
    1c1a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c1e:	88 23       	and	r24, r24
    1c20:	2c f4       	brge	.+10     	; 0x1c2c <DOWN+0x7b0>
		__ticks = 1;
    1c22:	81 e0       	ldi	r24, 0x01	; 1
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	9c 8b       	std	Y+20, r25	; 0x14
    1c28:	8b 8b       	std	Y+19, r24	; 0x13
    1c2a:	3f c0       	rjmp	.+126    	; 0x1caa <DOWN+0x82e>
	else if (__tmp > 65535)
    1c2c:	6d 89       	ldd	r22, Y+21	; 0x15
    1c2e:	7e 89       	ldd	r23, Y+22	; 0x16
    1c30:	8f 89       	ldd	r24, Y+23	; 0x17
    1c32:	98 8d       	ldd	r25, Y+24	; 0x18
    1c34:	20 e0       	ldi	r18, 0x00	; 0
    1c36:	3f ef       	ldi	r19, 0xFF	; 255
    1c38:	4f e7       	ldi	r20, 0x7F	; 127
    1c3a:	57 e4       	ldi	r21, 0x47	; 71
    1c3c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c40:	18 16       	cp	r1, r24
    1c42:	4c f5       	brge	.+82     	; 0x1c96 <DOWN+0x81a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1c44:	69 8d       	ldd	r22, Y+25	; 0x19
    1c46:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1c48:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1c4a:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1c4c:	20 e0       	ldi	r18, 0x00	; 0
    1c4e:	30 e0       	ldi	r19, 0x00	; 0
    1c50:	40 e2       	ldi	r20, 0x20	; 32
    1c52:	51 e4       	ldi	r21, 0x41	; 65
    1c54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c58:	dc 01       	movw	r26, r24
    1c5a:	cb 01       	movw	r24, r22
    1c5c:	bc 01       	movw	r22, r24
    1c5e:	cd 01       	movw	r24, r26
    1c60:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1c64:	dc 01       	movw	r26, r24
    1c66:	cb 01       	movw	r24, r22
    1c68:	9c 8b       	std	Y+20, r25	; 0x14
    1c6a:	8b 8b       	std	Y+19, r24	; 0x13
    1c6c:	0f c0       	rjmp	.+30     	; 0x1c8c <DOWN+0x810>
    1c6e:	88 ec       	ldi	r24, 0xC8	; 200
    1c70:	90 e0       	ldi	r25, 0x00	; 0
    1c72:	9a 8b       	std	Y+18, r25	; 0x12
    1c74:	89 8b       	std	Y+17, r24	; 0x11
    1c76:	89 89       	ldd	r24, Y+17	; 0x11
    1c78:	9a 89       	ldd	r25, Y+18	; 0x12
    1c7a:	01 97       	sbiw	r24, 0x01	; 1
    1c7c:	f1 f7       	brne	.-4      	; 0x1c7a <DOWN+0x7fe>
    1c7e:	9a 8b       	std	Y+18, r25	; 0x12
    1c80:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1c82:	8b 89       	ldd	r24, Y+19	; 0x13
    1c84:	9c 89       	ldd	r25, Y+20	; 0x14
    1c86:	01 97       	sbiw	r24, 0x01	; 1
    1c88:	9c 8b       	std	Y+20, r25	; 0x14
    1c8a:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1c8c:	8b 89       	ldd	r24, Y+19	; 0x13
    1c8e:	9c 89       	ldd	r25, Y+20	; 0x14
    1c90:	00 97       	sbiw	r24, 0x00	; 0
    1c92:	69 f7       	brne	.-38     	; 0x1c6e <DOWN+0x7f2>
    1c94:	14 c0       	rjmp	.+40     	; 0x1cbe <DOWN+0x842>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1c96:	6d 89       	ldd	r22, Y+21	; 0x15
    1c98:	7e 89       	ldd	r23, Y+22	; 0x16
    1c9a:	8f 89       	ldd	r24, Y+23	; 0x17
    1c9c:	98 8d       	ldd	r25, Y+24	; 0x18
    1c9e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ca2:	dc 01       	movw	r26, r24
    1ca4:	cb 01       	movw	r24, r22
    1ca6:	9c 8b       	std	Y+20, r25	; 0x14
    1ca8:	8b 8b       	std	Y+19, r24	; 0x13
    1caa:	8b 89       	ldd	r24, Y+19	; 0x13
    1cac:	9c 89       	ldd	r25, Y+20	; 0x14
    1cae:	98 8b       	std	Y+16, r25	; 0x10
    1cb0:	8f 87       	std	Y+15, r24	; 0x0f
    1cb2:	8f 85       	ldd	r24, Y+15	; 0x0f
    1cb4:	98 89       	ldd	r25, Y+16	; 0x10
    1cb6:	01 97       	sbiw	r24, 0x01	; 1
    1cb8:	f1 f7       	brne	.-4      	; 0x1cb6 <DOWN+0x83a>
    1cba:	98 8b       	std	Y+16, r25	; 0x10
    1cbc:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(20);
			PORTB=0xFE;
    1cbe:	e8 e3       	ldi	r30, 0x38	; 56
    1cc0:	f0 e0       	ldi	r31, 0x00	; 0
    1cc2:	8e ef       	ldi	r24, 0xFE	; 254
    1cc4:	80 83       	st	Z, r24
    1cc6:	80 e0       	ldi	r24, 0x00	; 0
    1cc8:	90 e0       	ldi	r25, 0x00	; 0
    1cca:	a0 ea       	ldi	r26, 0xA0	; 160
    1ccc:	b1 e4       	ldi	r27, 0x41	; 65
    1cce:	8b 87       	std	Y+11, r24	; 0x0b
    1cd0:	9c 87       	std	Y+12, r25	; 0x0c
    1cd2:	ad 87       	std	Y+13, r26	; 0x0d
    1cd4:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cd6:	6b 85       	ldd	r22, Y+11	; 0x0b
    1cd8:	7c 85       	ldd	r23, Y+12	; 0x0c
    1cda:	8d 85       	ldd	r24, Y+13	; 0x0d
    1cdc:	9e 85       	ldd	r25, Y+14	; 0x0e
    1cde:	20 e0       	ldi	r18, 0x00	; 0
    1ce0:	30 e0       	ldi	r19, 0x00	; 0
    1ce2:	4a ef       	ldi	r20, 0xFA	; 250
    1ce4:	54 e4       	ldi	r21, 0x44	; 68
    1ce6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cea:	dc 01       	movw	r26, r24
    1cec:	cb 01       	movw	r24, r22
    1cee:	8f 83       	std	Y+7, r24	; 0x07
    1cf0:	98 87       	std	Y+8, r25	; 0x08
    1cf2:	a9 87       	std	Y+9, r26	; 0x09
    1cf4:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    1cf6:	6f 81       	ldd	r22, Y+7	; 0x07
    1cf8:	78 85       	ldd	r23, Y+8	; 0x08
    1cfa:	89 85       	ldd	r24, Y+9	; 0x09
    1cfc:	9a 85       	ldd	r25, Y+10	; 0x0a
    1cfe:	20 e0       	ldi	r18, 0x00	; 0
    1d00:	30 e0       	ldi	r19, 0x00	; 0
    1d02:	40 e8       	ldi	r20, 0x80	; 128
    1d04:	5f e3       	ldi	r21, 0x3F	; 63
    1d06:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d0a:	88 23       	and	r24, r24
    1d0c:	2c f4       	brge	.+10     	; 0x1d18 <DOWN+0x89c>
		__ticks = 1;
    1d0e:	81 e0       	ldi	r24, 0x01	; 1
    1d10:	90 e0       	ldi	r25, 0x00	; 0
    1d12:	9e 83       	std	Y+6, r25	; 0x06
    1d14:	8d 83       	std	Y+5, r24	; 0x05
    1d16:	3f c0       	rjmp	.+126    	; 0x1d96 <DOWN+0x91a>
	else if (__tmp > 65535)
    1d18:	6f 81       	ldd	r22, Y+7	; 0x07
    1d1a:	78 85       	ldd	r23, Y+8	; 0x08
    1d1c:	89 85       	ldd	r24, Y+9	; 0x09
    1d1e:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d20:	20 e0       	ldi	r18, 0x00	; 0
    1d22:	3f ef       	ldi	r19, 0xFF	; 255
    1d24:	4f e7       	ldi	r20, 0x7F	; 127
    1d26:	57 e4       	ldi	r21, 0x47	; 71
    1d28:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d2c:	18 16       	cp	r1, r24
    1d2e:	4c f5       	brge	.+82     	; 0x1d82 <DOWN+0x906>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d30:	6b 85       	ldd	r22, Y+11	; 0x0b
    1d32:	7c 85       	ldd	r23, Y+12	; 0x0c
    1d34:	8d 85       	ldd	r24, Y+13	; 0x0d
    1d36:	9e 85       	ldd	r25, Y+14	; 0x0e
    1d38:	20 e0       	ldi	r18, 0x00	; 0
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	40 e2       	ldi	r20, 0x20	; 32
    1d3e:	51 e4       	ldi	r21, 0x41	; 65
    1d40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d44:	dc 01       	movw	r26, r24
    1d46:	cb 01       	movw	r24, r22
    1d48:	bc 01       	movw	r22, r24
    1d4a:	cd 01       	movw	r24, r26
    1d4c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d50:	dc 01       	movw	r26, r24
    1d52:	cb 01       	movw	r24, r22
    1d54:	9e 83       	std	Y+6, r25	; 0x06
    1d56:	8d 83       	std	Y+5, r24	; 0x05
    1d58:	0f c0       	rjmp	.+30     	; 0x1d78 <DOWN+0x8fc>
    1d5a:	88 ec       	ldi	r24, 0xC8	; 200
    1d5c:	90 e0       	ldi	r25, 0x00	; 0
    1d5e:	9c 83       	std	Y+4, r25	; 0x04
    1d60:	8b 83       	std	Y+3, r24	; 0x03
    1d62:	8b 81       	ldd	r24, Y+3	; 0x03
    1d64:	9c 81       	ldd	r25, Y+4	; 0x04
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	f1 f7       	brne	.-4      	; 0x1d66 <DOWN+0x8ea>
    1d6a:	9c 83       	std	Y+4, r25	; 0x04
    1d6c:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d6e:	8d 81       	ldd	r24, Y+5	; 0x05
    1d70:	9e 81       	ldd	r25, Y+6	; 0x06
    1d72:	01 97       	sbiw	r24, 0x01	; 1
    1d74:	9e 83       	std	Y+6, r25	; 0x06
    1d76:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d78:	8d 81       	ldd	r24, Y+5	; 0x05
    1d7a:	9e 81       	ldd	r25, Y+6	; 0x06
    1d7c:	00 97       	sbiw	r24, 0x00	; 0
    1d7e:	69 f7       	brne	.-38     	; 0x1d5a <DOWN+0x8de>
    1d80:	14 c0       	rjmp	.+40     	; 0x1daa <DOWN+0x92e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d82:	6f 81       	ldd	r22, Y+7	; 0x07
    1d84:	78 85       	ldd	r23, Y+8	; 0x08
    1d86:	89 85       	ldd	r24, Y+9	; 0x09
    1d88:	9a 85       	ldd	r25, Y+10	; 0x0a
    1d8a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d8e:	dc 01       	movw	r26, r24
    1d90:	cb 01       	movw	r24, r22
    1d92:	9e 83       	std	Y+6, r25	; 0x06
    1d94:	8d 83       	std	Y+5, r24	; 0x05
    1d96:	8d 81       	ldd	r24, Y+5	; 0x05
    1d98:	9e 81       	ldd	r25, Y+6	; 0x06
    1d9a:	9a 83       	std	Y+2, r25	; 0x02
    1d9c:	89 83       	std	Y+1, r24	; 0x01
    1d9e:	89 81       	ldd	r24, Y+1	; 0x01
    1da0:	9a 81       	ldd	r25, Y+2	; 0x02
    1da2:	01 97       	sbiw	r24, 0x01	; 1
    1da4:	f1 f7       	brne	.-4      	; 0x1da2 <DOWN+0x926>
    1da6:	9a 83       	std	Y+2, r25	; 0x02
    1da8:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(20);

}
    1daa:	c0 59       	subi	r28, 0x90	; 144
    1dac:	df 4f       	sbci	r29, 0xFF	; 255
    1dae:	0f b6       	in	r0, 0x3f	; 63
    1db0:	f8 94       	cli
    1db2:	de bf       	out	0x3e, r29	; 62
    1db4:	0f be       	out	0x3f, r0	; 63
    1db6:	cd bf       	out	0x3d, r28	; 61
    1db8:	cf 91       	pop	r28
    1dba:	df 91       	pop	r29
    1dbc:	1f 91       	pop	r17
    1dbe:	0f 91       	pop	r16
    1dc0:	08 95       	ret

00001dc2 <Right>:
void Right()
{
    1dc2:	0f 93       	push	r16
    1dc4:	1f 93       	push	r17
    1dc6:	df 93       	push	r29
    1dc8:	cf 93       	push	r28
    1dca:	cd b7       	in	r28, 0x3d	; 61
    1dcc:	de b7       	in	r29, 0x3e	; 62
    1dce:	c0 57       	subi	r28, 0x70	; 112
    1dd0:	d0 40       	sbci	r29, 0x00	; 0
    1dd2:	0f b6       	in	r0, 0x3f	; 63
    1dd4:	f8 94       	cli
    1dd6:	de bf       	out	0x3e, r29	; 62
    1dd8:	0f be       	out	0x3f, r0	; 63
    1dda:	cd bf       	out	0x3d, r28	; 61
	PORTB=0x00;
    1ddc:	e8 e3       	ldi	r30, 0x38	; 56
    1dde:	f0 e0       	ldi	r31, 0x00	; 0
    1de0:	10 82       	st	Z, r1
	PORTA=0x80;
    1de2:	eb e3       	ldi	r30, 0x3B	; 59
    1de4:	f0 e0       	ldi	r31, 0x00	; 0
    1de6:	80 e8       	ldi	r24, 0x80	; 128
    1de8:	80 83       	st	Z, r24
    1dea:	fe 01       	movw	r30, r28
    1dec:	e3 59       	subi	r30, 0x93	; 147
    1dee:	ff 4f       	sbci	r31, 0xFF	; 255
    1df0:	80 e0       	ldi	r24, 0x00	; 0
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	a0 ea       	ldi	r26, 0xA0	; 160
    1df6:	b1 e4       	ldi	r27, 0x41	; 65
    1df8:	80 83       	st	Z, r24
    1dfa:	91 83       	std	Z+1, r25	; 0x01
    1dfc:	a2 83       	std	Z+2, r26	; 0x02
    1dfe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e00:	8e 01       	movw	r16, r28
    1e02:	07 59       	subi	r16, 0x97	; 151
    1e04:	1f 4f       	sbci	r17, 0xFF	; 255
    1e06:	fe 01       	movw	r30, r28
    1e08:	e3 59       	subi	r30, 0x93	; 147
    1e0a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e0c:	60 81       	ld	r22, Z
    1e0e:	71 81       	ldd	r23, Z+1	; 0x01
    1e10:	82 81       	ldd	r24, Z+2	; 0x02
    1e12:	93 81       	ldd	r25, Z+3	; 0x03
    1e14:	20 e0       	ldi	r18, 0x00	; 0
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	4a ef       	ldi	r20, 0xFA	; 250
    1e1a:	54 e4       	ldi	r21, 0x44	; 68
    1e1c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e20:	dc 01       	movw	r26, r24
    1e22:	cb 01       	movw	r24, r22
    1e24:	f8 01       	movw	r30, r16
    1e26:	80 83       	st	Z, r24
    1e28:	91 83       	std	Z+1, r25	; 0x01
    1e2a:	a2 83       	std	Z+2, r26	; 0x02
    1e2c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1e2e:	fe 01       	movw	r30, r28
    1e30:	e7 59       	subi	r30, 0x97	; 151
    1e32:	ff 4f       	sbci	r31, 0xFF	; 255
    1e34:	60 81       	ld	r22, Z
    1e36:	71 81       	ldd	r23, Z+1	; 0x01
    1e38:	82 81       	ldd	r24, Z+2	; 0x02
    1e3a:	93 81       	ldd	r25, Z+3	; 0x03
    1e3c:	20 e0       	ldi	r18, 0x00	; 0
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	40 e8       	ldi	r20, 0x80	; 128
    1e42:	5f e3       	ldi	r21, 0x3F	; 63
    1e44:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e48:	88 23       	and	r24, r24
    1e4a:	44 f4       	brge	.+16     	; 0x1e5c <Right+0x9a>
		__ticks = 1;
    1e4c:	fe 01       	movw	r30, r28
    1e4e:	e9 59       	subi	r30, 0x99	; 153
    1e50:	ff 4f       	sbci	r31, 0xFF	; 255
    1e52:	81 e0       	ldi	r24, 0x01	; 1
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	91 83       	std	Z+1, r25	; 0x01
    1e58:	80 83       	st	Z, r24
    1e5a:	64 c0       	rjmp	.+200    	; 0x1f24 <Right+0x162>
	else if (__tmp > 65535)
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	e7 59       	subi	r30, 0x97	; 151
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	60 81       	ld	r22, Z
    1e64:	71 81       	ldd	r23, Z+1	; 0x01
    1e66:	82 81       	ldd	r24, Z+2	; 0x02
    1e68:	93 81       	ldd	r25, Z+3	; 0x03
    1e6a:	20 e0       	ldi	r18, 0x00	; 0
    1e6c:	3f ef       	ldi	r19, 0xFF	; 255
    1e6e:	4f e7       	ldi	r20, 0x7F	; 127
    1e70:	57 e4       	ldi	r21, 0x47	; 71
    1e72:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e76:	18 16       	cp	r1, r24
    1e78:	0c f0       	brlt	.+2      	; 0x1e7c <Right+0xba>
    1e7a:	43 c0       	rjmp	.+134    	; 0x1f02 <Right+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e7c:	fe 01       	movw	r30, r28
    1e7e:	e3 59       	subi	r30, 0x93	; 147
    1e80:	ff 4f       	sbci	r31, 0xFF	; 255
    1e82:	60 81       	ld	r22, Z
    1e84:	71 81       	ldd	r23, Z+1	; 0x01
    1e86:	82 81       	ldd	r24, Z+2	; 0x02
    1e88:	93 81       	ldd	r25, Z+3	; 0x03
    1e8a:	20 e0       	ldi	r18, 0x00	; 0
    1e8c:	30 e0       	ldi	r19, 0x00	; 0
    1e8e:	40 e2       	ldi	r20, 0x20	; 32
    1e90:	51 e4       	ldi	r21, 0x41	; 65
    1e92:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e96:	dc 01       	movw	r26, r24
    1e98:	cb 01       	movw	r24, r22
    1e9a:	8e 01       	movw	r16, r28
    1e9c:	09 59       	subi	r16, 0x99	; 153
    1e9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea0:	bc 01       	movw	r22, r24
    1ea2:	cd 01       	movw	r24, r26
    1ea4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ea8:	dc 01       	movw	r26, r24
    1eaa:	cb 01       	movw	r24, r22
    1eac:	f8 01       	movw	r30, r16
    1eae:	91 83       	std	Z+1, r25	; 0x01
    1eb0:	80 83       	st	Z, r24
    1eb2:	1f c0       	rjmp	.+62     	; 0x1ef2 <Right+0x130>
    1eb4:	fe 01       	movw	r30, r28
    1eb6:	eb 59       	subi	r30, 0x9B	; 155
    1eb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eba:	88 ec       	ldi	r24, 0xC8	; 200
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	91 83       	std	Z+1, r25	; 0x01
    1ec0:	80 83       	st	Z, r24
    1ec2:	fe 01       	movw	r30, r28
    1ec4:	eb 59       	subi	r30, 0x9B	; 155
    1ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ec8:	80 81       	ld	r24, Z
    1eca:	91 81       	ldd	r25, Z+1	; 0x01
    1ecc:	01 97       	sbiw	r24, 0x01	; 1
    1ece:	f1 f7       	brne	.-4      	; 0x1ecc <Right+0x10a>
    1ed0:	fe 01       	movw	r30, r28
    1ed2:	eb 59       	subi	r30, 0x9B	; 155
    1ed4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed6:	91 83       	std	Z+1, r25	; 0x01
    1ed8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1eda:	de 01       	movw	r26, r28
    1edc:	a9 59       	subi	r26, 0x99	; 153
    1ede:	bf 4f       	sbci	r27, 0xFF	; 255
    1ee0:	fe 01       	movw	r30, r28
    1ee2:	e9 59       	subi	r30, 0x99	; 153
    1ee4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ee6:	80 81       	ld	r24, Z
    1ee8:	91 81       	ldd	r25, Z+1	; 0x01
    1eea:	01 97       	sbiw	r24, 0x01	; 1
    1eec:	11 96       	adiw	r26, 0x01	; 1
    1eee:	9c 93       	st	X, r25
    1ef0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ef2:	fe 01       	movw	r30, r28
    1ef4:	e9 59       	subi	r30, 0x99	; 153
    1ef6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef8:	80 81       	ld	r24, Z
    1efa:	91 81       	ldd	r25, Z+1	; 0x01
    1efc:	00 97       	sbiw	r24, 0x00	; 0
    1efe:	d1 f6       	brne	.-76     	; 0x1eb4 <Right+0xf2>
    1f00:	27 c0       	rjmp	.+78     	; 0x1f50 <Right+0x18e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f02:	8e 01       	movw	r16, r28
    1f04:	09 59       	subi	r16, 0x99	; 153
    1f06:	1f 4f       	sbci	r17, 0xFF	; 255
    1f08:	fe 01       	movw	r30, r28
    1f0a:	e7 59       	subi	r30, 0x97	; 151
    1f0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f0e:	60 81       	ld	r22, Z
    1f10:	71 81       	ldd	r23, Z+1	; 0x01
    1f12:	82 81       	ldd	r24, Z+2	; 0x02
    1f14:	93 81       	ldd	r25, Z+3	; 0x03
    1f16:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f1a:	dc 01       	movw	r26, r24
    1f1c:	cb 01       	movw	r24, r22
    1f1e:	f8 01       	movw	r30, r16
    1f20:	91 83       	std	Z+1, r25	; 0x01
    1f22:	80 83       	st	Z, r24
    1f24:	de 01       	movw	r26, r28
    1f26:	ad 59       	subi	r26, 0x9D	; 157
    1f28:	bf 4f       	sbci	r27, 0xFF	; 255
    1f2a:	fe 01       	movw	r30, r28
    1f2c:	e9 59       	subi	r30, 0x99	; 153
    1f2e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f30:	80 81       	ld	r24, Z
    1f32:	91 81       	ldd	r25, Z+1	; 0x01
    1f34:	8d 93       	st	X+, r24
    1f36:	9c 93       	st	X, r25
    1f38:	fe 01       	movw	r30, r28
    1f3a:	ed 59       	subi	r30, 0x9D	; 157
    1f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f3e:	80 81       	ld	r24, Z
    1f40:	91 81       	ldd	r25, Z+1	; 0x01
    1f42:	01 97       	sbiw	r24, 0x01	; 1
    1f44:	f1 f7       	brne	.-4      	; 0x1f42 <Right+0x180>
    1f46:	fe 01       	movw	r30, r28
    1f48:	ed 59       	subi	r30, 0x9D	; 157
    1f4a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f4c:	91 83       	std	Z+1, r25	; 0x01
    1f4e:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTA=0x40;
    1f50:	eb e3       	ldi	r30, 0x3B	; 59
    1f52:	f0 e0       	ldi	r31, 0x00	; 0
    1f54:	80 e4       	ldi	r24, 0x40	; 64
    1f56:	80 83       	st	Z, r24
    1f58:	fe 01       	movw	r30, r28
    1f5a:	e1 5a       	subi	r30, 0xA1	; 161
    1f5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1f5e:	80 e0       	ldi	r24, 0x00	; 0
    1f60:	90 e0       	ldi	r25, 0x00	; 0
    1f62:	a0 ea       	ldi	r26, 0xA0	; 160
    1f64:	b1 e4       	ldi	r27, 0x41	; 65
    1f66:	80 83       	st	Z, r24
    1f68:	91 83       	std	Z+1, r25	; 0x01
    1f6a:	a2 83       	std	Z+2, r26	; 0x02
    1f6c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f6e:	8e 01       	movw	r16, r28
    1f70:	05 5a       	subi	r16, 0xA5	; 165
    1f72:	1f 4f       	sbci	r17, 0xFF	; 255
    1f74:	fe 01       	movw	r30, r28
    1f76:	e1 5a       	subi	r30, 0xA1	; 161
    1f78:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7a:	60 81       	ld	r22, Z
    1f7c:	71 81       	ldd	r23, Z+1	; 0x01
    1f7e:	82 81       	ldd	r24, Z+2	; 0x02
    1f80:	93 81       	ldd	r25, Z+3	; 0x03
    1f82:	20 e0       	ldi	r18, 0x00	; 0
    1f84:	30 e0       	ldi	r19, 0x00	; 0
    1f86:	4a ef       	ldi	r20, 0xFA	; 250
    1f88:	54 e4       	ldi	r21, 0x44	; 68
    1f8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f8e:	dc 01       	movw	r26, r24
    1f90:	cb 01       	movw	r24, r22
    1f92:	f8 01       	movw	r30, r16
    1f94:	80 83       	st	Z, r24
    1f96:	91 83       	std	Z+1, r25	; 0x01
    1f98:	a2 83       	std	Z+2, r26	; 0x02
    1f9a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f9c:	fe 01       	movw	r30, r28
    1f9e:	e5 5a       	subi	r30, 0xA5	; 165
    1fa0:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa2:	60 81       	ld	r22, Z
    1fa4:	71 81       	ldd	r23, Z+1	; 0x01
    1fa6:	82 81       	ldd	r24, Z+2	; 0x02
    1fa8:	93 81       	ldd	r25, Z+3	; 0x03
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	30 e0       	ldi	r19, 0x00	; 0
    1fae:	40 e8       	ldi	r20, 0x80	; 128
    1fb0:	5f e3       	ldi	r21, 0x3F	; 63
    1fb2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1fb6:	88 23       	and	r24, r24
    1fb8:	44 f4       	brge	.+16     	; 0x1fca <Right+0x208>
		__ticks = 1;
    1fba:	fe 01       	movw	r30, r28
    1fbc:	e7 5a       	subi	r30, 0xA7	; 167
    1fbe:	ff 4f       	sbci	r31, 0xFF	; 255
    1fc0:	81 e0       	ldi	r24, 0x01	; 1
    1fc2:	90 e0       	ldi	r25, 0x00	; 0
    1fc4:	91 83       	std	Z+1, r25	; 0x01
    1fc6:	80 83       	st	Z, r24
    1fc8:	64 c0       	rjmp	.+200    	; 0x2092 <Right+0x2d0>
	else if (__tmp > 65535)
    1fca:	fe 01       	movw	r30, r28
    1fcc:	e5 5a       	subi	r30, 0xA5	; 165
    1fce:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd0:	60 81       	ld	r22, Z
    1fd2:	71 81       	ldd	r23, Z+1	; 0x01
    1fd4:	82 81       	ldd	r24, Z+2	; 0x02
    1fd6:	93 81       	ldd	r25, Z+3	; 0x03
    1fd8:	20 e0       	ldi	r18, 0x00	; 0
    1fda:	3f ef       	ldi	r19, 0xFF	; 255
    1fdc:	4f e7       	ldi	r20, 0x7F	; 127
    1fde:	57 e4       	ldi	r21, 0x47	; 71
    1fe0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fe4:	18 16       	cp	r1, r24
    1fe6:	0c f0       	brlt	.+2      	; 0x1fea <Right+0x228>
    1fe8:	43 c0       	rjmp	.+134    	; 0x2070 <Right+0x2ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fea:	fe 01       	movw	r30, r28
    1fec:	e1 5a       	subi	r30, 0xA1	; 161
    1fee:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff0:	60 81       	ld	r22, Z
    1ff2:	71 81       	ldd	r23, Z+1	; 0x01
    1ff4:	82 81       	ldd	r24, Z+2	; 0x02
    1ff6:	93 81       	ldd	r25, Z+3	; 0x03
    1ff8:	20 e0       	ldi	r18, 0x00	; 0
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	40 e2       	ldi	r20, 0x20	; 32
    1ffe:	51 e4       	ldi	r21, 0x41	; 65
    2000:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2004:	dc 01       	movw	r26, r24
    2006:	cb 01       	movw	r24, r22
    2008:	8e 01       	movw	r16, r28
    200a:	07 5a       	subi	r16, 0xA7	; 167
    200c:	1f 4f       	sbci	r17, 0xFF	; 255
    200e:	bc 01       	movw	r22, r24
    2010:	cd 01       	movw	r24, r26
    2012:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2016:	dc 01       	movw	r26, r24
    2018:	cb 01       	movw	r24, r22
    201a:	f8 01       	movw	r30, r16
    201c:	91 83       	std	Z+1, r25	; 0x01
    201e:	80 83       	st	Z, r24
    2020:	1f c0       	rjmp	.+62     	; 0x2060 <Right+0x29e>
    2022:	fe 01       	movw	r30, r28
    2024:	e9 5a       	subi	r30, 0xA9	; 169
    2026:	ff 4f       	sbci	r31, 0xFF	; 255
    2028:	88 ec       	ldi	r24, 0xC8	; 200
    202a:	90 e0       	ldi	r25, 0x00	; 0
    202c:	91 83       	std	Z+1, r25	; 0x01
    202e:	80 83       	st	Z, r24
    2030:	fe 01       	movw	r30, r28
    2032:	e9 5a       	subi	r30, 0xA9	; 169
    2034:	ff 4f       	sbci	r31, 0xFF	; 255
    2036:	80 81       	ld	r24, Z
    2038:	91 81       	ldd	r25, Z+1	; 0x01
    203a:	01 97       	sbiw	r24, 0x01	; 1
    203c:	f1 f7       	brne	.-4      	; 0x203a <Right+0x278>
    203e:	fe 01       	movw	r30, r28
    2040:	e9 5a       	subi	r30, 0xA9	; 169
    2042:	ff 4f       	sbci	r31, 0xFF	; 255
    2044:	91 83       	std	Z+1, r25	; 0x01
    2046:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2048:	de 01       	movw	r26, r28
    204a:	a7 5a       	subi	r26, 0xA7	; 167
    204c:	bf 4f       	sbci	r27, 0xFF	; 255
    204e:	fe 01       	movw	r30, r28
    2050:	e7 5a       	subi	r30, 0xA7	; 167
    2052:	ff 4f       	sbci	r31, 0xFF	; 255
    2054:	80 81       	ld	r24, Z
    2056:	91 81       	ldd	r25, Z+1	; 0x01
    2058:	01 97       	sbiw	r24, 0x01	; 1
    205a:	11 96       	adiw	r26, 0x01	; 1
    205c:	9c 93       	st	X, r25
    205e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2060:	fe 01       	movw	r30, r28
    2062:	e7 5a       	subi	r30, 0xA7	; 167
    2064:	ff 4f       	sbci	r31, 0xFF	; 255
    2066:	80 81       	ld	r24, Z
    2068:	91 81       	ldd	r25, Z+1	; 0x01
    206a:	00 97       	sbiw	r24, 0x00	; 0
    206c:	d1 f6       	brne	.-76     	; 0x2022 <Right+0x260>
    206e:	27 c0       	rjmp	.+78     	; 0x20be <Right+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2070:	8e 01       	movw	r16, r28
    2072:	07 5a       	subi	r16, 0xA7	; 167
    2074:	1f 4f       	sbci	r17, 0xFF	; 255
    2076:	fe 01       	movw	r30, r28
    2078:	e5 5a       	subi	r30, 0xA5	; 165
    207a:	ff 4f       	sbci	r31, 0xFF	; 255
    207c:	60 81       	ld	r22, Z
    207e:	71 81       	ldd	r23, Z+1	; 0x01
    2080:	82 81       	ldd	r24, Z+2	; 0x02
    2082:	93 81       	ldd	r25, Z+3	; 0x03
    2084:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2088:	dc 01       	movw	r26, r24
    208a:	cb 01       	movw	r24, r22
    208c:	f8 01       	movw	r30, r16
    208e:	91 83       	std	Z+1, r25	; 0x01
    2090:	80 83       	st	Z, r24
    2092:	de 01       	movw	r26, r28
    2094:	ab 5a       	subi	r26, 0xAB	; 171
    2096:	bf 4f       	sbci	r27, 0xFF	; 255
    2098:	fe 01       	movw	r30, r28
    209a:	e7 5a       	subi	r30, 0xA7	; 167
    209c:	ff 4f       	sbci	r31, 0xFF	; 255
    209e:	80 81       	ld	r24, Z
    20a0:	91 81       	ldd	r25, Z+1	; 0x01
    20a2:	8d 93       	st	X+, r24
    20a4:	9c 93       	st	X, r25
    20a6:	fe 01       	movw	r30, r28
    20a8:	eb 5a       	subi	r30, 0xAB	; 171
    20aa:	ff 4f       	sbci	r31, 0xFF	; 255
    20ac:	80 81       	ld	r24, Z
    20ae:	91 81       	ldd	r25, Z+1	; 0x01
    20b0:	01 97       	sbiw	r24, 0x01	; 1
    20b2:	f1 f7       	brne	.-4      	; 0x20b0 <Right+0x2ee>
    20b4:	fe 01       	movw	r30, r28
    20b6:	eb 5a       	subi	r30, 0xAB	; 171
    20b8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ba:	91 83       	std	Z+1, r25	; 0x01
    20bc:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTA=0x20;
    20be:	eb e3       	ldi	r30, 0x3B	; 59
    20c0:	f0 e0       	ldi	r31, 0x00	; 0
    20c2:	80 e2       	ldi	r24, 0x20	; 32
    20c4:	80 83       	st	Z, r24
    20c6:	fe 01       	movw	r30, r28
    20c8:	ef 5a       	subi	r30, 0xAF	; 175
    20ca:	ff 4f       	sbci	r31, 0xFF	; 255
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	a0 ea       	ldi	r26, 0xA0	; 160
    20d2:	b1 e4       	ldi	r27, 0x41	; 65
    20d4:	80 83       	st	Z, r24
    20d6:	91 83       	std	Z+1, r25	; 0x01
    20d8:	a2 83       	std	Z+2, r26	; 0x02
    20da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20dc:	8e 01       	movw	r16, r28
    20de:	03 5b       	subi	r16, 0xB3	; 179
    20e0:	1f 4f       	sbci	r17, 0xFF	; 255
    20e2:	fe 01       	movw	r30, r28
    20e4:	ef 5a       	subi	r30, 0xAF	; 175
    20e6:	ff 4f       	sbci	r31, 0xFF	; 255
    20e8:	60 81       	ld	r22, Z
    20ea:	71 81       	ldd	r23, Z+1	; 0x01
    20ec:	82 81       	ldd	r24, Z+2	; 0x02
    20ee:	93 81       	ldd	r25, Z+3	; 0x03
    20f0:	20 e0       	ldi	r18, 0x00	; 0
    20f2:	30 e0       	ldi	r19, 0x00	; 0
    20f4:	4a ef       	ldi	r20, 0xFA	; 250
    20f6:	54 e4       	ldi	r21, 0x44	; 68
    20f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20fc:	dc 01       	movw	r26, r24
    20fe:	cb 01       	movw	r24, r22
    2100:	f8 01       	movw	r30, r16
    2102:	80 83       	st	Z, r24
    2104:	91 83       	std	Z+1, r25	; 0x01
    2106:	a2 83       	std	Z+2, r26	; 0x02
    2108:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    210a:	fe 01       	movw	r30, r28
    210c:	e3 5b       	subi	r30, 0xB3	; 179
    210e:	ff 4f       	sbci	r31, 0xFF	; 255
    2110:	60 81       	ld	r22, Z
    2112:	71 81       	ldd	r23, Z+1	; 0x01
    2114:	82 81       	ldd	r24, Z+2	; 0x02
    2116:	93 81       	ldd	r25, Z+3	; 0x03
    2118:	20 e0       	ldi	r18, 0x00	; 0
    211a:	30 e0       	ldi	r19, 0x00	; 0
    211c:	40 e8       	ldi	r20, 0x80	; 128
    211e:	5f e3       	ldi	r21, 0x3F	; 63
    2120:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2124:	88 23       	and	r24, r24
    2126:	44 f4       	brge	.+16     	; 0x2138 <Right+0x376>
		__ticks = 1;
    2128:	fe 01       	movw	r30, r28
    212a:	e5 5b       	subi	r30, 0xB5	; 181
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	81 e0       	ldi	r24, 0x01	; 1
    2130:	90 e0       	ldi	r25, 0x00	; 0
    2132:	91 83       	std	Z+1, r25	; 0x01
    2134:	80 83       	st	Z, r24
    2136:	64 c0       	rjmp	.+200    	; 0x2200 <Right+0x43e>
	else if (__tmp > 65535)
    2138:	fe 01       	movw	r30, r28
    213a:	e3 5b       	subi	r30, 0xB3	; 179
    213c:	ff 4f       	sbci	r31, 0xFF	; 255
    213e:	60 81       	ld	r22, Z
    2140:	71 81       	ldd	r23, Z+1	; 0x01
    2142:	82 81       	ldd	r24, Z+2	; 0x02
    2144:	93 81       	ldd	r25, Z+3	; 0x03
    2146:	20 e0       	ldi	r18, 0x00	; 0
    2148:	3f ef       	ldi	r19, 0xFF	; 255
    214a:	4f e7       	ldi	r20, 0x7F	; 127
    214c:	57 e4       	ldi	r21, 0x47	; 71
    214e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2152:	18 16       	cp	r1, r24
    2154:	0c f0       	brlt	.+2      	; 0x2158 <Right+0x396>
    2156:	43 c0       	rjmp	.+134    	; 0x21de <Right+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2158:	fe 01       	movw	r30, r28
    215a:	ef 5a       	subi	r30, 0xAF	; 175
    215c:	ff 4f       	sbci	r31, 0xFF	; 255
    215e:	60 81       	ld	r22, Z
    2160:	71 81       	ldd	r23, Z+1	; 0x01
    2162:	82 81       	ldd	r24, Z+2	; 0x02
    2164:	93 81       	ldd	r25, Z+3	; 0x03
    2166:	20 e0       	ldi	r18, 0x00	; 0
    2168:	30 e0       	ldi	r19, 0x00	; 0
    216a:	40 e2       	ldi	r20, 0x20	; 32
    216c:	51 e4       	ldi	r21, 0x41	; 65
    216e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2172:	dc 01       	movw	r26, r24
    2174:	cb 01       	movw	r24, r22
    2176:	8e 01       	movw	r16, r28
    2178:	05 5b       	subi	r16, 0xB5	; 181
    217a:	1f 4f       	sbci	r17, 0xFF	; 255
    217c:	bc 01       	movw	r22, r24
    217e:	cd 01       	movw	r24, r26
    2180:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2184:	dc 01       	movw	r26, r24
    2186:	cb 01       	movw	r24, r22
    2188:	f8 01       	movw	r30, r16
    218a:	91 83       	std	Z+1, r25	; 0x01
    218c:	80 83       	st	Z, r24
    218e:	1f c0       	rjmp	.+62     	; 0x21ce <Right+0x40c>
    2190:	fe 01       	movw	r30, r28
    2192:	e7 5b       	subi	r30, 0xB7	; 183
    2194:	ff 4f       	sbci	r31, 0xFF	; 255
    2196:	88 ec       	ldi	r24, 0xC8	; 200
    2198:	90 e0       	ldi	r25, 0x00	; 0
    219a:	91 83       	std	Z+1, r25	; 0x01
    219c:	80 83       	st	Z, r24
    219e:	fe 01       	movw	r30, r28
    21a0:	e7 5b       	subi	r30, 0xB7	; 183
    21a2:	ff 4f       	sbci	r31, 0xFF	; 255
    21a4:	80 81       	ld	r24, Z
    21a6:	91 81       	ldd	r25, Z+1	; 0x01
    21a8:	01 97       	sbiw	r24, 0x01	; 1
    21aa:	f1 f7       	brne	.-4      	; 0x21a8 <Right+0x3e6>
    21ac:	fe 01       	movw	r30, r28
    21ae:	e7 5b       	subi	r30, 0xB7	; 183
    21b0:	ff 4f       	sbci	r31, 0xFF	; 255
    21b2:	91 83       	std	Z+1, r25	; 0x01
    21b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21b6:	de 01       	movw	r26, r28
    21b8:	a5 5b       	subi	r26, 0xB5	; 181
    21ba:	bf 4f       	sbci	r27, 0xFF	; 255
    21bc:	fe 01       	movw	r30, r28
    21be:	e5 5b       	subi	r30, 0xB5	; 181
    21c0:	ff 4f       	sbci	r31, 0xFF	; 255
    21c2:	80 81       	ld	r24, Z
    21c4:	91 81       	ldd	r25, Z+1	; 0x01
    21c6:	01 97       	sbiw	r24, 0x01	; 1
    21c8:	11 96       	adiw	r26, 0x01	; 1
    21ca:	9c 93       	st	X, r25
    21cc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    21ce:	fe 01       	movw	r30, r28
    21d0:	e5 5b       	subi	r30, 0xB5	; 181
    21d2:	ff 4f       	sbci	r31, 0xFF	; 255
    21d4:	80 81       	ld	r24, Z
    21d6:	91 81       	ldd	r25, Z+1	; 0x01
    21d8:	00 97       	sbiw	r24, 0x00	; 0
    21da:	d1 f6       	brne	.-76     	; 0x2190 <Right+0x3ce>
    21dc:	27 c0       	rjmp	.+78     	; 0x222c <Right+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21de:	8e 01       	movw	r16, r28
    21e0:	05 5b       	subi	r16, 0xB5	; 181
    21e2:	1f 4f       	sbci	r17, 0xFF	; 255
    21e4:	fe 01       	movw	r30, r28
    21e6:	e3 5b       	subi	r30, 0xB3	; 179
    21e8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ea:	60 81       	ld	r22, Z
    21ec:	71 81       	ldd	r23, Z+1	; 0x01
    21ee:	82 81       	ldd	r24, Z+2	; 0x02
    21f0:	93 81       	ldd	r25, Z+3	; 0x03
    21f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21f6:	dc 01       	movw	r26, r24
    21f8:	cb 01       	movw	r24, r22
    21fa:	f8 01       	movw	r30, r16
    21fc:	91 83       	std	Z+1, r25	; 0x01
    21fe:	80 83       	st	Z, r24
    2200:	de 01       	movw	r26, r28
    2202:	a9 5b       	subi	r26, 0xB9	; 185
    2204:	bf 4f       	sbci	r27, 0xFF	; 255
    2206:	fe 01       	movw	r30, r28
    2208:	e5 5b       	subi	r30, 0xB5	; 181
    220a:	ff 4f       	sbci	r31, 0xFF	; 255
    220c:	80 81       	ld	r24, Z
    220e:	91 81       	ldd	r25, Z+1	; 0x01
    2210:	8d 93       	st	X+, r24
    2212:	9c 93       	st	X, r25
    2214:	fe 01       	movw	r30, r28
    2216:	e9 5b       	subi	r30, 0xB9	; 185
    2218:	ff 4f       	sbci	r31, 0xFF	; 255
    221a:	80 81       	ld	r24, Z
    221c:	91 81       	ldd	r25, Z+1	; 0x01
    221e:	01 97       	sbiw	r24, 0x01	; 1
    2220:	f1 f7       	brne	.-4      	; 0x221e <Right+0x45c>
    2222:	fe 01       	movw	r30, r28
    2224:	e9 5b       	subi	r30, 0xB9	; 185
    2226:	ff 4f       	sbci	r31, 0xFF	; 255
    2228:	91 83       	std	Z+1, r25	; 0x01
    222a:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTA=0x10;
    222c:	eb e3       	ldi	r30, 0x3B	; 59
    222e:	f0 e0       	ldi	r31, 0x00	; 0
    2230:	80 e1       	ldi	r24, 0x10	; 16
    2232:	80 83       	st	Z, r24
    2234:	fe 01       	movw	r30, r28
    2236:	ed 5b       	subi	r30, 0xBD	; 189
    2238:	ff 4f       	sbci	r31, 0xFF	; 255
    223a:	80 e0       	ldi	r24, 0x00	; 0
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	a0 ea       	ldi	r26, 0xA0	; 160
    2240:	b1 e4       	ldi	r27, 0x41	; 65
    2242:	80 83       	st	Z, r24
    2244:	91 83       	std	Z+1, r25	; 0x01
    2246:	a2 83       	std	Z+2, r26	; 0x02
    2248:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    224a:	8e 01       	movw	r16, r28
    224c:	01 5c       	subi	r16, 0xC1	; 193
    224e:	1f 4f       	sbci	r17, 0xFF	; 255
    2250:	fe 01       	movw	r30, r28
    2252:	ed 5b       	subi	r30, 0xBD	; 189
    2254:	ff 4f       	sbci	r31, 0xFF	; 255
    2256:	60 81       	ld	r22, Z
    2258:	71 81       	ldd	r23, Z+1	; 0x01
    225a:	82 81       	ldd	r24, Z+2	; 0x02
    225c:	93 81       	ldd	r25, Z+3	; 0x03
    225e:	20 e0       	ldi	r18, 0x00	; 0
    2260:	30 e0       	ldi	r19, 0x00	; 0
    2262:	4a ef       	ldi	r20, 0xFA	; 250
    2264:	54 e4       	ldi	r21, 0x44	; 68
    2266:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    226a:	dc 01       	movw	r26, r24
    226c:	cb 01       	movw	r24, r22
    226e:	f8 01       	movw	r30, r16
    2270:	80 83       	st	Z, r24
    2272:	91 83       	std	Z+1, r25	; 0x01
    2274:	a2 83       	std	Z+2, r26	; 0x02
    2276:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2278:	fe 01       	movw	r30, r28
    227a:	ff 96       	adiw	r30, 0x3f	; 63
    227c:	60 81       	ld	r22, Z
    227e:	71 81       	ldd	r23, Z+1	; 0x01
    2280:	82 81       	ldd	r24, Z+2	; 0x02
    2282:	93 81       	ldd	r25, Z+3	; 0x03
    2284:	20 e0       	ldi	r18, 0x00	; 0
    2286:	30 e0       	ldi	r19, 0x00	; 0
    2288:	40 e8       	ldi	r20, 0x80	; 128
    228a:	5f e3       	ldi	r21, 0x3F	; 63
    228c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2290:	88 23       	and	r24, r24
    2292:	2c f4       	brge	.+10     	; 0x229e <Right+0x4dc>
		__ticks = 1;
    2294:	81 e0       	ldi	r24, 0x01	; 1
    2296:	90 e0       	ldi	r25, 0x00	; 0
    2298:	9e af       	std	Y+62, r25	; 0x3e
    229a:	8d af       	std	Y+61, r24	; 0x3d
    229c:	46 c0       	rjmp	.+140    	; 0x232a <Right+0x568>
	else if (__tmp > 65535)
    229e:	fe 01       	movw	r30, r28
    22a0:	ff 96       	adiw	r30, 0x3f	; 63
    22a2:	60 81       	ld	r22, Z
    22a4:	71 81       	ldd	r23, Z+1	; 0x01
    22a6:	82 81       	ldd	r24, Z+2	; 0x02
    22a8:	93 81       	ldd	r25, Z+3	; 0x03
    22aa:	20 e0       	ldi	r18, 0x00	; 0
    22ac:	3f ef       	ldi	r19, 0xFF	; 255
    22ae:	4f e7       	ldi	r20, 0x7F	; 127
    22b0:	57 e4       	ldi	r21, 0x47	; 71
    22b2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    22b6:	18 16       	cp	r1, r24
    22b8:	64 f5       	brge	.+88     	; 0x2312 <Right+0x550>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    22ba:	fe 01       	movw	r30, r28
    22bc:	ed 5b       	subi	r30, 0xBD	; 189
    22be:	ff 4f       	sbci	r31, 0xFF	; 255
    22c0:	60 81       	ld	r22, Z
    22c2:	71 81       	ldd	r23, Z+1	; 0x01
    22c4:	82 81       	ldd	r24, Z+2	; 0x02
    22c6:	93 81       	ldd	r25, Z+3	; 0x03
    22c8:	20 e0       	ldi	r18, 0x00	; 0
    22ca:	30 e0       	ldi	r19, 0x00	; 0
    22cc:	40 e2       	ldi	r20, 0x20	; 32
    22ce:	51 e4       	ldi	r21, 0x41	; 65
    22d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22d4:	dc 01       	movw	r26, r24
    22d6:	cb 01       	movw	r24, r22
    22d8:	bc 01       	movw	r22, r24
    22da:	cd 01       	movw	r24, r26
    22dc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22e0:	dc 01       	movw	r26, r24
    22e2:	cb 01       	movw	r24, r22
    22e4:	9e af       	std	Y+62, r25	; 0x3e
    22e6:	8d af       	std	Y+61, r24	; 0x3d
    22e8:	0f c0       	rjmp	.+30     	; 0x2308 <Right+0x546>
    22ea:	88 ec       	ldi	r24, 0xC8	; 200
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	9c af       	std	Y+60, r25	; 0x3c
    22f0:	8b af       	std	Y+59, r24	; 0x3b
    22f2:	8b ad       	ldd	r24, Y+59	; 0x3b
    22f4:	9c ad       	ldd	r25, Y+60	; 0x3c
    22f6:	01 97       	sbiw	r24, 0x01	; 1
    22f8:	f1 f7       	brne	.-4      	; 0x22f6 <Right+0x534>
    22fa:	9c af       	std	Y+60, r25	; 0x3c
    22fc:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22fe:	8d ad       	ldd	r24, Y+61	; 0x3d
    2300:	9e ad       	ldd	r25, Y+62	; 0x3e
    2302:	01 97       	sbiw	r24, 0x01	; 1
    2304:	9e af       	std	Y+62, r25	; 0x3e
    2306:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2308:	8d ad       	ldd	r24, Y+61	; 0x3d
    230a:	9e ad       	ldd	r25, Y+62	; 0x3e
    230c:	00 97       	sbiw	r24, 0x00	; 0
    230e:	69 f7       	brne	.-38     	; 0x22ea <Right+0x528>
    2310:	16 c0       	rjmp	.+44     	; 0x233e <Right+0x57c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2312:	fe 01       	movw	r30, r28
    2314:	ff 96       	adiw	r30, 0x3f	; 63
    2316:	60 81       	ld	r22, Z
    2318:	71 81       	ldd	r23, Z+1	; 0x01
    231a:	82 81       	ldd	r24, Z+2	; 0x02
    231c:	93 81       	ldd	r25, Z+3	; 0x03
    231e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2322:	dc 01       	movw	r26, r24
    2324:	cb 01       	movw	r24, r22
    2326:	9e af       	std	Y+62, r25	; 0x3e
    2328:	8d af       	std	Y+61, r24	; 0x3d
    232a:	8d ad       	ldd	r24, Y+61	; 0x3d
    232c:	9e ad       	ldd	r25, Y+62	; 0x3e
    232e:	9a af       	std	Y+58, r25	; 0x3a
    2330:	89 af       	std	Y+57, r24	; 0x39
    2332:	89 ad       	ldd	r24, Y+57	; 0x39
    2334:	9a ad       	ldd	r25, Y+58	; 0x3a
    2336:	01 97       	sbiw	r24, 0x01	; 1
    2338:	f1 f7       	brne	.-4      	; 0x2336 <Right+0x574>
    233a:	9a af       	std	Y+58, r25	; 0x3a
    233c:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(20);
	PORTA=0x08;
    233e:	eb e3       	ldi	r30, 0x3B	; 59
    2340:	f0 e0       	ldi	r31, 0x00	; 0
    2342:	88 e0       	ldi	r24, 0x08	; 8
    2344:	80 83       	st	Z, r24
    2346:	80 e0       	ldi	r24, 0x00	; 0
    2348:	90 e0       	ldi	r25, 0x00	; 0
    234a:	a0 ea       	ldi	r26, 0xA0	; 160
    234c:	b1 e4       	ldi	r27, 0x41	; 65
    234e:	8d ab       	std	Y+53, r24	; 0x35
    2350:	9e ab       	std	Y+54, r25	; 0x36
    2352:	af ab       	std	Y+55, r26	; 0x37
    2354:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2356:	6d a9       	ldd	r22, Y+53	; 0x35
    2358:	7e a9       	ldd	r23, Y+54	; 0x36
    235a:	8f a9       	ldd	r24, Y+55	; 0x37
    235c:	98 ad       	ldd	r25, Y+56	; 0x38
    235e:	20 e0       	ldi	r18, 0x00	; 0
    2360:	30 e0       	ldi	r19, 0x00	; 0
    2362:	4a ef       	ldi	r20, 0xFA	; 250
    2364:	54 e4       	ldi	r21, 0x44	; 68
    2366:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    236a:	dc 01       	movw	r26, r24
    236c:	cb 01       	movw	r24, r22
    236e:	89 ab       	std	Y+49, r24	; 0x31
    2370:	9a ab       	std	Y+50, r25	; 0x32
    2372:	ab ab       	std	Y+51, r26	; 0x33
    2374:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2376:	69 a9       	ldd	r22, Y+49	; 0x31
    2378:	7a a9       	ldd	r23, Y+50	; 0x32
    237a:	8b a9       	ldd	r24, Y+51	; 0x33
    237c:	9c a9       	ldd	r25, Y+52	; 0x34
    237e:	20 e0       	ldi	r18, 0x00	; 0
    2380:	30 e0       	ldi	r19, 0x00	; 0
    2382:	40 e8       	ldi	r20, 0x80	; 128
    2384:	5f e3       	ldi	r21, 0x3F	; 63
    2386:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    238a:	88 23       	and	r24, r24
    238c:	2c f4       	brge	.+10     	; 0x2398 <Right+0x5d6>
		__ticks = 1;
    238e:	81 e0       	ldi	r24, 0x01	; 1
    2390:	90 e0       	ldi	r25, 0x00	; 0
    2392:	98 ab       	std	Y+48, r25	; 0x30
    2394:	8f a7       	std	Y+47, r24	; 0x2f
    2396:	3f c0       	rjmp	.+126    	; 0x2416 <Right+0x654>
	else if (__tmp > 65535)
    2398:	69 a9       	ldd	r22, Y+49	; 0x31
    239a:	7a a9       	ldd	r23, Y+50	; 0x32
    239c:	8b a9       	ldd	r24, Y+51	; 0x33
    239e:	9c a9       	ldd	r25, Y+52	; 0x34
    23a0:	20 e0       	ldi	r18, 0x00	; 0
    23a2:	3f ef       	ldi	r19, 0xFF	; 255
    23a4:	4f e7       	ldi	r20, 0x7F	; 127
    23a6:	57 e4       	ldi	r21, 0x47	; 71
    23a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23ac:	18 16       	cp	r1, r24
    23ae:	4c f5       	brge	.+82     	; 0x2402 <Right+0x640>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    23b0:	6d a9       	ldd	r22, Y+53	; 0x35
    23b2:	7e a9       	ldd	r23, Y+54	; 0x36
    23b4:	8f a9       	ldd	r24, Y+55	; 0x37
    23b6:	98 ad       	ldd	r25, Y+56	; 0x38
    23b8:	20 e0       	ldi	r18, 0x00	; 0
    23ba:	30 e0       	ldi	r19, 0x00	; 0
    23bc:	40 e2       	ldi	r20, 0x20	; 32
    23be:	51 e4       	ldi	r21, 0x41	; 65
    23c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23c4:	dc 01       	movw	r26, r24
    23c6:	cb 01       	movw	r24, r22
    23c8:	bc 01       	movw	r22, r24
    23ca:	cd 01       	movw	r24, r26
    23cc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23d0:	dc 01       	movw	r26, r24
    23d2:	cb 01       	movw	r24, r22
    23d4:	98 ab       	std	Y+48, r25	; 0x30
    23d6:	8f a7       	std	Y+47, r24	; 0x2f
    23d8:	0f c0       	rjmp	.+30     	; 0x23f8 <Right+0x636>
    23da:	88 ec       	ldi	r24, 0xC8	; 200
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	9e a7       	std	Y+46, r25	; 0x2e
    23e0:	8d a7       	std	Y+45, r24	; 0x2d
    23e2:	8d a5       	ldd	r24, Y+45	; 0x2d
    23e4:	9e a5       	ldd	r25, Y+46	; 0x2e
    23e6:	01 97       	sbiw	r24, 0x01	; 1
    23e8:	f1 f7       	brne	.-4      	; 0x23e6 <Right+0x624>
    23ea:	9e a7       	std	Y+46, r25	; 0x2e
    23ec:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    23ee:	8f a5       	ldd	r24, Y+47	; 0x2f
    23f0:	98 a9       	ldd	r25, Y+48	; 0x30
    23f2:	01 97       	sbiw	r24, 0x01	; 1
    23f4:	98 ab       	std	Y+48, r25	; 0x30
    23f6:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    23f8:	8f a5       	ldd	r24, Y+47	; 0x2f
    23fa:	98 a9       	ldd	r25, Y+48	; 0x30
    23fc:	00 97       	sbiw	r24, 0x00	; 0
    23fe:	69 f7       	brne	.-38     	; 0x23da <Right+0x618>
    2400:	14 c0       	rjmp	.+40     	; 0x242a <Right+0x668>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2402:	69 a9       	ldd	r22, Y+49	; 0x31
    2404:	7a a9       	ldd	r23, Y+50	; 0x32
    2406:	8b a9       	ldd	r24, Y+51	; 0x33
    2408:	9c a9       	ldd	r25, Y+52	; 0x34
    240a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    240e:	dc 01       	movw	r26, r24
    2410:	cb 01       	movw	r24, r22
    2412:	98 ab       	std	Y+48, r25	; 0x30
    2414:	8f a7       	std	Y+47, r24	; 0x2f
    2416:	8f a5       	ldd	r24, Y+47	; 0x2f
    2418:	98 a9       	ldd	r25, Y+48	; 0x30
    241a:	9c a7       	std	Y+44, r25	; 0x2c
    241c:	8b a7       	std	Y+43, r24	; 0x2b
    241e:	8b a5       	ldd	r24, Y+43	; 0x2b
    2420:	9c a5       	ldd	r25, Y+44	; 0x2c
    2422:	01 97       	sbiw	r24, 0x01	; 1
    2424:	f1 f7       	brne	.-4      	; 0x2422 <Right+0x660>
    2426:	9c a7       	std	Y+44, r25	; 0x2c
    2428:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(20);
	PORTA=0x04;
    242a:	eb e3       	ldi	r30, 0x3B	; 59
    242c:	f0 e0       	ldi	r31, 0x00	; 0
    242e:	84 e0       	ldi	r24, 0x04	; 4
    2430:	80 83       	st	Z, r24
    2432:	80 e0       	ldi	r24, 0x00	; 0
    2434:	90 e0       	ldi	r25, 0x00	; 0
    2436:	a0 ea       	ldi	r26, 0xA0	; 160
    2438:	b1 e4       	ldi	r27, 0x41	; 65
    243a:	8f a3       	std	Y+39, r24	; 0x27
    243c:	98 a7       	std	Y+40, r25	; 0x28
    243e:	a9 a7       	std	Y+41, r26	; 0x29
    2440:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2442:	6f a1       	ldd	r22, Y+39	; 0x27
    2444:	78 a5       	ldd	r23, Y+40	; 0x28
    2446:	89 a5       	ldd	r24, Y+41	; 0x29
    2448:	9a a5       	ldd	r25, Y+42	; 0x2a
    244a:	20 e0       	ldi	r18, 0x00	; 0
    244c:	30 e0       	ldi	r19, 0x00	; 0
    244e:	4a ef       	ldi	r20, 0xFA	; 250
    2450:	54 e4       	ldi	r21, 0x44	; 68
    2452:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2456:	dc 01       	movw	r26, r24
    2458:	cb 01       	movw	r24, r22
    245a:	8b a3       	std	Y+35, r24	; 0x23
    245c:	9c a3       	std	Y+36, r25	; 0x24
    245e:	ad a3       	std	Y+37, r26	; 0x25
    2460:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2462:	6b a1       	ldd	r22, Y+35	; 0x23
    2464:	7c a1       	ldd	r23, Y+36	; 0x24
    2466:	8d a1       	ldd	r24, Y+37	; 0x25
    2468:	9e a1       	ldd	r25, Y+38	; 0x26
    246a:	20 e0       	ldi	r18, 0x00	; 0
    246c:	30 e0       	ldi	r19, 0x00	; 0
    246e:	40 e8       	ldi	r20, 0x80	; 128
    2470:	5f e3       	ldi	r21, 0x3F	; 63
    2472:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2476:	88 23       	and	r24, r24
    2478:	2c f4       	brge	.+10     	; 0x2484 <Right+0x6c2>
		__ticks = 1;
    247a:	81 e0       	ldi	r24, 0x01	; 1
    247c:	90 e0       	ldi	r25, 0x00	; 0
    247e:	9a a3       	std	Y+34, r25	; 0x22
    2480:	89 a3       	std	Y+33, r24	; 0x21
    2482:	3f c0       	rjmp	.+126    	; 0x2502 <Right+0x740>
	else if (__tmp > 65535)
    2484:	6b a1       	ldd	r22, Y+35	; 0x23
    2486:	7c a1       	ldd	r23, Y+36	; 0x24
    2488:	8d a1       	ldd	r24, Y+37	; 0x25
    248a:	9e a1       	ldd	r25, Y+38	; 0x26
    248c:	20 e0       	ldi	r18, 0x00	; 0
    248e:	3f ef       	ldi	r19, 0xFF	; 255
    2490:	4f e7       	ldi	r20, 0x7F	; 127
    2492:	57 e4       	ldi	r21, 0x47	; 71
    2494:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2498:	18 16       	cp	r1, r24
    249a:	4c f5       	brge	.+82     	; 0x24ee <Right+0x72c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    249c:	6f a1       	ldd	r22, Y+39	; 0x27
    249e:	78 a5       	ldd	r23, Y+40	; 0x28
    24a0:	89 a5       	ldd	r24, Y+41	; 0x29
    24a2:	9a a5       	ldd	r25, Y+42	; 0x2a
    24a4:	20 e0       	ldi	r18, 0x00	; 0
    24a6:	30 e0       	ldi	r19, 0x00	; 0
    24a8:	40 e2       	ldi	r20, 0x20	; 32
    24aa:	51 e4       	ldi	r21, 0x41	; 65
    24ac:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24b0:	dc 01       	movw	r26, r24
    24b2:	cb 01       	movw	r24, r22
    24b4:	bc 01       	movw	r22, r24
    24b6:	cd 01       	movw	r24, r26
    24b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24bc:	dc 01       	movw	r26, r24
    24be:	cb 01       	movw	r24, r22
    24c0:	9a a3       	std	Y+34, r25	; 0x22
    24c2:	89 a3       	std	Y+33, r24	; 0x21
    24c4:	0f c0       	rjmp	.+30     	; 0x24e4 <Right+0x722>
    24c6:	88 ec       	ldi	r24, 0xC8	; 200
    24c8:	90 e0       	ldi	r25, 0x00	; 0
    24ca:	98 a3       	std	Y+32, r25	; 0x20
    24cc:	8f 8f       	std	Y+31, r24	; 0x1f
    24ce:	8f 8d       	ldd	r24, Y+31	; 0x1f
    24d0:	98 a1       	ldd	r25, Y+32	; 0x20
    24d2:	01 97       	sbiw	r24, 0x01	; 1
    24d4:	f1 f7       	brne	.-4      	; 0x24d2 <Right+0x710>
    24d6:	98 a3       	std	Y+32, r25	; 0x20
    24d8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    24da:	89 a1       	ldd	r24, Y+33	; 0x21
    24dc:	9a a1       	ldd	r25, Y+34	; 0x22
    24de:	01 97       	sbiw	r24, 0x01	; 1
    24e0:	9a a3       	std	Y+34, r25	; 0x22
    24e2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    24e4:	89 a1       	ldd	r24, Y+33	; 0x21
    24e6:	9a a1       	ldd	r25, Y+34	; 0x22
    24e8:	00 97       	sbiw	r24, 0x00	; 0
    24ea:	69 f7       	brne	.-38     	; 0x24c6 <Right+0x704>
    24ec:	14 c0       	rjmp	.+40     	; 0x2516 <Right+0x754>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    24ee:	6b a1       	ldd	r22, Y+35	; 0x23
    24f0:	7c a1       	ldd	r23, Y+36	; 0x24
    24f2:	8d a1       	ldd	r24, Y+37	; 0x25
    24f4:	9e a1       	ldd	r25, Y+38	; 0x26
    24f6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24fa:	dc 01       	movw	r26, r24
    24fc:	cb 01       	movw	r24, r22
    24fe:	9a a3       	std	Y+34, r25	; 0x22
    2500:	89 a3       	std	Y+33, r24	; 0x21
    2502:	89 a1       	ldd	r24, Y+33	; 0x21
    2504:	9a a1       	ldd	r25, Y+34	; 0x22
    2506:	9e 8f       	std	Y+30, r25	; 0x1e
    2508:	8d 8f       	std	Y+29, r24	; 0x1d
    250a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    250c:	9e 8d       	ldd	r25, Y+30	; 0x1e
    250e:	01 97       	sbiw	r24, 0x01	; 1
    2510:	f1 f7       	brne	.-4      	; 0x250e <Right+0x74c>
    2512:	9e 8f       	std	Y+30, r25	; 0x1e
    2514:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(20);
	PORTA=0x02;
    2516:	eb e3       	ldi	r30, 0x3B	; 59
    2518:	f0 e0       	ldi	r31, 0x00	; 0
    251a:	82 e0       	ldi	r24, 0x02	; 2
    251c:	80 83       	st	Z, r24
    251e:	80 e0       	ldi	r24, 0x00	; 0
    2520:	90 e0       	ldi	r25, 0x00	; 0
    2522:	a0 ea       	ldi	r26, 0xA0	; 160
    2524:	b1 e4       	ldi	r27, 0x41	; 65
    2526:	89 8f       	std	Y+25, r24	; 0x19
    2528:	9a 8f       	std	Y+26, r25	; 0x1a
    252a:	ab 8f       	std	Y+27, r26	; 0x1b
    252c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    252e:	69 8d       	ldd	r22, Y+25	; 0x19
    2530:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2532:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2534:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2536:	20 e0       	ldi	r18, 0x00	; 0
    2538:	30 e0       	ldi	r19, 0x00	; 0
    253a:	4a ef       	ldi	r20, 0xFA	; 250
    253c:	54 e4       	ldi	r21, 0x44	; 68
    253e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2542:	dc 01       	movw	r26, r24
    2544:	cb 01       	movw	r24, r22
    2546:	8d 8b       	std	Y+21, r24	; 0x15
    2548:	9e 8b       	std	Y+22, r25	; 0x16
    254a:	af 8b       	std	Y+23, r26	; 0x17
    254c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    254e:	6d 89       	ldd	r22, Y+21	; 0x15
    2550:	7e 89       	ldd	r23, Y+22	; 0x16
    2552:	8f 89       	ldd	r24, Y+23	; 0x17
    2554:	98 8d       	ldd	r25, Y+24	; 0x18
    2556:	20 e0       	ldi	r18, 0x00	; 0
    2558:	30 e0       	ldi	r19, 0x00	; 0
    255a:	40 e8       	ldi	r20, 0x80	; 128
    255c:	5f e3       	ldi	r21, 0x3F	; 63
    255e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2562:	88 23       	and	r24, r24
    2564:	2c f4       	brge	.+10     	; 0x2570 <Right+0x7ae>
		__ticks = 1;
    2566:	81 e0       	ldi	r24, 0x01	; 1
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	9c 8b       	std	Y+20, r25	; 0x14
    256c:	8b 8b       	std	Y+19, r24	; 0x13
    256e:	3f c0       	rjmp	.+126    	; 0x25ee <Right+0x82c>
	else if (__tmp > 65535)
    2570:	6d 89       	ldd	r22, Y+21	; 0x15
    2572:	7e 89       	ldd	r23, Y+22	; 0x16
    2574:	8f 89       	ldd	r24, Y+23	; 0x17
    2576:	98 8d       	ldd	r25, Y+24	; 0x18
    2578:	20 e0       	ldi	r18, 0x00	; 0
    257a:	3f ef       	ldi	r19, 0xFF	; 255
    257c:	4f e7       	ldi	r20, 0x7F	; 127
    257e:	57 e4       	ldi	r21, 0x47	; 71
    2580:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2584:	18 16       	cp	r1, r24
    2586:	4c f5       	brge	.+82     	; 0x25da <Right+0x818>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2588:	69 8d       	ldd	r22, Y+25	; 0x19
    258a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    258c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    258e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2590:	20 e0       	ldi	r18, 0x00	; 0
    2592:	30 e0       	ldi	r19, 0x00	; 0
    2594:	40 e2       	ldi	r20, 0x20	; 32
    2596:	51 e4       	ldi	r21, 0x41	; 65
    2598:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    259c:	dc 01       	movw	r26, r24
    259e:	cb 01       	movw	r24, r22
    25a0:	bc 01       	movw	r22, r24
    25a2:	cd 01       	movw	r24, r26
    25a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25a8:	dc 01       	movw	r26, r24
    25aa:	cb 01       	movw	r24, r22
    25ac:	9c 8b       	std	Y+20, r25	; 0x14
    25ae:	8b 8b       	std	Y+19, r24	; 0x13
    25b0:	0f c0       	rjmp	.+30     	; 0x25d0 <Right+0x80e>
    25b2:	88 ec       	ldi	r24, 0xC8	; 200
    25b4:	90 e0       	ldi	r25, 0x00	; 0
    25b6:	9a 8b       	std	Y+18, r25	; 0x12
    25b8:	89 8b       	std	Y+17, r24	; 0x11
    25ba:	89 89       	ldd	r24, Y+17	; 0x11
    25bc:	9a 89       	ldd	r25, Y+18	; 0x12
    25be:	01 97       	sbiw	r24, 0x01	; 1
    25c0:	f1 f7       	brne	.-4      	; 0x25be <Right+0x7fc>
    25c2:	9a 8b       	std	Y+18, r25	; 0x12
    25c4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25c6:	8b 89       	ldd	r24, Y+19	; 0x13
    25c8:	9c 89       	ldd	r25, Y+20	; 0x14
    25ca:	01 97       	sbiw	r24, 0x01	; 1
    25cc:	9c 8b       	std	Y+20, r25	; 0x14
    25ce:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25d0:	8b 89       	ldd	r24, Y+19	; 0x13
    25d2:	9c 89       	ldd	r25, Y+20	; 0x14
    25d4:	00 97       	sbiw	r24, 0x00	; 0
    25d6:	69 f7       	brne	.-38     	; 0x25b2 <Right+0x7f0>
    25d8:	14 c0       	rjmp	.+40     	; 0x2602 <Right+0x840>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    25da:	6d 89       	ldd	r22, Y+21	; 0x15
    25dc:	7e 89       	ldd	r23, Y+22	; 0x16
    25de:	8f 89       	ldd	r24, Y+23	; 0x17
    25e0:	98 8d       	ldd	r25, Y+24	; 0x18
    25e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25e6:	dc 01       	movw	r26, r24
    25e8:	cb 01       	movw	r24, r22
    25ea:	9c 8b       	std	Y+20, r25	; 0x14
    25ec:	8b 8b       	std	Y+19, r24	; 0x13
    25ee:	8b 89       	ldd	r24, Y+19	; 0x13
    25f0:	9c 89       	ldd	r25, Y+20	; 0x14
    25f2:	98 8b       	std	Y+16, r25	; 0x10
    25f4:	8f 87       	std	Y+15, r24	; 0x0f
    25f6:	8f 85       	ldd	r24, Y+15	; 0x0f
    25f8:	98 89       	ldd	r25, Y+16	; 0x10
    25fa:	01 97       	sbiw	r24, 0x01	; 1
    25fc:	f1 f7       	brne	.-4      	; 0x25fa <Right+0x838>
    25fe:	98 8b       	std	Y+16, r25	; 0x10
    2600:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(20);
	PORTA=0x01;
    2602:	eb e3       	ldi	r30, 0x3B	; 59
    2604:	f0 e0       	ldi	r31, 0x00	; 0
    2606:	81 e0       	ldi	r24, 0x01	; 1
    2608:	80 83       	st	Z, r24
    260a:	80 e0       	ldi	r24, 0x00	; 0
    260c:	90 e0       	ldi	r25, 0x00	; 0
    260e:	a0 ea       	ldi	r26, 0xA0	; 160
    2610:	b1 e4       	ldi	r27, 0x41	; 65
    2612:	8b 87       	std	Y+11, r24	; 0x0b
    2614:	9c 87       	std	Y+12, r25	; 0x0c
    2616:	ad 87       	std	Y+13, r26	; 0x0d
    2618:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    261a:	6b 85       	ldd	r22, Y+11	; 0x0b
    261c:	7c 85       	ldd	r23, Y+12	; 0x0c
    261e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2620:	9e 85       	ldd	r25, Y+14	; 0x0e
    2622:	20 e0       	ldi	r18, 0x00	; 0
    2624:	30 e0       	ldi	r19, 0x00	; 0
    2626:	4a ef       	ldi	r20, 0xFA	; 250
    2628:	54 e4       	ldi	r21, 0x44	; 68
    262a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    262e:	dc 01       	movw	r26, r24
    2630:	cb 01       	movw	r24, r22
    2632:	8f 83       	std	Y+7, r24	; 0x07
    2634:	98 87       	std	Y+8, r25	; 0x08
    2636:	a9 87       	std	Y+9, r26	; 0x09
    2638:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    263a:	6f 81       	ldd	r22, Y+7	; 0x07
    263c:	78 85       	ldd	r23, Y+8	; 0x08
    263e:	89 85       	ldd	r24, Y+9	; 0x09
    2640:	9a 85       	ldd	r25, Y+10	; 0x0a
    2642:	20 e0       	ldi	r18, 0x00	; 0
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	40 e8       	ldi	r20, 0x80	; 128
    2648:	5f e3       	ldi	r21, 0x3F	; 63
    264a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    264e:	88 23       	and	r24, r24
    2650:	2c f4       	brge	.+10     	; 0x265c <Right+0x89a>
		__ticks = 1;
    2652:	81 e0       	ldi	r24, 0x01	; 1
    2654:	90 e0       	ldi	r25, 0x00	; 0
    2656:	9e 83       	std	Y+6, r25	; 0x06
    2658:	8d 83       	std	Y+5, r24	; 0x05
    265a:	3f c0       	rjmp	.+126    	; 0x26da <Right+0x918>
	else if (__tmp > 65535)
    265c:	6f 81       	ldd	r22, Y+7	; 0x07
    265e:	78 85       	ldd	r23, Y+8	; 0x08
    2660:	89 85       	ldd	r24, Y+9	; 0x09
    2662:	9a 85       	ldd	r25, Y+10	; 0x0a
    2664:	20 e0       	ldi	r18, 0x00	; 0
    2666:	3f ef       	ldi	r19, 0xFF	; 255
    2668:	4f e7       	ldi	r20, 0x7F	; 127
    266a:	57 e4       	ldi	r21, 0x47	; 71
    266c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2670:	18 16       	cp	r1, r24
    2672:	4c f5       	brge	.+82     	; 0x26c6 <Right+0x904>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2674:	6b 85       	ldd	r22, Y+11	; 0x0b
    2676:	7c 85       	ldd	r23, Y+12	; 0x0c
    2678:	8d 85       	ldd	r24, Y+13	; 0x0d
    267a:	9e 85       	ldd	r25, Y+14	; 0x0e
    267c:	20 e0       	ldi	r18, 0x00	; 0
    267e:	30 e0       	ldi	r19, 0x00	; 0
    2680:	40 e2       	ldi	r20, 0x20	; 32
    2682:	51 e4       	ldi	r21, 0x41	; 65
    2684:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2688:	dc 01       	movw	r26, r24
    268a:	cb 01       	movw	r24, r22
    268c:	bc 01       	movw	r22, r24
    268e:	cd 01       	movw	r24, r26
    2690:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2694:	dc 01       	movw	r26, r24
    2696:	cb 01       	movw	r24, r22
    2698:	9e 83       	std	Y+6, r25	; 0x06
    269a:	8d 83       	std	Y+5, r24	; 0x05
    269c:	0f c0       	rjmp	.+30     	; 0x26bc <Right+0x8fa>
    269e:	88 ec       	ldi	r24, 0xC8	; 200
    26a0:	90 e0       	ldi	r25, 0x00	; 0
    26a2:	9c 83       	std	Y+4, r25	; 0x04
    26a4:	8b 83       	std	Y+3, r24	; 0x03
    26a6:	8b 81       	ldd	r24, Y+3	; 0x03
    26a8:	9c 81       	ldd	r25, Y+4	; 0x04
    26aa:	01 97       	sbiw	r24, 0x01	; 1
    26ac:	f1 f7       	brne	.-4      	; 0x26aa <Right+0x8e8>
    26ae:	9c 83       	std	Y+4, r25	; 0x04
    26b0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26b2:	8d 81       	ldd	r24, Y+5	; 0x05
    26b4:	9e 81       	ldd	r25, Y+6	; 0x06
    26b6:	01 97       	sbiw	r24, 0x01	; 1
    26b8:	9e 83       	std	Y+6, r25	; 0x06
    26ba:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26bc:	8d 81       	ldd	r24, Y+5	; 0x05
    26be:	9e 81       	ldd	r25, Y+6	; 0x06
    26c0:	00 97       	sbiw	r24, 0x00	; 0
    26c2:	69 f7       	brne	.-38     	; 0x269e <Right+0x8dc>
    26c4:	14 c0       	rjmp	.+40     	; 0x26ee <Right+0x92c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26c6:	6f 81       	ldd	r22, Y+7	; 0x07
    26c8:	78 85       	ldd	r23, Y+8	; 0x08
    26ca:	89 85       	ldd	r24, Y+9	; 0x09
    26cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    26ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26d2:	dc 01       	movw	r26, r24
    26d4:	cb 01       	movw	r24, r22
    26d6:	9e 83       	std	Y+6, r25	; 0x06
    26d8:	8d 83       	std	Y+5, r24	; 0x05
    26da:	8d 81       	ldd	r24, Y+5	; 0x05
    26dc:	9e 81       	ldd	r25, Y+6	; 0x06
    26de:	9a 83       	std	Y+2, r25	; 0x02
    26e0:	89 83       	std	Y+1, r24	; 0x01
    26e2:	89 81       	ldd	r24, Y+1	; 0x01
    26e4:	9a 81       	ldd	r25, Y+2	; 0x02
    26e6:	01 97       	sbiw	r24, 0x01	; 1
    26e8:	f1 f7       	brne	.-4      	; 0x26e6 <Right+0x924>
    26ea:	9a 83       	std	Y+2, r25	; 0x02
    26ec:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(20);
}
    26ee:	c0 59       	subi	r28, 0x90	; 144
    26f0:	df 4f       	sbci	r29, 0xFF	; 255
    26f2:	0f b6       	in	r0, 0x3f	; 63
    26f4:	f8 94       	cli
    26f6:	de bf       	out	0x3e, r29	; 62
    26f8:	0f be       	out	0x3f, r0	; 63
    26fa:	cd bf       	out	0x3d, r28	; 61
    26fc:	cf 91       	pop	r28
    26fe:	df 91       	pop	r29
    2700:	1f 91       	pop	r17
    2702:	0f 91       	pop	r16
    2704:	08 95       	ret

00002706 <LEFT>:
void LEFT()
{
    2706:	0f 93       	push	r16
    2708:	1f 93       	push	r17
    270a:	df 93       	push	r29
    270c:	cf 93       	push	r28
    270e:	cd b7       	in	r28, 0x3d	; 61
    2710:	de b7       	in	r29, 0x3e	; 62
    2712:	c0 57       	subi	r28, 0x70	; 112
    2714:	d0 40       	sbci	r29, 0x00	; 0
    2716:	0f b6       	in	r0, 0x3f	; 63
    2718:	f8 94       	cli
    271a:	de bf       	out	0x3e, r29	; 62
    271c:	0f be       	out	0x3f, r0	; 63
    271e:	cd bf       	out	0x3d, r28	; 61
	PORTB=0x00;
    2720:	e8 e3       	ldi	r30, 0x38	; 56
    2722:	f0 e0       	ldi	r31, 0x00	; 0
    2724:	10 82       	st	Z, r1
	PORTA=0x01;
    2726:	eb e3       	ldi	r30, 0x3B	; 59
    2728:	f0 e0       	ldi	r31, 0x00	; 0
    272a:	81 e0       	ldi	r24, 0x01	; 1
    272c:	80 83       	st	Z, r24
    272e:	fe 01       	movw	r30, r28
    2730:	e3 59       	subi	r30, 0x93	; 147
    2732:	ff 4f       	sbci	r31, 0xFF	; 255
    2734:	80 e0       	ldi	r24, 0x00	; 0
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	a0 ea       	ldi	r26, 0xA0	; 160
    273a:	b1 e4       	ldi	r27, 0x41	; 65
    273c:	80 83       	st	Z, r24
    273e:	91 83       	std	Z+1, r25	; 0x01
    2740:	a2 83       	std	Z+2, r26	; 0x02
    2742:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2744:	8e 01       	movw	r16, r28
    2746:	07 59       	subi	r16, 0x97	; 151
    2748:	1f 4f       	sbci	r17, 0xFF	; 255
    274a:	fe 01       	movw	r30, r28
    274c:	e3 59       	subi	r30, 0x93	; 147
    274e:	ff 4f       	sbci	r31, 0xFF	; 255
    2750:	60 81       	ld	r22, Z
    2752:	71 81       	ldd	r23, Z+1	; 0x01
    2754:	82 81       	ldd	r24, Z+2	; 0x02
    2756:	93 81       	ldd	r25, Z+3	; 0x03
    2758:	20 e0       	ldi	r18, 0x00	; 0
    275a:	30 e0       	ldi	r19, 0x00	; 0
    275c:	4a ef       	ldi	r20, 0xFA	; 250
    275e:	54 e4       	ldi	r21, 0x44	; 68
    2760:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2764:	dc 01       	movw	r26, r24
    2766:	cb 01       	movw	r24, r22
    2768:	f8 01       	movw	r30, r16
    276a:	80 83       	st	Z, r24
    276c:	91 83       	std	Z+1, r25	; 0x01
    276e:	a2 83       	std	Z+2, r26	; 0x02
    2770:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2772:	fe 01       	movw	r30, r28
    2774:	e7 59       	subi	r30, 0x97	; 151
    2776:	ff 4f       	sbci	r31, 0xFF	; 255
    2778:	60 81       	ld	r22, Z
    277a:	71 81       	ldd	r23, Z+1	; 0x01
    277c:	82 81       	ldd	r24, Z+2	; 0x02
    277e:	93 81       	ldd	r25, Z+3	; 0x03
    2780:	20 e0       	ldi	r18, 0x00	; 0
    2782:	30 e0       	ldi	r19, 0x00	; 0
    2784:	40 e8       	ldi	r20, 0x80	; 128
    2786:	5f e3       	ldi	r21, 0x3F	; 63
    2788:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    278c:	88 23       	and	r24, r24
    278e:	44 f4       	brge	.+16     	; 0x27a0 <LEFT+0x9a>
		__ticks = 1;
    2790:	fe 01       	movw	r30, r28
    2792:	e9 59       	subi	r30, 0x99	; 153
    2794:	ff 4f       	sbci	r31, 0xFF	; 255
    2796:	81 e0       	ldi	r24, 0x01	; 1
    2798:	90 e0       	ldi	r25, 0x00	; 0
    279a:	91 83       	std	Z+1, r25	; 0x01
    279c:	80 83       	st	Z, r24
    279e:	64 c0       	rjmp	.+200    	; 0x2868 <LEFT+0x162>
	else if (__tmp > 65535)
    27a0:	fe 01       	movw	r30, r28
    27a2:	e7 59       	subi	r30, 0x97	; 151
    27a4:	ff 4f       	sbci	r31, 0xFF	; 255
    27a6:	60 81       	ld	r22, Z
    27a8:	71 81       	ldd	r23, Z+1	; 0x01
    27aa:	82 81       	ldd	r24, Z+2	; 0x02
    27ac:	93 81       	ldd	r25, Z+3	; 0x03
    27ae:	20 e0       	ldi	r18, 0x00	; 0
    27b0:	3f ef       	ldi	r19, 0xFF	; 255
    27b2:	4f e7       	ldi	r20, 0x7F	; 127
    27b4:	57 e4       	ldi	r21, 0x47	; 71
    27b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    27ba:	18 16       	cp	r1, r24
    27bc:	0c f0       	brlt	.+2      	; 0x27c0 <LEFT+0xba>
    27be:	43 c0       	rjmp	.+134    	; 0x2846 <LEFT+0x140>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    27c0:	fe 01       	movw	r30, r28
    27c2:	e3 59       	subi	r30, 0x93	; 147
    27c4:	ff 4f       	sbci	r31, 0xFF	; 255
    27c6:	60 81       	ld	r22, Z
    27c8:	71 81       	ldd	r23, Z+1	; 0x01
    27ca:	82 81       	ldd	r24, Z+2	; 0x02
    27cc:	93 81       	ldd	r25, Z+3	; 0x03
    27ce:	20 e0       	ldi	r18, 0x00	; 0
    27d0:	30 e0       	ldi	r19, 0x00	; 0
    27d2:	40 e2       	ldi	r20, 0x20	; 32
    27d4:	51 e4       	ldi	r21, 0x41	; 65
    27d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27da:	dc 01       	movw	r26, r24
    27dc:	cb 01       	movw	r24, r22
    27de:	8e 01       	movw	r16, r28
    27e0:	09 59       	subi	r16, 0x99	; 153
    27e2:	1f 4f       	sbci	r17, 0xFF	; 255
    27e4:	bc 01       	movw	r22, r24
    27e6:	cd 01       	movw	r24, r26
    27e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27ec:	dc 01       	movw	r26, r24
    27ee:	cb 01       	movw	r24, r22
    27f0:	f8 01       	movw	r30, r16
    27f2:	91 83       	std	Z+1, r25	; 0x01
    27f4:	80 83       	st	Z, r24
    27f6:	1f c0       	rjmp	.+62     	; 0x2836 <LEFT+0x130>
    27f8:	fe 01       	movw	r30, r28
    27fa:	eb 59       	subi	r30, 0x9B	; 155
    27fc:	ff 4f       	sbci	r31, 0xFF	; 255
    27fe:	88 ec       	ldi	r24, 0xC8	; 200
    2800:	90 e0       	ldi	r25, 0x00	; 0
    2802:	91 83       	std	Z+1, r25	; 0x01
    2804:	80 83       	st	Z, r24
    2806:	fe 01       	movw	r30, r28
    2808:	eb 59       	subi	r30, 0x9B	; 155
    280a:	ff 4f       	sbci	r31, 0xFF	; 255
    280c:	80 81       	ld	r24, Z
    280e:	91 81       	ldd	r25, Z+1	; 0x01
    2810:	01 97       	sbiw	r24, 0x01	; 1
    2812:	f1 f7       	brne	.-4      	; 0x2810 <LEFT+0x10a>
    2814:	fe 01       	movw	r30, r28
    2816:	eb 59       	subi	r30, 0x9B	; 155
    2818:	ff 4f       	sbci	r31, 0xFF	; 255
    281a:	91 83       	std	Z+1, r25	; 0x01
    281c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    281e:	de 01       	movw	r26, r28
    2820:	a9 59       	subi	r26, 0x99	; 153
    2822:	bf 4f       	sbci	r27, 0xFF	; 255
    2824:	fe 01       	movw	r30, r28
    2826:	e9 59       	subi	r30, 0x99	; 153
    2828:	ff 4f       	sbci	r31, 0xFF	; 255
    282a:	80 81       	ld	r24, Z
    282c:	91 81       	ldd	r25, Z+1	; 0x01
    282e:	01 97       	sbiw	r24, 0x01	; 1
    2830:	11 96       	adiw	r26, 0x01	; 1
    2832:	9c 93       	st	X, r25
    2834:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2836:	fe 01       	movw	r30, r28
    2838:	e9 59       	subi	r30, 0x99	; 153
    283a:	ff 4f       	sbci	r31, 0xFF	; 255
    283c:	80 81       	ld	r24, Z
    283e:	91 81       	ldd	r25, Z+1	; 0x01
    2840:	00 97       	sbiw	r24, 0x00	; 0
    2842:	d1 f6       	brne	.-76     	; 0x27f8 <LEFT+0xf2>
    2844:	27 c0       	rjmp	.+78     	; 0x2894 <LEFT+0x18e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2846:	8e 01       	movw	r16, r28
    2848:	09 59       	subi	r16, 0x99	; 153
    284a:	1f 4f       	sbci	r17, 0xFF	; 255
    284c:	fe 01       	movw	r30, r28
    284e:	e7 59       	subi	r30, 0x97	; 151
    2850:	ff 4f       	sbci	r31, 0xFF	; 255
    2852:	60 81       	ld	r22, Z
    2854:	71 81       	ldd	r23, Z+1	; 0x01
    2856:	82 81       	ldd	r24, Z+2	; 0x02
    2858:	93 81       	ldd	r25, Z+3	; 0x03
    285a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    285e:	dc 01       	movw	r26, r24
    2860:	cb 01       	movw	r24, r22
    2862:	f8 01       	movw	r30, r16
    2864:	91 83       	std	Z+1, r25	; 0x01
    2866:	80 83       	st	Z, r24
    2868:	de 01       	movw	r26, r28
    286a:	ad 59       	subi	r26, 0x9D	; 157
    286c:	bf 4f       	sbci	r27, 0xFF	; 255
    286e:	fe 01       	movw	r30, r28
    2870:	e9 59       	subi	r30, 0x99	; 153
    2872:	ff 4f       	sbci	r31, 0xFF	; 255
    2874:	80 81       	ld	r24, Z
    2876:	91 81       	ldd	r25, Z+1	; 0x01
    2878:	8d 93       	st	X+, r24
    287a:	9c 93       	st	X, r25
    287c:	fe 01       	movw	r30, r28
    287e:	ed 59       	subi	r30, 0x9D	; 157
    2880:	ff 4f       	sbci	r31, 0xFF	; 255
    2882:	80 81       	ld	r24, Z
    2884:	91 81       	ldd	r25, Z+1	; 0x01
    2886:	01 97       	sbiw	r24, 0x01	; 1
    2888:	f1 f7       	brne	.-4      	; 0x2886 <LEFT+0x180>
    288a:	fe 01       	movw	r30, r28
    288c:	ed 59       	subi	r30, 0x9D	; 157
    288e:	ff 4f       	sbci	r31, 0xFF	; 255
    2890:	91 83       	std	Z+1, r25	; 0x01
    2892:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTA=0x02;
    2894:	eb e3       	ldi	r30, 0x3B	; 59
    2896:	f0 e0       	ldi	r31, 0x00	; 0
    2898:	82 e0       	ldi	r24, 0x02	; 2
    289a:	80 83       	st	Z, r24
    289c:	fe 01       	movw	r30, r28
    289e:	e1 5a       	subi	r30, 0xA1	; 161
    28a0:	ff 4f       	sbci	r31, 0xFF	; 255
    28a2:	80 e0       	ldi	r24, 0x00	; 0
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	a0 ea       	ldi	r26, 0xA0	; 160
    28a8:	b1 e4       	ldi	r27, 0x41	; 65
    28aa:	80 83       	st	Z, r24
    28ac:	91 83       	std	Z+1, r25	; 0x01
    28ae:	a2 83       	std	Z+2, r26	; 0x02
    28b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    28b2:	8e 01       	movw	r16, r28
    28b4:	05 5a       	subi	r16, 0xA5	; 165
    28b6:	1f 4f       	sbci	r17, 0xFF	; 255
    28b8:	fe 01       	movw	r30, r28
    28ba:	e1 5a       	subi	r30, 0xA1	; 161
    28bc:	ff 4f       	sbci	r31, 0xFF	; 255
    28be:	60 81       	ld	r22, Z
    28c0:	71 81       	ldd	r23, Z+1	; 0x01
    28c2:	82 81       	ldd	r24, Z+2	; 0x02
    28c4:	93 81       	ldd	r25, Z+3	; 0x03
    28c6:	20 e0       	ldi	r18, 0x00	; 0
    28c8:	30 e0       	ldi	r19, 0x00	; 0
    28ca:	4a ef       	ldi	r20, 0xFA	; 250
    28cc:	54 e4       	ldi	r21, 0x44	; 68
    28ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28d2:	dc 01       	movw	r26, r24
    28d4:	cb 01       	movw	r24, r22
    28d6:	f8 01       	movw	r30, r16
    28d8:	80 83       	st	Z, r24
    28da:	91 83       	std	Z+1, r25	; 0x01
    28dc:	a2 83       	std	Z+2, r26	; 0x02
    28de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    28e0:	fe 01       	movw	r30, r28
    28e2:	e5 5a       	subi	r30, 0xA5	; 165
    28e4:	ff 4f       	sbci	r31, 0xFF	; 255
    28e6:	60 81       	ld	r22, Z
    28e8:	71 81       	ldd	r23, Z+1	; 0x01
    28ea:	82 81       	ldd	r24, Z+2	; 0x02
    28ec:	93 81       	ldd	r25, Z+3	; 0x03
    28ee:	20 e0       	ldi	r18, 0x00	; 0
    28f0:	30 e0       	ldi	r19, 0x00	; 0
    28f2:	40 e8       	ldi	r20, 0x80	; 128
    28f4:	5f e3       	ldi	r21, 0x3F	; 63
    28f6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    28fa:	88 23       	and	r24, r24
    28fc:	44 f4       	brge	.+16     	; 0x290e <LEFT+0x208>
		__ticks = 1;
    28fe:	fe 01       	movw	r30, r28
    2900:	e7 5a       	subi	r30, 0xA7	; 167
    2902:	ff 4f       	sbci	r31, 0xFF	; 255
    2904:	81 e0       	ldi	r24, 0x01	; 1
    2906:	90 e0       	ldi	r25, 0x00	; 0
    2908:	91 83       	std	Z+1, r25	; 0x01
    290a:	80 83       	st	Z, r24
    290c:	64 c0       	rjmp	.+200    	; 0x29d6 <LEFT+0x2d0>
	else if (__tmp > 65535)
    290e:	fe 01       	movw	r30, r28
    2910:	e5 5a       	subi	r30, 0xA5	; 165
    2912:	ff 4f       	sbci	r31, 0xFF	; 255
    2914:	60 81       	ld	r22, Z
    2916:	71 81       	ldd	r23, Z+1	; 0x01
    2918:	82 81       	ldd	r24, Z+2	; 0x02
    291a:	93 81       	ldd	r25, Z+3	; 0x03
    291c:	20 e0       	ldi	r18, 0x00	; 0
    291e:	3f ef       	ldi	r19, 0xFF	; 255
    2920:	4f e7       	ldi	r20, 0x7F	; 127
    2922:	57 e4       	ldi	r21, 0x47	; 71
    2924:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2928:	18 16       	cp	r1, r24
    292a:	0c f0       	brlt	.+2      	; 0x292e <LEFT+0x228>
    292c:	43 c0       	rjmp	.+134    	; 0x29b4 <LEFT+0x2ae>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    292e:	fe 01       	movw	r30, r28
    2930:	e1 5a       	subi	r30, 0xA1	; 161
    2932:	ff 4f       	sbci	r31, 0xFF	; 255
    2934:	60 81       	ld	r22, Z
    2936:	71 81       	ldd	r23, Z+1	; 0x01
    2938:	82 81       	ldd	r24, Z+2	; 0x02
    293a:	93 81       	ldd	r25, Z+3	; 0x03
    293c:	20 e0       	ldi	r18, 0x00	; 0
    293e:	30 e0       	ldi	r19, 0x00	; 0
    2940:	40 e2       	ldi	r20, 0x20	; 32
    2942:	51 e4       	ldi	r21, 0x41	; 65
    2944:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2948:	dc 01       	movw	r26, r24
    294a:	cb 01       	movw	r24, r22
    294c:	8e 01       	movw	r16, r28
    294e:	07 5a       	subi	r16, 0xA7	; 167
    2950:	1f 4f       	sbci	r17, 0xFF	; 255
    2952:	bc 01       	movw	r22, r24
    2954:	cd 01       	movw	r24, r26
    2956:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    295a:	dc 01       	movw	r26, r24
    295c:	cb 01       	movw	r24, r22
    295e:	f8 01       	movw	r30, r16
    2960:	91 83       	std	Z+1, r25	; 0x01
    2962:	80 83       	st	Z, r24
    2964:	1f c0       	rjmp	.+62     	; 0x29a4 <LEFT+0x29e>
    2966:	fe 01       	movw	r30, r28
    2968:	e9 5a       	subi	r30, 0xA9	; 169
    296a:	ff 4f       	sbci	r31, 0xFF	; 255
    296c:	88 ec       	ldi	r24, 0xC8	; 200
    296e:	90 e0       	ldi	r25, 0x00	; 0
    2970:	91 83       	std	Z+1, r25	; 0x01
    2972:	80 83       	st	Z, r24
    2974:	fe 01       	movw	r30, r28
    2976:	e9 5a       	subi	r30, 0xA9	; 169
    2978:	ff 4f       	sbci	r31, 0xFF	; 255
    297a:	80 81       	ld	r24, Z
    297c:	91 81       	ldd	r25, Z+1	; 0x01
    297e:	01 97       	sbiw	r24, 0x01	; 1
    2980:	f1 f7       	brne	.-4      	; 0x297e <LEFT+0x278>
    2982:	fe 01       	movw	r30, r28
    2984:	e9 5a       	subi	r30, 0xA9	; 169
    2986:	ff 4f       	sbci	r31, 0xFF	; 255
    2988:	91 83       	std	Z+1, r25	; 0x01
    298a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    298c:	de 01       	movw	r26, r28
    298e:	a7 5a       	subi	r26, 0xA7	; 167
    2990:	bf 4f       	sbci	r27, 0xFF	; 255
    2992:	fe 01       	movw	r30, r28
    2994:	e7 5a       	subi	r30, 0xA7	; 167
    2996:	ff 4f       	sbci	r31, 0xFF	; 255
    2998:	80 81       	ld	r24, Z
    299a:	91 81       	ldd	r25, Z+1	; 0x01
    299c:	01 97       	sbiw	r24, 0x01	; 1
    299e:	11 96       	adiw	r26, 0x01	; 1
    29a0:	9c 93       	st	X, r25
    29a2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    29a4:	fe 01       	movw	r30, r28
    29a6:	e7 5a       	subi	r30, 0xA7	; 167
    29a8:	ff 4f       	sbci	r31, 0xFF	; 255
    29aa:	80 81       	ld	r24, Z
    29ac:	91 81       	ldd	r25, Z+1	; 0x01
    29ae:	00 97       	sbiw	r24, 0x00	; 0
    29b0:	d1 f6       	brne	.-76     	; 0x2966 <LEFT+0x260>
    29b2:	27 c0       	rjmp	.+78     	; 0x2a02 <LEFT+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    29b4:	8e 01       	movw	r16, r28
    29b6:	07 5a       	subi	r16, 0xA7	; 167
    29b8:	1f 4f       	sbci	r17, 0xFF	; 255
    29ba:	fe 01       	movw	r30, r28
    29bc:	e5 5a       	subi	r30, 0xA5	; 165
    29be:	ff 4f       	sbci	r31, 0xFF	; 255
    29c0:	60 81       	ld	r22, Z
    29c2:	71 81       	ldd	r23, Z+1	; 0x01
    29c4:	82 81       	ldd	r24, Z+2	; 0x02
    29c6:	93 81       	ldd	r25, Z+3	; 0x03
    29c8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29cc:	dc 01       	movw	r26, r24
    29ce:	cb 01       	movw	r24, r22
    29d0:	f8 01       	movw	r30, r16
    29d2:	91 83       	std	Z+1, r25	; 0x01
    29d4:	80 83       	st	Z, r24
    29d6:	de 01       	movw	r26, r28
    29d8:	ab 5a       	subi	r26, 0xAB	; 171
    29da:	bf 4f       	sbci	r27, 0xFF	; 255
    29dc:	fe 01       	movw	r30, r28
    29de:	e7 5a       	subi	r30, 0xA7	; 167
    29e0:	ff 4f       	sbci	r31, 0xFF	; 255
    29e2:	80 81       	ld	r24, Z
    29e4:	91 81       	ldd	r25, Z+1	; 0x01
    29e6:	8d 93       	st	X+, r24
    29e8:	9c 93       	st	X, r25
    29ea:	fe 01       	movw	r30, r28
    29ec:	eb 5a       	subi	r30, 0xAB	; 171
    29ee:	ff 4f       	sbci	r31, 0xFF	; 255
    29f0:	80 81       	ld	r24, Z
    29f2:	91 81       	ldd	r25, Z+1	; 0x01
    29f4:	01 97       	sbiw	r24, 0x01	; 1
    29f6:	f1 f7       	brne	.-4      	; 0x29f4 <LEFT+0x2ee>
    29f8:	fe 01       	movw	r30, r28
    29fa:	eb 5a       	subi	r30, 0xAB	; 171
    29fc:	ff 4f       	sbci	r31, 0xFF	; 255
    29fe:	91 83       	std	Z+1, r25	; 0x01
    2a00:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTA=0x04;
    2a02:	eb e3       	ldi	r30, 0x3B	; 59
    2a04:	f0 e0       	ldi	r31, 0x00	; 0
    2a06:	84 e0       	ldi	r24, 0x04	; 4
    2a08:	80 83       	st	Z, r24
    2a0a:	fe 01       	movw	r30, r28
    2a0c:	ef 5a       	subi	r30, 0xAF	; 175
    2a0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a10:	80 e0       	ldi	r24, 0x00	; 0
    2a12:	90 e0       	ldi	r25, 0x00	; 0
    2a14:	a0 ea       	ldi	r26, 0xA0	; 160
    2a16:	b1 e4       	ldi	r27, 0x41	; 65
    2a18:	80 83       	st	Z, r24
    2a1a:	91 83       	std	Z+1, r25	; 0x01
    2a1c:	a2 83       	std	Z+2, r26	; 0x02
    2a1e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2a20:	8e 01       	movw	r16, r28
    2a22:	03 5b       	subi	r16, 0xB3	; 179
    2a24:	1f 4f       	sbci	r17, 0xFF	; 255
    2a26:	fe 01       	movw	r30, r28
    2a28:	ef 5a       	subi	r30, 0xAF	; 175
    2a2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a2c:	60 81       	ld	r22, Z
    2a2e:	71 81       	ldd	r23, Z+1	; 0x01
    2a30:	82 81       	ldd	r24, Z+2	; 0x02
    2a32:	93 81       	ldd	r25, Z+3	; 0x03
    2a34:	20 e0       	ldi	r18, 0x00	; 0
    2a36:	30 e0       	ldi	r19, 0x00	; 0
    2a38:	4a ef       	ldi	r20, 0xFA	; 250
    2a3a:	54 e4       	ldi	r21, 0x44	; 68
    2a3c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a40:	dc 01       	movw	r26, r24
    2a42:	cb 01       	movw	r24, r22
    2a44:	f8 01       	movw	r30, r16
    2a46:	80 83       	st	Z, r24
    2a48:	91 83       	std	Z+1, r25	; 0x01
    2a4a:	a2 83       	std	Z+2, r26	; 0x02
    2a4c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2a4e:	fe 01       	movw	r30, r28
    2a50:	e3 5b       	subi	r30, 0xB3	; 179
    2a52:	ff 4f       	sbci	r31, 0xFF	; 255
    2a54:	60 81       	ld	r22, Z
    2a56:	71 81       	ldd	r23, Z+1	; 0x01
    2a58:	82 81       	ldd	r24, Z+2	; 0x02
    2a5a:	93 81       	ldd	r25, Z+3	; 0x03
    2a5c:	20 e0       	ldi	r18, 0x00	; 0
    2a5e:	30 e0       	ldi	r19, 0x00	; 0
    2a60:	40 e8       	ldi	r20, 0x80	; 128
    2a62:	5f e3       	ldi	r21, 0x3F	; 63
    2a64:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a68:	88 23       	and	r24, r24
    2a6a:	44 f4       	brge	.+16     	; 0x2a7c <LEFT+0x376>
		__ticks = 1;
    2a6c:	fe 01       	movw	r30, r28
    2a6e:	e5 5b       	subi	r30, 0xB5	; 181
    2a70:	ff 4f       	sbci	r31, 0xFF	; 255
    2a72:	81 e0       	ldi	r24, 0x01	; 1
    2a74:	90 e0       	ldi	r25, 0x00	; 0
    2a76:	91 83       	std	Z+1, r25	; 0x01
    2a78:	80 83       	st	Z, r24
    2a7a:	64 c0       	rjmp	.+200    	; 0x2b44 <LEFT+0x43e>
	else if (__tmp > 65535)
    2a7c:	fe 01       	movw	r30, r28
    2a7e:	e3 5b       	subi	r30, 0xB3	; 179
    2a80:	ff 4f       	sbci	r31, 0xFF	; 255
    2a82:	60 81       	ld	r22, Z
    2a84:	71 81       	ldd	r23, Z+1	; 0x01
    2a86:	82 81       	ldd	r24, Z+2	; 0x02
    2a88:	93 81       	ldd	r25, Z+3	; 0x03
    2a8a:	20 e0       	ldi	r18, 0x00	; 0
    2a8c:	3f ef       	ldi	r19, 0xFF	; 255
    2a8e:	4f e7       	ldi	r20, 0x7F	; 127
    2a90:	57 e4       	ldi	r21, 0x47	; 71
    2a92:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a96:	18 16       	cp	r1, r24
    2a98:	0c f0       	brlt	.+2      	; 0x2a9c <LEFT+0x396>
    2a9a:	43 c0       	rjmp	.+134    	; 0x2b22 <LEFT+0x41c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a9c:	fe 01       	movw	r30, r28
    2a9e:	ef 5a       	subi	r30, 0xAF	; 175
    2aa0:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa2:	60 81       	ld	r22, Z
    2aa4:	71 81       	ldd	r23, Z+1	; 0x01
    2aa6:	82 81       	ldd	r24, Z+2	; 0x02
    2aa8:	93 81       	ldd	r25, Z+3	; 0x03
    2aaa:	20 e0       	ldi	r18, 0x00	; 0
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	40 e2       	ldi	r20, 0x20	; 32
    2ab0:	51 e4       	ldi	r21, 0x41	; 65
    2ab2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ab6:	dc 01       	movw	r26, r24
    2ab8:	cb 01       	movw	r24, r22
    2aba:	8e 01       	movw	r16, r28
    2abc:	05 5b       	subi	r16, 0xB5	; 181
    2abe:	1f 4f       	sbci	r17, 0xFF	; 255
    2ac0:	bc 01       	movw	r22, r24
    2ac2:	cd 01       	movw	r24, r26
    2ac4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ac8:	dc 01       	movw	r26, r24
    2aca:	cb 01       	movw	r24, r22
    2acc:	f8 01       	movw	r30, r16
    2ace:	91 83       	std	Z+1, r25	; 0x01
    2ad0:	80 83       	st	Z, r24
    2ad2:	1f c0       	rjmp	.+62     	; 0x2b12 <LEFT+0x40c>
    2ad4:	fe 01       	movw	r30, r28
    2ad6:	e7 5b       	subi	r30, 0xB7	; 183
    2ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    2ada:	88 ec       	ldi	r24, 0xC8	; 200
    2adc:	90 e0       	ldi	r25, 0x00	; 0
    2ade:	91 83       	std	Z+1, r25	; 0x01
    2ae0:	80 83       	st	Z, r24
    2ae2:	fe 01       	movw	r30, r28
    2ae4:	e7 5b       	subi	r30, 0xB7	; 183
    2ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae8:	80 81       	ld	r24, Z
    2aea:	91 81       	ldd	r25, Z+1	; 0x01
    2aec:	01 97       	sbiw	r24, 0x01	; 1
    2aee:	f1 f7       	brne	.-4      	; 0x2aec <LEFT+0x3e6>
    2af0:	fe 01       	movw	r30, r28
    2af2:	e7 5b       	subi	r30, 0xB7	; 183
    2af4:	ff 4f       	sbci	r31, 0xFF	; 255
    2af6:	91 83       	std	Z+1, r25	; 0x01
    2af8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2afa:	de 01       	movw	r26, r28
    2afc:	a5 5b       	subi	r26, 0xB5	; 181
    2afe:	bf 4f       	sbci	r27, 0xFF	; 255
    2b00:	fe 01       	movw	r30, r28
    2b02:	e5 5b       	subi	r30, 0xB5	; 181
    2b04:	ff 4f       	sbci	r31, 0xFF	; 255
    2b06:	80 81       	ld	r24, Z
    2b08:	91 81       	ldd	r25, Z+1	; 0x01
    2b0a:	01 97       	sbiw	r24, 0x01	; 1
    2b0c:	11 96       	adiw	r26, 0x01	; 1
    2b0e:	9c 93       	st	X, r25
    2b10:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b12:	fe 01       	movw	r30, r28
    2b14:	e5 5b       	subi	r30, 0xB5	; 181
    2b16:	ff 4f       	sbci	r31, 0xFF	; 255
    2b18:	80 81       	ld	r24, Z
    2b1a:	91 81       	ldd	r25, Z+1	; 0x01
    2b1c:	00 97       	sbiw	r24, 0x00	; 0
    2b1e:	d1 f6       	brne	.-76     	; 0x2ad4 <LEFT+0x3ce>
    2b20:	27 c0       	rjmp	.+78     	; 0x2b70 <LEFT+0x46a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b22:	8e 01       	movw	r16, r28
    2b24:	05 5b       	subi	r16, 0xB5	; 181
    2b26:	1f 4f       	sbci	r17, 0xFF	; 255
    2b28:	fe 01       	movw	r30, r28
    2b2a:	e3 5b       	subi	r30, 0xB3	; 179
    2b2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b2e:	60 81       	ld	r22, Z
    2b30:	71 81       	ldd	r23, Z+1	; 0x01
    2b32:	82 81       	ldd	r24, Z+2	; 0x02
    2b34:	93 81       	ldd	r25, Z+3	; 0x03
    2b36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b3a:	dc 01       	movw	r26, r24
    2b3c:	cb 01       	movw	r24, r22
    2b3e:	f8 01       	movw	r30, r16
    2b40:	91 83       	std	Z+1, r25	; 0x01
    2b42:	80 83       	st	Z, r24
    2b44:	de 01       	movw	r26, r28
    2b46:	a9 5b       	subi	r26, 0xB9	; 185
    2b48:	bf 4f       	sbci	r27, 0xFF	; 255
    2b4a:	fe 01       	movw	r30, r28
    2b4c:	e5 5b       	subi	r30, 0xB5	; 181
    2b4e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b50:	80 81       	ld	r24, Z
    2b52:	91 81       	ldd	r25, Z+1	; 0x01
    2b54:	8d 93       	st	X+, r24
    2b56:	9c 93       	st	X, r25
    2b58:	fe 01       	movw	r30, r28
    2b5a:	e9 5b       	subi	r30, 0xB9	; 185
    2b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b5e:	80 81       	ld	r24, Z
    2b60:	91 81       	ldd	r25, Z+1	; 0x01
    2b62:	01 97       	sbiw	r24, 0x01	; 1
    2b64:	f1 f7       	brne	.-4      	; 0x2b62 <LEFT+0x45c>
    2b66:	fe 01       	movw	r30, r28
    2b68:	e9 5b       	subi	r30, 0xB9	; 185
    2b6a:	ff 4f       	sbci	r31, 0xFF	; 255
    2b6c:	91 83       	std	Z+1, r25	; 0x01
    2b6e:	80 83       	st	Z, r24
	_delay_ms(20);
	PORTA=0x08;
    2b70:	eb e3       	ldi	r30, 0x3B	; 59
    2b72:	f0 e0       	ldi	r31, 0x00	; 0
    2b74:	88 e0       	ldi	r24, 0x08	; 8
    2b76:	80 83       	st	Z, r24
    2b78:	fe 01       	movw	r30, r28
    2b7a:	ed 5b       	subi	r30, 0xBD	; 189
    2b7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b7e:	80 e0       	ldi	r24, 0x00	; 0
    2b80:	90 e0       	ldi	r25, 0x00	; 0
    2b82:	a0 ea       	ldi	r26, 0xA0	; 160
    2b84:	b1 e4       	ldi	r27, 0x41	; 65
    2b86:	80 83       	st	Z, r24
    2b88:	91 83       	std	Z+1, r25	; 0x01
    2b8a:	a2 83       	std	Z+2, r26	; 0x02
    2b8c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b8e:	8e 01       	movw	r16, r28
    2b90:	01 5c       	subi	r16, 0xC1	; 193
    2b92:	1f 4f       	sbci	r17, 0xFF	; 255
    2b94:	fe 01       	movw	r30, r28
    2b96:	ed 5b       	subi	r30, 0xBD	; 189
    2b98:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9a:	60 81       	ld	r22, Z
    2b9c:	71 81       	ldd	r23, Z+1	; 0x01
    2b9e:	82 81       	ldd	r24, Z+2	; 0x02
    2ba0:	93 81       	ldd	r25, Z+3	; 0x03
    2ba2:	20 e0       	ldi	r18, 0x00	; 0
    2ba4:	30 e0       	ldi	r19, 0x00	; 0
    2ba6:	4a ef       	ldi	r20, 0xFA	; 250
    2ba8:	54 e4       	ldi	r21, 0x44	; 68
    2baa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bae:	dc 01       	movw	r26, r24
    2bb0:	cb 01       	movw	r24, r22
    2bb2:	f8 01       	movw	r30, r16
    2bb4:	80 83       	st	Z, r24
    2bb6:	91 83       	std	Z+1, r25	; 0x01
    2bb8:	a2 83       	std	Z+2, r26	; 0x02
    2bba:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2bbc:	fe 01       	movw	r30, r28
    2bbe:	ff 96       	adiw	r30, 0x3f	; 63
    2bc0:	60 81       	ld	r22, Z
    2bc2:	71 81       	ldd	r23, Z+1	; 0x01
    2bc4:	82 81       	ldd	r24, Z+2	; 0x02
    2bc6:	93 81       	ldd	r25, Z+3	; 0x03
    2bc8:	20 e0       	ldi	r18, 0x00	; 0
    2bca:	30 e0       	ldi	r19, 0x00	; 0
    2bcc:	40 e8       	ldi	r20, 0x80	; 128
    2bce:	5f e3       	ldi	r21, 0x3F	; 63
    2bd0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2bd4:	88 23       	and	r24, r24
    2bd6:	2c f4       	brge	.+10     	; 0x2be2 <LEFT+0x4dc>
		__ticks = 1;
    2bd8:	81 e0       	ldi	r24, 0x01	; 1
    2bda:	90 e0       	ldi	r25, 0x00	; 0
    2bdc:	9e af       	std	Y+62, r25	; 0x3e
    2bde:	8d af       	std	Y+61, r24	; 0x3d
    2be0:	46 c0       	rjmp	.+140    	; 0x2c6e <LEFT+0x568>
	else if (__tmp > 65535)
    2be2:	fe 01       	movw	r30, r28
    2be4:	ff 96       	adiw	r30, 0x3f	; 63
    2be6:	60 81       	ld	r22, Z
    2be8:	71 81       	ldd	r23, Z+1	; 0x01
    2bea:	82 81       	ldd	r24, Z+2	; 0x02
    2bec:	93 81       	ldd	r25, Z+3	; 0x03
    2bee:	20 e0       	ldi	r18, 0x00	; 0
    2bf0:	3f ef       	ldi	r19, 0xFF	; 255
    2bf2:	4f e7       	ldi	r20, 0x7F	; 127
    2bf4:	57 e4       	ldi	r21, 0x47	; 71
    2bf6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bfa:	18 16       	cp	r1, r24
    2bfc:	64 f5       	brge	.+88     	; 0x2c56 <LEFT+0x550>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bfe:	fe 01       	movw	r30, r28
    2c00:	ed 5b       	subi	r30, 0xBD	; 189
    2c02:	ff 4f       	sbci	r31, 0xFF	; 255
    2c04:	60 81       	ld	r22, Z
    2c06:	71 81       	ldd	r23, Z+1	; 0x01
    2c08:	82 81       	ldd	r24, Z+2	; 0x02
    2c0a:	93 81       	ldd	r25, Z+3	; 0x03
    2c0c:	20 e0       	ldi	r18, 0x00	; 0
    2c0e:	30 e0       	ldi	r19, 0x00	; 0
    2c10:	40 e2       	ldi	r20, 0x20	; 32
    2c12:	51 e4       	ldi	r21, 0x41	; 65
    2c14:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c18:	dc 01       	movw	r26, r24
    2c1a:	cb 01       	movw	r24, r22
    2c1c:	bc 01       	movw	r22, r24
    2c1e:	cd 01       	movw	r24, r26
    2c20:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c24:	dc 01       	movw	r26, r24
    2c26:	cb 01       	movw	r24, r22
    2c28:	9e af       	std	Y+62, r25	; 0x3e
    2c2a:	8d af       	std	Y+61, r24	; 0x3d
    2c2c:	0f c0       	rjmp	.+30     	; 0x2c4c <LEFT+0x546>
    2c2e:	88 ec       	ldi	r24, 0xC8	; 200
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	9c af       	std	Y+60, r25	; 0x3c
    2c34:	8b af       	std	Y+59, r24	; 0x3b
    2c36:	8b ad       	ldd	r24, Y+59	; 0x3b
    2c38:	9c ad       	ldd	r25, Y+60	; 0x3c
    2c3a:	01 97       	sbiw	r24, 0x01	; 1
    2c3c:	f1 f7       	brne	.-4      	; 0x2c3a <LEFT+0x534>
    2c3e:	9c af       	std	Y+60, r25	; 0x3c
    2c40:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2c42:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c44:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c46:	01 97       	sbiw	r24, 0x01	; 1
    2c48:	9e af       	std	Y+62, r25	; 0x3e
    2c4a:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c4c:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c4e:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c50:	00 97       	sbiw	r24, 0x00	; 0
    2c52:	69 f7       	brne	.-38     	; 0x2c2e <LEFT+0x528>
    2c54:	16 c0       	rjmp	.+44     	; 0x2c82 <LEFT+0x57c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c56:	fe 01       	movw	r30, r28
    2c58:	ff 96       	adiw	r30, 0x3f	; 63
    2c5a:	60 81       	ld	r22, Z
    2c5c:	71 81       	ldd	r23, Z+1	; 0x01
    2c5e:	82 81       	ldd	r24, Z+2	; 0x02
    2c60:	93 81       	ldd	r25, Z+3	; 0x03
    2c62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c66:	dc 01       	movw	r26, r24
    2c68:	cb 01       	movw	r24, r22
    2c6a:	9e af       	std	Y+62, r25	; 0x3e
    2c6c:	8d af       	std	Y+61, r24	; 0x3d
    2c6e:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c70:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c72:	9a af       	std	Y+58, r25	; 0x3a
    2c74:	89 af       	std	Y+57, r24	; 0x39
    2c76:	89 ad       	ldd	r24, Y+57	; 0x39
    2c78:	9a ad       	ldd	r25, Y+58	; 0x3a
    2c7a:	01 97       	sbiw	r24, 0x01	; 1
    2c7c:	f1 f7       	brne	.-4      	; 0x2c7a <LEFT+0x574>
    2c7e:	9a af       	std	Y+58, r25	; 0x3a
    2c80:	89 af       	std	Y+57, r24	; 0x39
	_delay_ms(20);
	PORTA=0x10;
    2c82:	eb e3       	ldi	r30, 0x3B	; 59
    2c84:	f0 e0       	ldi	r31, 0x00	; 0
    2c86:	80 e1       	ldi	r24, 0x10	; 16
    2c88:	80 83       	st	Z, r24
    2c8a:	80 e0       	ldi	r24, 0x00	; 0
    2c8c:	90 e0       	ldi	r25, 0x00	; 0
    2c8e:	a0 ea       	ldi	r26, 0xA0	; 160
    2c90:	b1 e4       	ldi	r27, 0x41	; 65
    2c92:	8d ab       	std	Y+53, r24	; 0x35
    2c94:	9e ab       	std	Y+54, r25	; 0x36
    2c96:	af ab       	std	Y+55, r26	; 0x37
    2c98:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c9a:	6d a9       	ldd	r22, Y+53	; 0x35
    2c9c:	7e a9       	ldd	r23, Y+54	; 0x36
    2c9e:	8f a9       	ldd	r24, Y+55	; 0x37
    2ca0:	98 ad       	ldd	r25, Y+56	; 0x38
    2ca2:	20 e0       	ldi	r18, 0x00	; 0
    2ca4:	30 e0       	ldi	r19, 0x00	; 0
    2ca6:	4a ef       	ldi	r20, 0xFA	; 250
    2ca8:	54 e4       	ldi	r21, 0x44	; 68
    2caa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cae:	dc 01       	movw	r26, r24
    2cb0:	cb 01       	movw	r24, r22
    2cb2:	89 ab       	std	Y+49, r24	; 0x31
    2cb4:	9a ab       	std	Y+50, r25	; 0x32
    2cb6:	ab ab       	std	Y+51, r26	; 0x33
    2cb8:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2cba:	69 a9       	ldd	r22, Y+49	; 0x31
    2cbc:	7a a9       	ldd	r23, Y+50	; 0x32
    2cbe:	8b a9       	ldd	r24, Y+51	; 0x33
    2cc0:	9c a9       	ldd	r25, Y+52	; 0x34
    2cc2:	20 e0       	ldi	r18, 0x00	; 0
    2cc4:	30 e0       	ldi	r19, 0x00	; 0
    2cc6:	40 e8       	ldi	r20, 0x80	; 128
    2cc8:	5f e3       	ldi	r21, 0x3F	; 63
    2cca:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cce:	88 23       	and	r24, r24
    2cd0:	2c f4       	brge	.+10     	; 0x2cdc <LEFT+0x5d6>
		__ticks = 1;
    2cd2:	81 e0       	ldi	r24, 0x01	; 1
    2cd4:	90 e0       	ldi	r25, 0x00	; 0
    2cd6:	98 ab       	std	Y+48, r25	; 0x30
    2cd8:	8f a7       	std	Y+47, r24	; 0x2f
    2cda:	3f c0       	rjmp	.+126    	; 0x2d5a <LEFT+0x654>
	else if (__tmp > 65535)
    2cdc:	69 a9       	ldd	r22, Y+49	; 0x31
    2cde:	7a a9       	ldd	r23, Y+50	; 0x32
    2ce0:	8b a9       	ldd	r24, Y+51	; 0x33
    2ce2:	9c a9       	ldd	r25, Y+52	; 0x34
    2ce4:	20 e0       	ldi	r18, 0x00	; 0
    2ce6:	3f ef       	ldi	r19, 0xFF	; 255
    2ce8:	4f e7       	ldi	r20, 0x7F	; 127
    2cea:	57 e4       	ldi	r21, 0x47	; 71
    2cec:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cf0:	18 16       	cp	r1, r24
    2cf2:	4c f5       	brge	.+82     	; 0x2d46 <LEFT+0x640>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cf4:	6d a9       	ldd	r22, Y+53	; 0x35
    2cf6:	7e a9       	ldd	r23, Y+54	; 0x36
    2cf8:	8f a9       	ldd	r24, Y+55	; 0x37
    2cfa:	98 ad       	ldd	r25, Y+56	; 0x38
    2cfc:	20 e0       	ldi	r18, 0x00	; 0
    2cfe:	30 e0       	ldi	r19, 0x00	; 0
    2d00:	40 e2       	ldi	r20, 0x20	; 32
    2d02:	51 e4       	ldi	r21, 0x41	; 65
    2d04:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d08:	dc 01       	movw	r26, r24
    2d0a:	cb 01       	movw	r24, r22
    2d0c:	bc 01       	movw	r22, r24
    2d0e:	cd 01       	movw	r24, r26
    2d10:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d14:	dc 01       	movw	r26, r24
    2d16:	cb 01       	movw	r24, r22
    2d18:	98 ab       	std	Y+48, r25	; 0x30
    2d1a:	8f a7       	std	Y+47, r24	; 0x2f
    2d1c:	0f c0       	rjmp	.+30     	; 0x2d3c <LEFT+0x636>
    2d1e:	88 ec       	ldi	r24, 0xC8	; 200
    2d20:	90 e0       	ldi	r25, 0x00	; 0
    2d22:	9e a7       	std	Y+46, r25	; 0x2e
    2d24:	8d a7       	std	Y+45, r24	; 0x2d
    2d26:	8d a5       	ldd	r24, Y+45	; 0x2d
    2d28:	9e a5       	ldd	r25, Y+46	; 0x2e
    2d2a:	01 97       	sbiw	r24, 0x01	; 1
    2d2c:	f1 f7       	brne	.-4      	; 0x2d2a <LEFT+0x624>
    2d2e:	9e a7       	std	Y+46, r25	; 0x2e
    2d30:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d32:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d34:	98 a9       	ldd	r25, Y+48	; 0x30
    2d36:	01 97       	sbiw	r24, 0x01	; 1
    2d38:	98 ab       	std	Y+48, r25	; 0x30
    2d3a:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d3c:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d3e:	98 a9       	ldd	r25, Y+48	; 0x30
    2d40:	00 97       	sbiw	r24, 0x00	; 0
    2d42:	69 f7       	brne	.-38     	; 0x2d1e <LEFT+0x618>
    2d44:	14 c0       	rjmp	.+40     	; 0x2d6e <LEFT+0x668>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d46:	69 a9       	ldd	r22, Y+49	; 0x31
    2d48:	7a a9       	ldd	r23, Y+50	; 0x32
    2d4a:	8b a9       	ldd	r24, Y+51	; 0x33
    2d4c:	9c a9       	ldd	r25, Y+52	; 0x34
    2d4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d52:	dc 01       	movw	r26, r24
    2d54:	cb 01       	movw	r24, r22
    2d56:	98 ab       	std	Y+48, r25	; 0x30
    2d58:	8f a7       	std	Y+47, r24	; 0x2f
    2d5a:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d5c:	98 a9       	ldd	r25, Y+48	; 0x30
    2d5e:	9c a7       	std	Y+44, r25	; 0x2c
    2d60:	8b a7       	std	Y+43, r24	; 0x2b
    2d62:	8b a5       	ldd	r24, Y+43	; 0x2b
    2d64:	9c a5       	ldd	r25, Y+44	; 0x2c
    2d66:	01 97       	sbiw	r24, 0x01	; 1
    2d68:	f1 f7       	brne	.-4      	; 0x2d66 <LEFT+0x660>
    2d6a:	9c a7       	std	Y+44, r25	; 0x2c
    2d6c:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(20);
	PORTA=0x20;
    2d6e:	eb e3       	ldi	r30, 0x3B	; 59
    2d70:	f0 e0       	ldi	r31, 0x00	; 0
    2d72:	80 e2       	ldi	r24, 0x20	; 32
    2d74:	80 83       	st	Z, r24
    2d76:	80 e0       	ldi	r24, 0x00	; 0
    2d78:	90 e0       	ldi	r25, 0x00	; 0
    2d7a:	a0 ea       	ldi	r26, 0xA0	; 160
    2d7c:	b1 e4       	ldi	r27, 0x41	; 65
    2d7e:	8f a3       	std	Y+39, r24	; 0x27
    2d80:	98 a7       	std	Y+40, r25	; 0x28
    2d82:	a9 a7       	std	Y+41, r26	; 0x29
    2d84:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d86:	6f a1       	ldd	r22, Y+39	; 0x27
    2d88:	78 a5       	ldd	r23, Y+40	; 0x28
    2d8a:	89 a5       	ldd	r24, Y+41	; 0x29
    2d8c:	9a a5       	ldd	r25, Y+42	; 0x2a
    2d8e:	20 e0       	ldi	r18, 0x00	; 0
    2d90:	30 e0       	ldi	r19, 0x00	; 0
    2d92:	4a ef       	ldi	r20, 0xFA	; 250
    2d94:	54 e4       	ldi	r21, 0x44	; 68
    2d96:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d9a:	dc 01       	movw	r26, r24
    2d9c:	cb 01       	movw	r24, r22
    2d9e:	8b a3       	std	Y+35, r24	; 0x23
    2da0:	9c a3       	std	Y+36, r25	; 0x24
    2da2:	ad a3       	std	Y+37, r26	; 0x25
    2da4:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2da6:	6b a1       	ldd	r22, Y+35	; 0x23
    2da8:	7c a1       	ldd	r23, Y+36	; 0x24
    2daa:	8d a1       	ldd	r24, Y+37	; 0x25
    2dac:	9e a1       	ldd	r25, Y+38	; 0x26
    2dae:	20 e0       	ldi	r18, 0x00	; 0
    2db0:	30 e0       	ldi	r19, 0x00	; 0
    2db2:	40 e8       	ldi	r20, 0x80	; 128
    2db4:	5f e3       	ldi	r21, 0x3F	; 63
    2db6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2dba:	88 23       	and	r24, r24
    2dbc:	2c f4       	brge	.+10     	; 0x2dc8 <LEFT+0x6c2>
		__ticks = 1;
    2dbe:	81 e0       	ldi	r24, 0x01	; 1
    2dc0:	90 e0       	ldi	r25, 0x00	; 0
    2dc2:	9a a3       	std	Y+34, r25	; 0x22
    2dc4:	89 a3       	std	Y+33, r24	; 0x21
    2dc6:	3f c0       	rjmp	.+126    	; 0x2e46 <LEFT+0x740>
	else if (__tmp > 65535)
    2dc8:	6b a1       	ldd	r22, Y+35	; 0x23
    2dca:	7c a1       	ldd	r23, Y+36	; 0x24
    2dcc:	8d a1       	ldd	r24, Y+37	; 0x25
    2dce:	9e a1       	ldd	r25, Y+38	; 0x26
    2dd0:	20 e0       	ldi	r18, 0x00	; 0
    2dd2:	3f ef       	ldi	r19, 0xFF	; 255
    2dd4:	4f e7       	ldi	r20, 0x7F	; 127
    2dd6:	57 e4       	ldi	r21, 0x47	; 71
    2dd8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ddc:	18 16       	cp	r1, r24
    2dde:	4c f5       	brge	.+82     	; 0x2e32 <LEFT+0x72c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2de0:	6f a1       	ldd	r22, Y+39	; 0x27
    2de2:	78 a5       	ldd	r23, Y+40	; 0x28
    2de4:	89 a5       	ldd	r24, Y+41	; 0x29
    2de6:	9a a5       	ldd	r25, Y+42	; 0x2a
    2de8:	20 e0       	ldi	r18, 0x00	; 0
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	40 e2       	ldi	r20, 0x20	; 32
    2dee:	51 e4       	ldi	r21, 0x41	; 65
    2df0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2df4:	dc 01       	movw	r26, r24
    2df6:	cb 01       	movw	r24, r22
    2df8:	bc 01       	movw	r22, r24
    2dfa:	cd 01       	movw	r24, r26
    2dfc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e00:	dc 01       	movw	r26, r24
    2e02:	cb 01       	movw	r24, r22
    2e04:	9a a3       	std	Y+34, r25	; 0x22
    2e06:	89 a3       	std	Y+33, r24	; 0x21
    2e08:	0f c0       	rjmp	.+30     	; 0x2e28 <LEFT+0x722>
    2e0a:	88 ec       	ldi	r24, 0xC8	; 200
    2e0c:	90 e0       	ldi	r25, 0x00	; 0
    2e0e:	98 a3       	std	Y+32, r25	; 0x20
    2e10:	8f 8f       	std	Y+31, r24	; 0x1f
    2e12:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2e14:	98 a1       	ldd	r25, Y+32	; 0x20
    2e16:	01 97       	sbiw	r24, 0x01	; 1
    2e18:	f1 f7       	brne	.-4      	; 0x2e16 <LEFT+0x710>
    2e1a:	98 a3       	std	Y+32, r25	; 0x20
    2e1c:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e1e:	89 a1       	ldd	r24, Y+33	; 0x21
    2e20:	9a a1       	ldd	r25, Y+34	; 0x22
    2e22:	01 97       	sbiw	r24, 0x01	; 1
    2e24:	9a a3       	std	Y+34, r25	; 0x22
    2e26:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e28:	89 a1       	ldd	r24, Y+33	; 0x21
    2e2a:	9a a1       	ldd	r25, Y+34	; 0x22
    2e2c:	00 97       	sbiw	r24, 0x00	; 0
    2e2e:	69 f7       	brne	.-38     	; 0x2e0a <LEFT+0x704>
    2e30:	14 c0       	rjmp	.+40     	; 0x2e5a <LEFT+0x754>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e32:	6b a1       	ldd	r22, Y+35	; 0x23
    2e34:	7c a1       	ldd	r23, Y+36	; 0x24
    2e36:	8d a1       	ldd	r24, Y+37	; 0x25
    2e38:	9e a1       	ldd	r25, Y+38	; 0x26
    2e3a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e3e:	dc 01       	movw	r26, r24
    2e40:	cb 01       	movw	r24, r22
    2e42:	9a a3       	std	Y+34, r25	; 0x22
    2e44:	89 a3       	std	Y+33, r24	; 0x21
    2e46:	89 a1       	ldd	r24, Y+33	; 0x21
    2e48:	9a a1       	ldd	r25, Y+34	; 0x22
    2e4a:	9e 8f       	std	Y+30, r25	; 0x1e
    2e4c:	8d 8f       	std	Y+29, r24	; 0x1d
    2e4e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e50:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e52:	01 97       	sbiw	r24, 0x01	; 1
    2e54:	f1 f7       	brne	.-4      	; 0x2e52 <LEFT+0x74c>
    2e56:	9e 8f       	std	Y+30, r25	; 0x1e
    2e58:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(20);
	PORTA=0x40;
    2e5a:	eb e3       	ldi	r30, 0x3B	; 59
    2e5c:	f0 e0       	ldi	r31, 0x00	; 0
    2e5e:	80 e4       	ldi	r24, 0x40	; 64
    2e60:	80 83       	st	Z, r24
    2e62:	80 e0       	ldi	r24, 0x00	; 0
    2e64:	90 e0       	ldi	r25, 0x00	; 0
    2e66:	a0 ea       	ldi	r26, 0xA0	; 160
    2e68:	b1 e4       	ldi	r27, 0x41	; 65
    2e6a:	89 8f       	std	Y+25, r24	; 0x19
    2e6c:	9a 8f       	std	Y+26, r25	; 0x1a
    2e6e:	ab 8f       	std	Y+27, r26	; 0x1b
    2e70:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e72:	69 8d       	ldd	r22, Y+25	; 0x19
    2e74:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2e76:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2e78:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2e7a:	20 e0       	ldi	r18, 0x00	; 0
    2e7c:	30 e0       	ldi	r19, 0x00	; 0
    2e7e:	4a ef       	ldi	r20, 0xFA	; 250
    2e80:	54 e4       	ldi	r21, 0x44	; 68
    2e82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e86:	dc 01       	movw	r26, r24
    2e88:	cb 01       	movw	r24, r22
    2e8a:	8d 8b       	std	Y+21, r24	; 0x15
    2e8c:	9e 8b       	std	Y+22, r25	; 0x16
    2e8e:	af 8b       	std	Y+23, r26	; 0x17
    2e90:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2e92:	6d 89       	ldd	r22, Y+21	; 0x15
    2e94:	7e 89       	ldd	r23, Y+22	; 0x16
    2e96:	8f 89       	ldd	r24, Y+23	; 0x17
    2e98:	98 8d       	ldd	r25, Y+24	; 0x18
    2e9a:	20 e0       	ldi	r18, 0x00	; 0
    2e9c:	30 e0       	ldi	r19, 0x00	; 0
    2e9e:	40 e8       	ldi	r20, 0x80	; 128
    2ea0:	5f e3       	ldi	r21, 0x3F	; 63
    2ea2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ea6:	88 23       	and	r24, r24
    2ea8:	2c f4       	brge	.+10     	; 0x2eb4 <LEFT+0x7ae>
		__ticks = 1;
    2eaa:	81 e0       	ldi	r24, 0x01	; 1
    2eac:	90 e0       	ldi	r25, 0x00	; 0
    2eae:	9c 8b       	std	Y+20, r25	; 0x14
    2eb0:	8b 8b       	std	Y+19, r24	; 0x13
    2eb2:	3f c0       	rjmp	.+126    	; 0x2f32 <LEFT+0x82c>
	else if (__tmp > 65535)
    2eb4:	6d 89       	ldd	r22, Y+21	; 0x15
    2eb6:	7e 89       	ldd	r23, Y+22	; 0x16
    2eb8:	8f 89       	ldd	r24, Y+23	; 0x17
    2eba:	98 8d       	ldd	r25, Y+24	; 0x18
    2ebc:	20 e0       	ldi	r18, 0x00	; 0
    2ebe:	3f ef       	ldi	r19, 0xFF	; 255
    2ec0:	4f e7       	ldi	r20, 0x7F	; 127
    2ec2:	57 e4       	ldi	r21, 0x47	; 71
    2ec4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ec8:	18 16       	cp	r1, r24
    2eca:	4c f5       	brge	.+82     	; 0x2f1e <LEFT+0x818>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ecc:	69 8d       	ldd	r22, Y+25	; 0x19
    2ece:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2ed0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ed2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ed4:	20 e0       	ldi	r18, 0x00	; 0
    2ed6:	30 e0       	ldi	r19, 0x00	; 0
    2ed8:	40 e2       	ldi	r20, 0x20	; 32
    2eda:	51 e4       	ldi	r21, 0x41	; 65
    2edc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ee0:	dc 01       	movw	r26, r24
    2ee2:	cb 01       	movw	r24, r22
    2ee4:	bc 01       	movw	r22, r24
    2ee6:	cd 01       	movw	r24, r26
    2ee8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2eec:	dc 01       	movw	r26, r24
    2eee:	cb 01       	movw	r24, r22
    2ef0:	9c 8b       	std	Y+20, r25	; 0x14
    2ef2:	8b 8b       	std	Y+19, r24	; 0x13
    2ef4:	0f c0       	rjmp	.+30     	; 0x2f14 <LEFT+0x80e>
    2ef6:	88 ec       	ldi	r24, 0xC8	; 200
    2ef8:	90 e0       	ldi	r25, 0x00	; 0
    2efa:	9a 8b       	std	Y+18, r25	; 0x12
    2efc:	89 8b       	std	Y+17, r24	; 0x11
    2efe:	89 89       	ldd	r24, Y+17	; 0x11
    2f00:	9a 89       	ldd	r25, Y+18	; 0x12
    2f02:	01 97       	sbiw	r24, 0x01	; 1
    2f04:	f1 f7       	brne	.-4      	; 0x2f02 <LEFT+0x7fc>
    2f06:	9a 8b       	std	Y+18, r25	; 0x12
    2f08:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f0a:	8b 89       	ldd	r24, Y+19	; 0x13
    2f0c:	9c 89       	ldd	r25, Y+20	; 0x14
    2f0e:	01 97       	sbiw	r24, 0x01	; 1
    2f10:	9c 8b       	std	Y+20, r25	; 0x14
    2f12:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f14:	8b 89       	ldd	r24, Y+19	; 0x13
    2f16:	9c 89       	ldd	r25, Y+20	; 0x14
    2f18:	00 97       	sbiw	r24, 0x00	; 0
    2f1a:	69 f7       	brne	.-38     	; 0x2ef6 <LEFT+0x7f0>
    2f1c:	14 c0       	rjmp	.+40     	; 0x2f46 <LEFT+0x840>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f1e:	6d 89       	ldd	r22, Y+21	; 0x15
    2f20:	7e 89       	ldd	r23, Y+22	; 0x16
    2f22:	8f 89       	ldd	r24, Y+23	; 0x17
    2f24:	98 8d       	ldd	r25, Y+24	; 0x18
    2f26:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f2a:	dc 01       	movw	r26, r24
    2f2c:	cb 01       	movw	r24, r22
    2f2e:	9c 8b       	std	Y+20, r25	; 0x14
    2f30:	8b 8b       	std	Y+19, r24	; 0x13
    2f32:	8b 89       	ldd	r24, Y+19	; 0x13
    2f34:	9c 89       	ldd	r25, Y+20	; 0x14
    2f36:	98 8b       	std	Y+16, r25	; 0x10
    2f38:	8f 87       	std	Y+15, r24	; 0x0f
    2f3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f3c:	98 89       	ldd	r25, Y+16	; 0x10
    2f3e:	01 97       	sbiw	r24, 0x01	; 1
    2f40:	f1 f7       	brne	.-4      	; 0x2f3e <LEFT+0x838>
    2f42:	98 8b       	std	Y+16, r25	; 0x10
    2f44:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(20);
	PORTA=0x80;
    2f46:	eb e3       	ldi	r30, 0x3B	; 59
    2f48:	f0 e0       	ldi	r31, 0x00	; 0
    2f4a:	80 e8       	ldi	r24, 0x80	; 128
    2f4c:	80 83       	st	Z, r24
    2f4e:	80 e0       	ldi	r24, 0x00	; 0
    2f50:	90 e0       	ldi	r25, 0x00	; 0
    2f52:	a0 ea       	ldi	r26, 0xA0	; 160
    2f54:	b1 e4       	ldi	r27, 0x41	; 65
    2f56:	8b 87       	std	Y+11, r24	; 0x0b
    2f58:	9c 87       	std	Y+12, r25	; 0x0c
    2f5a:	ad 87       	std	Y+13, r26	; 0x0d
    2f5c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f5e:	6b 85       	ldd	r22, Y+11	; 0x0b
    2f60:	7c 85       	ldd	r23, Y+12	; 0x0c
    2f62:	8d 85       	ldd	r24, Y+13	; 0x0d
    2f64:	9e 85       	ldd	r25, Y+14	; 0x0e
    2f66:	20 e0       	ldi	r18, 0x00	; 0
    2f68:	30 e0       	ldi	r19, 0x00	; 0
    2f6a:	4a ef       	ldi	r20, 0xFA	; 250
    2f6c:	54 e4       	ldi	r21, 0x44	; 68
    2f6e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f72:	dc 01       	movw	r26, r24
    2f74:	cb 01       	movw	r24, r22
    2f76:	8f 83       	std	Y+7, r24	; 0x07
    2f78:	98 87       	std	Y+8, r25	; 0x08
    2f7a:	a9 87       	std	Y+9, r26	; 0x09
    2f7c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2f7e:	6f 81       	ldd	r22, Y+7	; 0x07
    2f80:	78 85       	ldd	r23, Y+8	; 0x08
    2f82:	89 85       	ldd	r24, Y+9	; 0x09
    2f84:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f86:	20 e0       	ldi	r18, 0x00	; 0
    2f88:	30 e0       	ldi	r19, 0x00	; 0
    2f8a:	40 e8       	ldi	r20, 0x80	; 128
    2f8c:	5f e3       	ldi	r21, 0x3F	; 63
    2f8e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2f92:	88 23       	and	r24, r24
    2f94:	2c f4       	brge	.+10     	; 0x2fa0 <LEFT+0x89a>
		__ticks = 1;
    2f96:	81 e0       	ldi	r24, 0x01	; 1
    2f98:	90 e0       	ldi	r25, 0x00	; 0
    2f9a:	9e 83       	std	Y+6, r25	; 0x06
    2f9c:	8d 83       	std	Y+5, r24	; 0x05
    2f9e:	3f c0       	rjmp	.+126    	; 0x301e <LEFT+0x918>
	else if (__tmp > 65535)
    2fa0:	6f 81       	ldd	r22, Y+7	; 0x07
    2fa2:	78 85       	ldd	r23, Y+8	; 0x08
    2fa4:	89 85       	ldd	r24, Y+9	; 0x09
    2fa6:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fa8:	20 e0       	ldi	r18, 0x00	; 0
    2faa:	3f ef       	ldi	r19, 0xFF	; 255
    2fac:	4f e7       	ldi	r20, 0x7F	; 127
    2fae:	57 e4       	ldi	r21, 0x47	; 71
    2fb0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fb4:	18 16       	cp	r1, r24
    2fb6:	4c f5       	brge	.+82     	; 0x300a <LEFT+0x904>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fb8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2fba:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fbc:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fbe:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fc0:	20 e0       	ldi	r18, 0x00	; 0
    2fc2:	30 e0       	ldi	r19, 0x00	; 0
    2fc4:	40 e2       	ldi	r20, 0x20	; 32
    2fc6:	51 e4       	ldi	r21, 0x41	; 65
    2fc8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fcc:	dc 01       	movw	r26, r24
    2fce:	cb 01       	movw	r24, r22
    2fd0:	bc 01       	movw	r22, r24
    2fd2:	cd 01       	movw	r24, r26
    2fd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2fd8:	dc 01       	movw	r26, r24
    2fda:	cb 01       	movw	r24, r22
    2fdc:	9e 83       	std	Y+6, r25	; 0x06
    2fde:	8d 83       	std	Y+5, r24	; 0x05
    2fe0:	0f c0       	rjmp	.+30     	; 0x3000 <LEFT+0x8fa>
    2fe2:	88 ec       	ldi	r24, 0xC8	; 200
    2fe4:	90 e0       	ldi	r25, 0x00	; 0
    2fe6:	9c 83       	std	Y+4, r25	; 0x04
    2fe8:	8b 83       	std	Y+3, r24	; 0x03
    2fea:	8b 81       	ldd	r24, Y+3	; 0x03
    2fec:	9c 81       	ldd	r25, Y+4	; 0x04
    2fee:	01 97       	sbiw	r24, 0x01	; 1
    2ff0:	f1 f7       	brne	.-4      	; 0x2fee <LEFT+0x8e8>
    2ff2:	9c 83       	std	Y+4, r25	; 0x04
    2ff4:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ff6:	8d 81       	ldd	r24, Y+5	; 0x05
    2ff8:	9e 81       	ldd	r25, Y+6	; 0x06
    2ffa:	01 97       	sbiw	r24, 0x01	; 1
    2ffc:	9e 83       	std	Y+6, r25	; 0x06
    2ffe:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3000:	8d 81       	ldd	r24, Y+5	; 0x05
    3002:	9e 81       	ldd	r25, Y+6	; 0x06
    3004:	00 97       	sbiw	r24, 0x00	; 0
    3006:	69 f7       	brne	.-38     	; 0x2fe2 <LEFT+0x8dc>
    3008:	14 c0       	rjmp	.+40     	; 0x3032 <LEFT+0x92c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    300a:	6f 81       	ldd	r22, Y+7	; 0x07
    300c:	78 85       	ldd	r23, Y+8	; 0x08
    300e:	89 85       	ldd	r24, Y+9	; 0x09
    3010:	9a 85       	ldd	r25, Y+10	; 0x0a
    3012:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3016:	dc 01       	movw	r26, r24
    3018:	cb 01       	movw	r24, r22
    301a:	9e 83       	std	Y+6, r25	; 0x06
    301c:	8d 83       	std	Y+5, r24	; 0x05
    301e:	8d 81       	ldd	r24, Y+5	; 0x05
    3020:	9e 81       	ldd	r25, Y+6	; 0x06
    3022:	9a 83       	std	Y+2, r25	; 0x02
    3024:	89 83       	std	Y+1, r24	; 0x01
    3026:	89 81       	ldd	r24, Y+1	; 0x01
    3028:	9a 81       	ldd	r25, Y+2	; 0x02
    302a:	01 97       	sbiw	r24, 0x01	; 1
    302c:	f1 f7       	brne	.-4      	; 0x302a <LEFT+0x924>
    302e:	9a 83       	std	Y+2, r25	; 0x02
    3030:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(20);
}
    3032:	c0 59       	subi	r28, 0x90	; 144
    3034:	df 4f       	sbci	r29, 0xFF	; 255
    3036:	0f b6       	in	r0, 0x3f	; 63
    3038:	f8 94       	cli
    303a:	de bf       	out	0x3e, r29	; 62
    303c:	0f be       	out	0x3f, r0	; 63
    303e:	cd bf       	out	0x3d, r28	; 61
    3040:	cf 91       	pop	r28
    3042:	df 91       	pop	r29
    3044:	1f 91       	pop	r17
    3046:	0f 91       	pop	r16
    3048:	08 95       	ret

0000304a <main>:
void main (void)
{
    304a:	df 93       	push	r29
    304c:	cf 93       	push	r28
    304e:	cd b7       	in	r28, 0x3d	; 61
    3050:	de b7       	in	r29, 0x3e	; 62
	DDRA=0xff;
    3052:	ea e3       	ldi	r30, 0x3A	; 58
    3054:	f0 e0       	ldi	r31, 0x00	; 0
    3056:	8f ef       	ldi	r24, 0xFF	; 255
    3058:	80 83       	st	Z, r24
	PORTA=0x00;
    305a:	eb e3       	ldi	r30, 0x3B	; 59
    305c:	f0 e0       	ldi	r31, 0x00	; 0
    305e:	10 82       	st	Z, r1
	DDRB=0xff;
    3060:	e7 e3       	ldi	r30, 0x37	; 55
    3062:	f0 e0       	ldi	r31, 0x00	; 0
    3064:	8f ef       	ldi	r24, 0xFF	; 255
    3066:	80 83       	st	Z, r24
	PORTB=0x00;
    3068:	e8 e3       	ldi	r30, 0x38	; 56
    306a:	f0 e0       	ldi	r31, 0x00	; 0
    306c:	10 82       	st	Z, r1
	while(1)
	{

		DOWN();
    306e:	0e 94 3e 0a 	call	0x147c	; 0x147c <DOWN>
		UP();
    3072:	0e 94 9b 05 	call	0xb36	; 0xb36 <UP>
		Right();
    3076:	0e 94 e1 0e 	call	0x1dc2	; 0x1dc2 <Right>
		LEFT();
    307a:	0e 94 83 13 	call	0x2706	; 0x2706 <LEFT>
    307e:	f7 cf       	rjmp	.-18     	; 0x306e <main+0x24>

00003080 <__prologue_saves__>:
    3080:	2f 92       	push	r2
    3082:	3f 92       	push	r3
    3084:	4f 92       	push	r4
    3086:	5f 92       	push	r5
    3088:	6f 92       	push	r6
    308a:	7f 92       	push	r7
    308c:	8f 92       	push	r8
    308e:	9f 92       	push	r9
    3090:	af 92       	push	r10
    3092:	bf 92       	push	r11
    3094:	cf 92       	push	r12
    3096:	df 92       	push	r13
    3098:	ef 92       	push	r14
    309a:	ff 92       	push	r15
    309c:	0f 93       	push	r16
    309e:	1f 93       	push	r17
    30a0:	cf 93       	push	r28
    30a2:	df 93       	push	r29
    30a4:	cd b7       	in	r28, 0x3d	; 61
    30a6:	de b7       	in	r29, 0x3e	; 62
    30a8:	ca 1b       	sub	r28, r26
    30aa:	db 0b       	sbc	r29, r27
    30ac:	0f b6       	in	r0, 0x3f	; 63
    30ae:	f8 94       	cli
    30b0:	de bf       	out	0x3e, r29	; 62
    30b2:	0f be       	out	0x3f, r0	; 63
    30b4:	cd bf       	out	0x3d, r28	; 61
    30b6:	09 94       	ijmp

000030b8 <__epilogue_restores__>:
    30b8:	2a 88       	ldd	r2, Y+18	; 0x12
    30ba:	39 88       	ldd	r3, Y+17	; 0x11
    30bc:	48 88       	ldd	r4, Y+16	; 0x10
    30be:	5f 84       	ldd	r5, Y+15	; 0x0f
    30c0:	6e 84       	ldd	r6, Y+14	; 0x0e
    30c2:	7d 84       	ldd	r7, Y+13	; 0x0d
    30c4:	8c 84       	ldd	r8, Y+12	; 0x0c
    30c6:	9b 84       	ldd	r9, Y+11	; 0x0b
    30c8:	aa 84       	ldd	r10, Y+10	; 0x0a
    30ca:	b9 84       	ldd	r11, Y+9	; 0x09
    30cc:	c8 84       	ldd	r12, Y+8	; 0x08
    30ce:	df 80       	ldd	r13, Y+7	; 0x07
    30d0:	ee 80       	ldd	r14, Y+6	; 0x06
    30d2:	fd 80       	ldd	r15, Y+5	; 0x05
    30d4:	0c 81       	ldd	r16, Y+4	; 0x04
    30d6:	1b 81       	ldd	r17, Y+3	; 0x03
    30d8:	aa 81       	ldd	r26, Y+2	; 0x02
    30da:	b9 81       	ldd	r27, Y+1	; 0x01
    30dc:	ce 0f       	add	r28, r30
    30de:	d1 1d       	adc	r29, r1
    30e0:	0f b6       	in	r0, 0x3f	; 63
    30e2:	f8 94       	cli
    30e4:	de bf       	out	0x3e, r29	; 62
    30e6:	0f be       	out	0x3f, r0	; 63
    30e8:	cd bf       	out	0x3d, r28	; 61
    30ea:	ed 01       	movw	r28, r26
    30ec:	08 95       	ret

000030ee <_exit>:
    30ee:	f8 94       	cli

000030f0 <__stop_program>:
    30f0:	ff cf       	rjmp	.-2      	; 0x30f0 <__stop_program>
